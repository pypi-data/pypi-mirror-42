from datetime import datetime
from typing import Any, Dict, List, Optional, Union

from django.contrib.sites.models import Site
from django.contrib.sites.requests import RequestSite
from django.core.paginator import Paginator
from django.db.models.base import Model
from django.db.models.query import QuerySet

PING_URL: str

class SitemapNotFound(Exception): ...

def ping_google(sitemap_url: None = ..., ping_url: str = ...) -> None: ...

class Sitemap:
    limit: int = ...
    protocol: Any = ...
    def items(self) -> List[Any]: ...
    def location(self, obj: Model) -> str: ...
    @property
    def paginator(self) -> Paginator: ...
    def get_urls(
        self, page: Union[int, str] = ..., site: Optional[Union[Site, RequestSite]] = ..., protocol: Optional[str] = ...
    ) -> List[Dict[str, Optional[Union[datetime, Model, str]]]]: ...

class GenericSitemap(Sitemap):
    priority: None = ...
    changefreq: None = ...
    queryset: QuerySet = ...
    date_field: None = ...
    protocol: None = ...
    def __init__(
        self,
        info_dict: Dict[str, Union[datetime, QuerySet, str]],
        priority: Optional[float] = ...,
        changefreq: Optional[str] = ...,
        protocol: Optional[str] = ...,
    ) -> None: ...
    def items(self) -> QuerySet: ...
    def lastmod(self, item: Model) -> Optional[datetime]: ...

default_app_config: str
