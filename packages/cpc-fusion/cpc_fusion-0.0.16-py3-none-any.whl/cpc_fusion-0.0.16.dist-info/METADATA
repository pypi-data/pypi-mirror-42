Metadata-Version: 2.0
Name: cpc-fusion
Version: 0.0.16
Summary: CPC Fusion
Home-page: https://bitbucket.org/cpchain/fusion/
Author: Piper Merriam , CPChain
Author-email: wujj@cpchain.io
License: MIT
Keywords: ethereum
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Requires-Python: >=3.5.3,<4
Provides-Extra: docs
Provides-Extra: tester
Provides-Extra: dev
Provides-Extra: linter
Provides-Extra: testrpc
Requires-Dist: eth-abi (>=1.2.0)
Requires-Dist: eth-account (<0.4.0,>=0.2.1)
Requires-Dist: eth-utils (<2.0.0,>=1.2.0)
Requires-Dist: hexbytes (<1.0.0,>=0.1.0)
Requires-Dist: lru-dict (<2.0.0,>=1.1.6)
Requires-Dist: eth-hash[pycryptodome] (<1.0.0,>=0.2.0)
Requires-Dist: requests (<3.0.0,>=2.16.0)
Requires-Dist: websockets (<=7.0.0,>=6.0.0)
Requires-Dist: cytoolz (<1.0.0,>=0.9.0); implementation_name == "cpython"
Requires-Dist: toolz (<1.0.0,>=0.9.0); implementation_name == "pypy"
Requires-Dist: pypiwin32 (>=223); platform_system == "Windows"
Provides-Extra: dev
Requires-Dist: eth-tester[py-evm] (==0.1.0-beta.32); extra == 'dev'
Requires-Dist: py-geth (<3.0.0,>=2.0.1); extra == 'dev'
Requires-Dist: flake8 (==3.4.1); extra == 'dev'
Requires-Dist: isort (<5,>=4.2.15); extra == 'dev'
Requires-Dist: mock; extra == 'dev'
Requires-Dist: sphinx-better-theme (>=0.1.4); extra == 'dev'
Requires-Dist: click (>=5.1); extra == 'dev'
Requires-Dist: configparser (==3.5.0); extra == 'dev'
Requires-Dist: contextlib2 (>=0.5.4); extra == 'dev'
Requires-Dist: ethtoken; extra == 'dev'
Requires-Dist: py-geth (>=1.4.0); extra == 'dev'
Requires-Dist: py-solc (>=0.4.0); extra == 'dev'
Requires-Dist: pytest (>=2.7.2); extra == 'dev'
Requires-Dist: sphinx; extra == 'dev'
Requires-Dist: sphinx-rtd-theme (>=0.1.9); extra == 'dev'
Requires-Dist: toposort (>=1.4); extra == 'dev'
Requires-Dist: urllib3; extra == 'dev'
Requires-Dist: web3 (>=2.1.0); extra == 'dev'
Requires-Dist: wheel; extra == 'dev'
Requires-Dist: bumpversion; extra == 'dev'
Requires-Dist: flaky (>=3.3.0); extra == 'dev'
Requires-Dist: hypothesis (>=3.31.2); extra == 'dev'
Requires-Dist: pytest (<4,>=3.5.0); extra == 'dev'
Requires-Dist: pytest-mock (==1.*); extra == 'dev'
Requires-Dist: pytest-pythonpath (>=0.3); extra == 'dev'
Requires-Dist: pytest-watch (==4.*); extra == 'dev'
Requires-Dist: pytest-xdist (==1.*); extra == 'dev'
Requires-Dist: setuptools (>=36.2.0); extra == 'dev'
Requires-Dist: tox (>=1.8.0); extra == 'dev'
Requires-Dist: tqdm; extra == 'dev'
Requires-Dist: when-changed; extra == 'dev'
Provides-Extra: docs
Requires-Dist: mock; extra == 'docs'
Requires-Dist: sphinx-better-theme (>=0.1.4); extra == 'docs'
Requires-Dist: click (>=5.1); extra == 'docs'
Requires-Dist: configparser (==3.5.0); extra == 'docs'
Requires-Dist: contextlib2 (>=0.5.4); extra == 'docs'
Requires-Dist: ethtoken; extra == 'docs'
Requires-Dist: py-geth (>=1.4.0); extra == 'docs'
Requires-Dist: py-solc (>=0.4.0); extra == 'docs'
Requires-Dist: pytest (>=2.7.2); extra == 'docs'
Requires-Dist: sphinx; extra == 'docs'
Requires-Dist: sphinx-rtd-theme (>=0.1.9); extra == 'docs'
Requires-Dist: toposort (>=1.4); extra == 'docs'
Requires-Dist: urllib3; extra == 'docs'
Requires-Dist: web3 (>=2.1.0); extra == 'docs'
Requires-Dist: wheel; extra == 'docs'
Provides-Extra: linter
Requires-Dist: flake8 (==3.4.1); extra == 'linter'
Requires-Dist: isort (<5,>=4.2.15); extra == 'linter'
Provides-Extra: tester
Requires-Dist: eth-tester[py-evm] (==0.1.0-beta.32); extra == 'tester'
Requires-Dist: py-geth (<3.0.0,>=2.0.1); extra == 'tester'
Provides-Extra: testrpc
Requires-Dist: eth-testrpc (<2.0.0,>=1.3.3); extra == 'testrpc'

# Fusion API
![](https://github.com/CPChain/fusion/raw/master/fusion.png)

![](https://img.shields.io/badge/language-python3-orange.svg)[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)[![Pull Requests](https://img.shields.io/bitbucket/pr-raw/cpchain/chain.svg)](https://bitbucket.org/cpchain/chain/pull-requests/)[![Follow Twitter](https://img.shields.io/twitter/follow/cpchain_io.svg?label=Follow&style=social)](https://twitter.com/intent/follow?screen_name=cpchain_io)

A Python package based on  [web3.py](https://github.com/ethereum/web3.py) to interact with cpchain.

- Python 3.5+ support


## Installation

cpc_fusion.py can be installed (preferably in a virtualenv) using `pip` as follows:

```
$ pip install cpc-fusion
```

Installation from source can be done from the root of the project with the following command.

```
$ pip install .
```

## Using Fusion

To use the web3 library you will need to initialize the `Web3` class.

Use the `auto` module to guess at common node connection options.

```
>>> from cpc_fusion import Web3
>>> cf = Web3(Web3.HTTPProvider('http://127.0.0.1:8501'))
>>> cf.cpc.blockNumber
34341
```

Note

If you get the result `UnhandledRequest: No providers responded to the RPC request` then you are not connected to a node.


Read more in the [documentation on CPChain](http://docs.cpchain.io/).

