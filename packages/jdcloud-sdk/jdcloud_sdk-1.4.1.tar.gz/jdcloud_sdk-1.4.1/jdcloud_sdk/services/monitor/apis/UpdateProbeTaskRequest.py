# coding=utf8

# Copyright 2018 JDCLOUD.COM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This class is auto generated by the jdcloud code generator program.

from jdcloud_sdk.core.jdcloudrequest import JDCloudRequest


class UpdateProbeTaskRequest(JDCloudRequest):
    """
    修改可用性监控任务
    """

    def __init__(self, parameters, header=None, version="v1"):
        super(UpdateProbeTaskRequest, self).__init__(
            '/am/probeTask/{probeTaskID}', 'PATCH', header, version)
        self.parameters = parameters


class UpdateProbeTaskParameters(object):

    def __init__(self, probeTaskID, probes, ):
        """
        :param probeTaskID: 探测任务的task_id
        :param probes: 探测源（发起对探测目标探测的云主机，需安装相应的agent才能探测）
        """

        self.probeTaskID = probeTaskID
        self.address = None
        self.frequency = None
        self.httpBody = None
        self.httpCookie = None
        self.httpHeader = None
        self.name = None
        self.port = None
        self.probes = probes
        self.targetId = None
        self.targetRegion = None
        self.timeout = None

    def setAddress(self, address):
        """
        :param address: (Optional) 探测地址，探测类型为http：内容为url（校验http或https头）；探测类型为telnet：内容为ip或域名（只允许中英文 、数字、中划线（-）、小数点（.）、开头及结尾均不能含有“-”）
        """
        self.address = address

    def setFrequency(self, frequency):
        """
        :param frequency: (Optional) 探测间隔（单位：秒）：默认值：300，取值范围[60,1200]
        """
        self.frequency = frequency

    def setHttpBody(self, httpBody):
        """
        :param httpBody: (Optional) http body：选择探测类型为1=http时有效，最长不超过1024字节
        """
        self.httpBody = httpBody

    def setHttpCookie(self, httpCookie):
        """
        :param httpCookie: (Optional) http cookie：选择探测类型为1=http时有效，最大允许20个key、value对，最长不超过1024字节
        """
        self.httpCookie = httpCookie

    def setHttpHeader(self, httpHeader):
        """
        :param httpHeader: (Optional) http header：选择探测类型为1=http时有效，最大允许20个key、value对，最长不超过1024字节
        """
        self.httpHeader = httpHeader

    def setName(self, name):
        """
        :param name: (Optional) task名称，不允许重复，长度不超过32字符，只允许中英文、数字、下划线_、中划线-, [0-9][a-z] [A-Z] [- _ ]
        """
        self.name = name

    def setPort(self, port):
        """
        :param port: (Optional) 探测端口，探测类型为telnet时必填，取值范围 [1-65535]，http类型忽略该参数
        """
        self.port = port

    def setTargetId(self, targetId):
        """
        :param targetId: (Optional) 探测目标id：该探测对象的uuid，任务类型为2：rds、3：redis时必填，
        """
        self.targetId = targetId

    def setTargetRegion(self, targetRegion):
        """
        :param targetRegion: (Optional) 探测目标region：该探测对象所在region，任务类型为2：rds、3：redis时必填
        """
        self.targetRegion = targetRegion

    def setTimeout(self, timeout):
        """
        :param timeout: (Optional) 探测超时时间（单位：秒）：默认值:5，取值范围 [1,300]
        """
        self.timeout = timeout

