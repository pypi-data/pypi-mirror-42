Metadata-Version: 2.1
Name: TokenIO
Version: 0.0.1a3
Summary: Python SDK for interacting with the Token System
Home-page: https://github.com/overcat/token-io
Author: overcat
Author-email: 4catcode@gmail.com
License: MIT License
Keywords: token,token_io
Platform: any
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.5
Description-Content-Type: text/markdown
Requires-Dist: base58 (==1.0.3)
Requires-Dist: protobuf (==3.6.1)
Requires-Dist: grpcio (==1.18.0)
Requires-Dist: ed25519 (==1.4) ; sys_platform != "win32" and sys_platform != "cygwin"
Requires-Dist: pure25519 (==0.0.1) ; sys_platform == "win32" or sys_platform == "cygwin"

# [Token](https://token.io) Python SDK

![PyPI](https://img.shields.io/pypi/v/TokenIO.svg?style=popout-square)

**The SDK is still under development, might be unstable, use at your own risk.**

The Python SDK for interacting with [TokenOS](https://developer.token.io/).

## Requirements

Python 3.5+

## Installation

```shell
$ pip install tokenio
```


## Example

```python
from tokenio import TokenClient
from tokenio.config import SandboxConfig
from tokenio.security.engines.memorycryptoengine import MemoryCryptoEngine
from tokenio.proto.alias_pb2 import Alias

dev_key = '4qY7lqQw8NOl9gng0ZHgT4xdiDqxqoGVutuZwrUYQsI'
config = SandboxConfig(dev_key=dev_key, crypto_engine=MemoryCryptoEngine)
client = TokenClient(config)

alias = Alias(type=Alias.EMAIL, value='your-email-address@example.com')
member = client.create_member(alias)
keys = member.get_keys()
print(keys)
```


