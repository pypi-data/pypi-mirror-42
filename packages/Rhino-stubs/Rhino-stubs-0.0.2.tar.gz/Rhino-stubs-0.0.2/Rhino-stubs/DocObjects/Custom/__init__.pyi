from typing import Tuple, Set, Iterable, List

class UserData:
    def Dispose (self) -> None: ...
    @property
    def Description (self) -> str: ...
    @property
    def ShouldWrite (self) -> bool: ...
    def Copy (source : CommonObject, destination : CommonObject) -> None: ...
    def MoveUserDataFrom (objectWithUserData : CommonObject) -> Guid: ...
    def MoveUserDataTo (objectToGetUserData : CommonObject, id : Guid, append : bool) -> None: ...
    @property
    def Transform (self) -> Transform: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class UnknownUserData:
    def __init__(self, pointerNativeUserData : IntPtr): ...
    def Dispose (self) -> None: ...
    @property
    def Description (self) -> str: ...
    @property
    def ShouldWrite (self) -> bool: ...
    @property
    def Transform (self) -> Transform: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class UserDataListEnumerator:
    def __init__(self, udl : UserDataList): ...
    @property
    def Current (self) -> UserData: ...
    def Dispose (self) -> None: ...
    def MoveNext (self) -> bool: ...
    def Reset (self) -> None: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class UserDataList:
    @property
    def Count (self) -> int: ...
    def Add (self, userdata : UserData) -> bool: ...
    def Remove (self, userdata : UserData) -> bool: ...
    def Find (self, userdataType : Type) -> UserData: ...
    @property
    def Item (self, index : int) -> UserData: ...
    def Contains (self, userdataId : Guid) -> bool: ...
    def GetEnumerator (self) -> IEnumerator: ...
    def Purge (self) -> None: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class UserDictionary:
    def __init__(self): ...
    @property
    def Dictionary (self) -> ArchivableDictionary: ...
    @property
    def Description (self) -> str: ...
    @property
    def ShouldWrite (self) -> bool: ...
    def Dispose (self) -> None: ...
    @property
    def Transform (self) -> Transform: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class ClassIdAttribute:
    def __init__(self, id : str): ...
    @property
    def Id (self) -> Guid: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    @property
    def TypeId (self) -> Object: ...
    def Match (self, obj : Object) -> bool: ...
    def IsDefaultAttribute (self) -> bool: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class CustomBrepObject:
    @property
    def BrepGeometry (self) -> Brep: ...
    def DuplicateBrepGeometry (self) -> Brep: ...
    def IsMeshable (self, meshType : MeshType) -> bool: ...
    def GetRenderMeshParameters (self) -> MeshingParameters: ...
    def MeshCount (self, meshType : MeshType, parameters : MeshingParameters) -> int: ...
    def CreateMeshes (self, meshType : MeshType, parameters : MeshingParameters, ignoreCustomParameters : bool) -> int: ...
    def GetMeshes (self, meshType : MeshType) -> Set(Mesh): ...
    def SupportsRenderPrimitiveList (self, viewport : ViewportInfo, preview : bool) -> bool: ...
    def SupportsRenderPrimitiveList (self, viewport : ViewportInfo, attrs : DisplayPipelineAttributes) -> bool: ...
    def GetRenderPrimitiveList (self, viewport : ViewportInfo, preview : bool) -> RenderPrimitiveList: ...
    def GetRenderPrimitiveList (self, viewport : ViewportInfo, attrs : DisplayPipelineAttributes) -> RenderPrimitiveList: ...
    def TryGetRenderPrimitiveBoundingBox (self, viewport : ViewportInfo, preview : bool) -> Tuple[bool, BoundingBox]: ...
    def TryGetRenderPrimitiveBoundingBox (self, viewport : ViewportInfo, attrs : DisplayPipelineAttributes) -> Tuple[bool, BoundingBox]: ...
    def GetSubObjects (self) -> Set(RhinoObject): ...
    @property
    def HasDynamicTransform (self) -> bool: ...
    def GetDynamicTransform (self) -> Tuple[bool, Transform]: ...
    def GetTextureMapping (self, channel : int) -> TextureMapping: ...
    def GetTextureMapping (self, channel : int) -> Tuple[TextureMapping, Transform]: ...
    def SetTextureMapping (self, channel : int, tm : TextureMapping) -> int: ...
    def HasTextureMapping (self) -> bool: ...
    def GetTextureChannels (self) -> Set(int): ...
    @property
    def RenderMaterial (self) -> RenderMaterial: ...
    @RenderMaterial.setter
    def RenderMaterial (self, value : RenderMaterial) -> None: ...
    def GetRenderMaterial (self, frontMaterial : bool) -> RenderMaterial: ...
    def GetRenderMaterial (self, componentIndex : ComponentIndex, plugInId : Guid, attributes : ObjectAttributes) -> RenderMaterial: ...
    def GetRenderMaterial (self, componentIndex : ComponentIndex, plugInId : Guid) -> RenderMaterial: ...
    def GetRenderMaterial (self, componentIndex : ComponentIndex) -> RenderMaterial: ...
    @property
    def HasSubobjectMaterials (self) -> bool: ...
    @property
    def SubobjectMaterialComponents (self) -> Set(ComponentIndex): ...
    @property
    def ComponentType (self) -> ModelComponentType: ...
    def GetMaterial (self, frontMaterial : bool) -> Material: ...
    def GetMaterial (self, componentIndex : ComponentIndex, plugInId : Guid, attributes : ObjectAttributes) -> Material: ...
    def GetMaterial (self, componentIndex : ComponentIndex, plugInId : Guid) -> Material: ...
    def GetMaterial (self, componentIndex : ComponentIndex) -> Material: ...
    def GetCustomRenderMeshParameter (self, providerId : Guid, parameterName : str) -> IConvertible: ...
    def SetCustomRenderMeshParameter (self, providerId : Guid, parameterName : str, value : Object) -> None: ...
    def IsActiveInViewport (self, viewport : RhinoViewport) -> bool: ...
    @property
    def ObjectType (self) -> ObjectType: ...
    @property
    def Document (self) -> RhinoDoc: ...
    @property
    def Geometry (self) -> GeometryBase: ...
    @property
    def Attributes (self) -> ObjectAttributes: ...
    @Attributes.setter
    def Attributes (self, value : ObjectAttributes) -> None: ...
    @property
    def RuntimeSerialNumber (self) -> UInt32: ...
    @property
    def IsDeletable (self) -> bool: ...
    @property
    def IsDeleted (self) -> bool: ...
    @property
    def IsInstanceDefinitionGeometry (self) -> bool: ...
    @property
    def IsNormal (self) -> bool: ...
    @property
    def IsLocked (self) -> bool: ...
    @property
    def IsHidden (self) -> bool: ...
    @property
    def IsReference (self) -> bool: ...
    @property
    def WorksessionReferenceSerialNumber (self) -> UInt32: ...
    @property
    def ReferenceModelSerialNumber (self) -> UInt32: ...
    @property
    def InstanceDefinitionModelSerialNumber (self) -> UInt32: ...
    @property
    def Visible (self) -> bool: ...
    def DuplicateGeometry (self) -> GeometryBase: ...
    def CommitChanges (self) -> bool: ...
    def MemoryEstimate (self) -> UInt32: ...
    @property
    def Id (self) -> Guid: ...
    @Id.setter
    def Id (self, value : Guid) -> None: ...
    @property
    def Name (self) -> str: ...
    @Name.setter
    def Name (self, value : str) -> None: ...
    @property
    def GroupCount (self) -> int: ...
    def GetGroupList (self) -> Set(int): ...
    def IsSelected (self, checkSubObjects : bool) -> int: ...
    def IsSubObjectSelected (self, componentIndex : ComponentIndex) -> bool: ...
    def GetSelectedSubObjects (self) -> Set(ComponentIndex): ...
    def IsSelectable (self, ignoreSelectionState : bool, ignoreGripsState : bool, ignoreLayerLocking : bool, ignoreLayerVisibility : bool) -> bool: ...
    def IsSelectable (self) -> bool: ...
    def IsSubObjectSelectable (self, componentIndex : ComponentIndex, ignoreSelectionState : bool) -> bool: ...
    def Select (self, on : bool, syncHighlight : bool, persistentSelect : bool, ignoreGripsState : bool, ignoreLayerLocking : bool, ignoreLayerVisibility : bool) -> int: ...
    def Select (self, on : bool) -> int: ...
    def Select (self, on : bool, syncHighlight : bool) -> int: ...
    def SelectSubObject (self, componentIndex : ComponentIndex, select : bool, syncHighlight : bool) -> int: ...
    def SelectSubObject (self, componentIndex : ComponentIndex, select : bool, syncHighlight : bool, persistentSelect : bool) -> int: ...
    def UnselectAllSubObjects (self) -> int: ...
    def IsHighlighted (self, checkSubObjects : bool) -> int: ...
    def Highlight (self, enable : bool) -> bool: ...
    def IsSubObjectHighlighted (self, componentIndex : ComponentIndex) -> bool: ...
    def GetHighlightedSubObjects (self) -> Set(ComponentIndex): ...
    def HighlightSubObject (self, componentIndex : ComponentIndex, highlight : bool) -> bool: ...
    def UnhighlightAllSubObjects (self) -> int: ...
    @property
    def GripsOn (self) -> bool: ...
    @GripsOn.setter
    def GripsOn (self, value : bool) -> None: ...
    @property
    def GripsSelected (self) -> bool: ...
    def EnableCustomGrips (self, customGrips : CustomObjectGrips) -> bool: ...
    def GetGrips (self) -> Set(GripObject): ...
    def EnableVisualAnalysisMode (self, mode : VisualAnalysisMode, enable : bool) -> bool: ...
    def InVisualAnalysisMode (self) -> bool: ...
    def InVisualAnalysisMode (self, mode : VisualAnalysisMode) -> bool: ...
    def GetActiveVisualAnalysisModes (self) -> Set(VisualAnalysisMode): ...
    def ShortDescription (self, plural : bool) -> str: ...
    def Description (self, textLog : TextLog) -> None: ...
    def DataCRC (self, currentRemainder : UInt32) -> UInt32: ...
    @property
    def IsSystemComponent (self) -> bool: ...
    def ClearId (self) -> None: ...
    @property
    def HasId (self) -> bool: ...
    @property
    def IdIsLocked (self) -> bool: ...
    def LockId (self) -> None: ...
    @property
    def Index (self) -> int: ...
    @Index.setter
    def Index (self, value : int) -> None: ...
    def ClearIndex (self) -> None: ...
    @property
    def HasIndex (self) -> bool: ...
    @property
    def IndexIsLocked (self) -> bool: ...
    def LockIndex (self) -> None: ...
    @property
    def ComponentStatus (self) -> ComponentStatus: ...
    @ComponentStatus.setter
    def ComponentStatus (self, value : ComponentStatus) -> None: ...
    @property
    def IsComponentStatusLocked (self) -> bool: ...
    def ClearName (self) -> None: ...
    @property
    def HasName (self) -> bool: ...
    @property
    def NameIsLocked (self) -> bool: ...
    def LockName (self) -> None: ...
    @property
    def DeletedName (self) -> str: ...
    @property
    def ModelSerialNumber (self) -> UInt32: ...
    def ToString (self) -> str: ...
    def EnsurePrivateCopy (self) -> None: ...
    @property
    def IsDocumentControlled (self) -> bool: ...
    @property
    def IsValid (self) -> bool: ...
    def IsValidWithLog (self) -> Tuple[bool, str]: ...
    def Dispose (self) -> None: ...
    @property
    def Disposed (self) -> bool: ...
    @property
    def HasUserData (self) -> bool: ...
    @property
    def UserData (self) -> UserDataList: ...
    @property
    def UserDictionary (self) -> ArchivableDictionary: ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext) -> None: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class CustomCurveObject:
    def Dispose (self) -> None: ...
    @property
    def CurveGeometry (self) -> Curve: ...
    def DuplicateCurveGeometry (self) -> Curve: ...
    def IsMeshable (self, meshType : MeshType) -> bool: ...
    def GetRenderMeshParameters (self) -> MeshingParameters: ...
    def MeshCount (self, meshType : MeshType, parameters : MeshingParameters) -> int: ...
    def CreateMeshes (self, meshType : MeshType, parameters : MeshingParameters, ignoreCustomParameters : bool) -> int: ...
    def GetMeshes (self, meshType : MeshType) -> Set(Mesh): ...
    def SupportsRenderPrimitiveList (self, viewport : ViewportInfo, preview : bool) -> bool: ...
    def SupportsRenderPrimitiveList (self, viewport : ViewportInfo, attrs : DisplayPipelineAttributes) -> bool: ...
    def GetRenderPrimitiveList (self, viewport : ViewportInfo, preview : bool) -> RenderPrimitiveList: ...
    def GetRenderPrimitiveList (self, viewport : ViewportInfo, attrs : DisplayPipelineAttributes) -> RenderPrimitiveList: ...
    def TryGetRenderPrimitiveBoundingBox (self, viewport : ViewportInfo, preview : bool) -> Tuple[bool, BoundingBox]: ...
    def TryGetRenderPrimitiveBoundingBox (self, viewport : ViewportInfo, attrs : DisplayPipelineAttributes) -> Tuple[bool, BoundingBox]: ...
    def GetSubObjects (self) -> Set(RhinoObject): ...
    @property
    def HasDynamicTransform (self) -> bool: ...
    def GetDynamicTransform (self) -> Tuple[bool, Transform]: ...
    def GetTextureMapping (self, channel : int) -> TextureMapping: ...
    def GetTextureMapping (self, channel : int) -> Tuple[TextureMapping, Transform]: ...
    def SetTextureMapping (self, channel : int, tm : TextureMapping) -> int: ...
    def HasTextureMapping (self) -> bool: ...
    def GetTextureChannels (self) -> Set(int): ...
    @property
    def RenderMaterial (self) -> RenderMaterial: ...
    @RenderMaterial.setter
    def RenderMaterial (self, value : RenderMaterial) -> None: ...
    def GetRenderMaterial (self, frontMaterial : bool) -> RenderMaterial: ...
    def GetRenderMaterial (self, componentIndex : ComponentIndex, plugInId : Guid, attributes : ObjectAttributes) -> RenderMaterial: ...
    def GetRenderMaterial (self, componentIndex : ComponentIndex, plugInId : Guid) -> RenderMaterial: ...
    def GetRenderMaterial (self, componentIndex : ComponentIndex) -> RenderMaterial: ...
    @property
    def HasSubobjectMaterials (self) -> bool: ...
    @property
    def SubobjectMaterialComponents (self) -> Set(ComponentIndex): ...
    @property
    def ComponentType (self) -> ModelComponentType: ...
    def GetMaterial (self, frontMaterial : bool) -> Material: ...
    def GetMaterial (self, componentIndex : ComponentIndex, plugInId : Guid, attributes : ObjectAttributes) -> Material: ...
    def GetMaterial (self, componentIndex : ComponentIndex, plugInId : Guid) -> Material: ...
    def GetMaterial (self, componentIndex : ComponentIndex) -> Material: ...
    def GetCustomRenderMeshParameter (self, providerId : Guid, parameterName : str) -> IConvertible: ...
    def SetCustomRenderMeshParameter (self, providerId : Guid, parameterName : str, value : Object) -> None: ...
    def IsActiveInViewport (self, viewport : RhinoViewport) -> bool: ...
    @property
    def ObjectType (self) -> ObjectType: ...
    @property
    def Document (self) -> RhinoDoc: ...
    @property
    def Geometry (self) -> GeometryBase: ...
    @property
    def Attributes (self) -> ObjectAttributes: ...
    @Attributes.setter
    def Attributes (self, value : ObjectAttributes) -> None: ...
    @property
    def RuntimeSerialNumber (self) -> UInt32: ...
    @property
    def IsDeletable (self) -> bool: ...
    @property
    def IsDeleted (self) -> bool: ...
    @property
    def IsInstanceDefinitionGeometry (self) -> bool: ...
    @property
    def IsNormal (self) -> bool: ...
    @property
    def IsLocked (self) -> bool: ...
    @property
    def IsHidden (self) -> bool: ...
    @property
    def IsReference (self) -> bool: ...
    @property
    def WorksessionReferenceSerialNumber (self) -> UInt32: ...
    @property
    def ReferenceModelSerialNumber (self) -> UInt32: ...
    @property
    def InstanceDefinitionModelSerialNumber (self) -> UInt32: ...
    @property
    def Visible (self) -> bool: ...
    def DuplicateGeometry (self) -> GeometryBase: ...
    def CommitChanges (self) -> bool: ...
    def MemoryEstimate (self) -> UInt32: ...
    @property
    def Id (self) -> Guid: ...
    @Id.setter
    def Id (self, value : Guid) -> None: ...
    @property
    def Name (self) -> str: ...
    @Name.setter
    def Name (self, value : str) -> None: ...
    @property
    def GroupCount (self) -> int: ...
    def GetGroupList (self) -> Set(int): ...
    def IsSelected (self, checkSubObjects : bool) -> int: ...
    def IsSubObjectSelected (self, componentIndex : ComponentIndex) -> bool: ...
    def GetSelectedSubObjects (self) -> Set(ComponentIndex): ...
    def IsSelectable (self, ignoreSelectionState : bool, ignoreGripsState : bool, ignoreLayerLocking : bool, ignoreLayerVisibility : bool) -> bool: ...
    def IsSelectable (self) -> bool: ...
    def IsSubObjectSelectable (self, componentIndex : ComponentIndex, ignoreSelectionState : bool) -> bool: ...
    def Select (self, on : bool, syncHighlight : bool, persistentSelect : bool, ignoreGripsState : bool, ignoreLayerLocking : bool, ignoreLayerVisibility : bool) -> int: ...
    def Select (self, on : bool) -> int: ...
    def Select (self, on : bool, syncHighlight : bool) -> int: ...
    def SelectSubObject (self, componentIndex : ComponentIndex, select : bool, syncHighlight : bool) -> int: ...
    def SelectSubObject (self, componentIndex : ComponentIndex, select : bool, syncHighlight : bool, persistentSelect : bool) -> int: ...
    def UnselectAllSubObjects (self) -> int: ...
    def IsHighlighted (self, checkSubObjects : bool) -> int: ...
    def Highlight (self, enable : bool) -> bool: ...
    def IsSubObjectHighlighted (self, componentIndex : ComponentIndex) -> bool: ...
    def GetHighlightedSubObjects (self) -> Set(ComponentIndex): ...
    def HighlightSubObject (self, componentIndex : ComponentIndex, highlight : bool) -> bool: ...
    def UnhighlightAllSubObjects (self) -> int: ...
    @property
    def GripsOn (self) -> bool: ...
    @GripsOn.setter
    def GripsOn (self, value : bool) -> None: ...
    @property
    def GripsSelected (self) -> bool: ...
    def EnableCustomGrips (self, customGrips : CustomObjectGrips) -> bool: ...
    def GetGrips (self) -> Set(GripObject): ...
    def EnableVisualAnalysisMode (self, mode : VisualAnalysisMode, enable : bool) -> bool: ...
    def InVisualAnalysisMode (self) -> bool: ...
    def InVisualAnalysisMode (self, mode : VisualAnalysisMode) -> bool: ...
    def GetActiveVisualAnalysisModes (self) -> Set(VisualAnalysisMode): ...
    def ShortDescription (self, plural : bool) -> str: ...
    def Description (self, textLog : TextLog) -> None: ...
    def DataCRC (self, currentRemainder : UInt32) -> UInt32: ...
    @property
    def IsSystemComponent (self) -> bool: ...
    def ClearId (self) -> None: ...
    @property
    def HasId (self) -> bool: ...
    @property
    def IdIsLocked (self) -> bool: ...
    def LockId (self) -> None: ...
    @property
    def Index (self) -> int: ...
    @Index.setter
    def Index (self, value : int) -> None: ...
    def ClearIndex (self) -> None: ...
    @property
    def HasIndex (self) -> bool: ...
    @property
    def IndexIsLocked (self) -> bool: ...
    def LockIndex (self) -> None: ...
    @property
    def ComponentStatus (self) -> ComponentStatus: ...
    @ComponentStatus.setter
    def ComponentStatus (self, value : ComponentStatus) -> None: ...
    @property
    def IsComponentStatusLocked (self) -> bool: ...
    def ClearName (self) -> None: ...
    @property
    def HasName (self) -> bool: ...
    @property
    def NameIsLocked (self) -> bool: ...
    def LockName (self) -> None: ...
    @property
    def DeletedName (self) -> str: ...
    @property
    def ModelSerialNumber (self) -> UInt32: ...
    def ToString (self) -> str: ...
    def EnsurePrivateCopy (self) -> None: ...
    @property
    def IsDocumentControlled (self) -> bool: ...
    @property
    def IsValid (self) -> bool: ...
    def IsValidWithLog (self) -> Tuple[bool, str]: ...
    def Dispose (self) -> None: ...
    @property
    def Disposed (self) -> bool: ...
    @property
    def HasUserData (self) -> bool: ...
    @property
    def UserData (self) -> UserDataList: ...
    @property
    def UserDictionary (self) -> ArchivableDictionary: ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext) -> None: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class GripStatus:
    @property
    def Culled (self) -> bool: ...
    @Culled.setter
    def Culled (self, value : bool) -> None: ...
    @property
    def Visible (self) -> bool: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class GripsDrawEventArgs:
    @property
    def DrawStaticStuff (self) -> bool: ...
    @property
    def DrawDynamicStuff (self) -> bool: ...
    @property
    def ControlPolygonStyle (self) -> int: ...
    @ControlPolygonStyle.setter
    def ControlPolygonStyle (self, value : int) -> None: ...
    @property
    def GripColor (self) -> Color: ...
    @GripColor.setter
    def GripColor (self, value : Color) -> None: ...
    @property
    def LockedGripColor (self) -> Color: ...
    @LockedGripColor.setter
    def LockedGripColor (self, value : Color) -> None: ...
    @property
    def SelectedGripColor (self) -> Color: ...
    @SelectedGripColor.setter
    def SelectedGripColor (self, value : Color) -> None: ...
    @property
    def GripStatusCount (self) -> int: ...
    def GripStatus (self, index : int) -> GripStatus: ...
    def DrawControlPolygonLine (self, line : Line, startStatus : GripStatus, endStatus : GripStatus) -> None: ...
    def DrawControlPolygonLine (self, line : Line, startStatus : int, endStatus : int) -> None: ...
    def DrawControlPolygonLine (self, start : Point3d, end : Point3d, startStatus : int, endStatus : int) -> None: ...
    def RestoreViewportSettings (self) -> None: ...
    @property
    def Viewport (self) -> RhinoViewport: ...
    @property
    def Display (self) -> DisplayPipeline: ...
    @property
    def RhinoDoc (self) -> RhinoDoc: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class TurnOnGripsEventHandler:
    def __init__(self, object : Object, method : IntPtr): ...
    def Invoke (self, rhObj : RhinoObject) -> None: ...
    def BeginInvoke (self, rhObj : RhinoObject, callback : AsyncCallback, object : Object) -> IAsyncResult: ...
    def EndInvoke (self, result : IAsyncResult) -> None: ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext) -> None: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetInvocationList (self) -> Set(Delegate): ...
    def GetHashCode (self) -> int: ...
    def DynamicInvoke (self, args : Set(Object)) -> Object: ...
    @property
    def Method (self) -> MethodInfo: ...
    @property
    def Target (self) -> Object: ...
    def Clone (self) -> Object: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class CustomObjectGrips:
    def RegisterGripsEnabler (enabler : TurnOnGripsEventHandler, customGripsType : Type) -> None: ...
    @property
    def GripCount (self) -> int: ...
    def Grip (self, index : int) -> CustomGripObject: ...
    def Dragging () -> bool: ...
    @property
    def NewLocation (self) -> bool: ...
    @NewLocation.setter
    def NewLocation (self, value : bool) -> None: ...
    @property
    def GripsMoved (self) -> bool: ...
    @property
    def OwnerObject (self) -> RhinoObject: ...
    def Dispose (self) -> None: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class CustomMeshObject:
    def Dispose (self) -> None: ...
    @property
    def IsCustomObject (self) -> bool: ...
    @property
    def MeshGeometry (self) -> Mesh: ...
    def DuplicateMeshGeometry (self) -> Mesh: ...
    def IsMeshable (self, meshType : MeshType) -> bool: ...
    def GetRenderMeshParameters (self) -> MeshingParameters: ...
    def MeshCount (self, meshType : MeshType, parameters : MeshingParameters) -> int: ...
    def CreateMeshes (self, meshType : MeshType, parameters : MeshingParameters, ignoreCustomParameters : bool) -> int: ...
    def GetMeshes (self, meshType : MeshType) -> Set(Mesh): ...
    def SupportsRenderPrimitiveList (self, viewport : ViewportInfo, preview : bool) -> bool: ...
    def SupportsRenderPrimitiveList (self, viewport : ViewportInfo, attrs : DisplayPipelineAttributes) -> bool: ...
    def GetRenderPrimitiveList (self, viewport : ViewportInfo, preview : bool) -> RenderPrimitiveList: ...
    def GetRenderPrimitiveList (self, viewport : ViewportInfo, attrs : DisplayPipelineAttributes) -> RenderPrimitiveList: ...
    def TryGetRenderPrimitiveBoundingBox (self, viewport : ViewportInfo, preview : bool) -> Tuple[bool, BoundingBox]: ...
    def TryGetRenderPrimitiveBoundingBox (self, viewport : ViewportInfo, attrs : DisplayPipelineAttributes) -> Tuple[bool, BoundingBox]: ...
    def GetSubObjects (self) -> Set(RhinoObject): ...
    @property
    def HasDynamicTransform (self) -> bool: ...
    def GetDynamicTransform (self) -> Tuple[bool, Transform]: ...
    def GetTextureMapping (self, channel : int) -> TextureMapping: ...
    def GetTextureMapping (self, channel : int) -> Tuple[TextureMapping, Transform]: ...
    def SetTextureMapping (self, channel : int, tm : TextureMapping) -> int: ...
    def HasTextureMapping (self) -> bool: ...
    def GetTextureChannels (self) -> Set(int): ...
    @property
    def RenderMaterial (self) -> RenderMaterial: ...
    @RenderMaterial.setter
    def RenderMaterial (self, value : RenderMaterial) -> None: ...
    def GetRenderMaterial (self, frontMaterial : bool) -> RenderMaterial: ...
    def GetRenderMaterial (self, componentIndex : ComponentIndex, plugInId : Guid, attributes : ObjectAttributes) -> RenderMaterial: ...
    def GetRenderMaterial (self, componentIndex : ComponentIndex, plugInId : Guid) -> RenderMaterial: ...
    def GetRenderMaterial (self, componentIndex : ComponentIndex) -> RenderMaterial: ...
    @property
    def HasSubobjectMaterials (self) -> bool: ...
    @property
    def SubobjectMaterialComponents (self) -> Set(ComponentIndex): ...
    @property
    def ComponentType (self) -> ModelComponentType: ...
    def GetMaterial (self, frontMaterial : bool) -> Material: ...
    def GetMaterial (self, componentIndex : ComponentIndex, plugInId : Guid, attributes : ObjectAttributes) -> Material: ...
    def GetMaterial (self, componentIndex : ComponentIndex, plugInId : Guid) -> Material: ...
    def GetMaterial (self, componentIndex : ComponentIndex) -> Material: ...
    def GetCustomRenderMeshParameter (self, providerId : Guid, parameterName : str) -> IConvertible: ...
    def SetCustomRenderMeshParameter (self, providerId : Guid, parameterName : str, value : Object) -> None: ...
    def IsActiveInViewport (self, viewport : RhinoViewport) -> bool: ...
    @property
    def ObjectType (self) -> ObjectType: ...
    @property
    def Document (self) -> RhinoDoc: ...
    @property
    def Geometry (self) -> GeometryBase: ...
    @property
    def Attributes (self) -> ObjectAttributes: ...
    @Attributes.setter
    def Attributes (self, value : ObjectAttributes) -> None: ...
    @property
    def RuntimeSerialNumber (self) -> UInt32: ...
    @property
    def IsDeletable (self) -> bool: ...
    @property
    def IsDeleted (self) -> bool: ...
    @property
    def IsInstanceDefinitionGeometry (self) -> bool: ...
    @property
    def IsNormal (self) -> bool: ...
    @property
    def IsLocked (self) -> bool: ...
    @property
    def IsHidden (self) -> bool: ...
    @property
    def IsReference (self) -> bool: ...
    @property
    def WorksessionReferenceSerialNumber (self) -> UInt32: ...
    @property
    def ReferenceModelSerialNumber (self) -> UInt32: ...
    @property
    def InstanceDefinitionModelSerialNumber (self) -> UInt32: ...
    @property
    def Visible (self) -> bool: ...
    def DuplicateGeometry (self) -> GeometryBase: ...
    def CommitChanges (self) -> bool: ...
    def MemoryEstimate (self) -> UInt32: ...
    @property
    def Id (self) -> Guid: ...
    @Id.setter
    def Id (self, value : Guid) -> None: ...
    @property
    def Name (self) -> str: ...
    @Name.setter
    def Name (self, value : str) -> None: ...
    @property
    def GroupCount (self) -> int: ...
    def GetGroupList (self) -> Set(int): ...
    def IsSelected (self, checkSubObjects : bool) -> int: ...
    def IsSubObjectSelected (self, componentIndex : ComponentIndex) -> bool: ...
    def GetSelectedSubObjects (self) -> Set(ComponentIndex): ...
    def IsSelectable (self, ignoreSelectionState : bool, ignoreGripsState : bool, ignoreLayerLocking : bool, ignoreLayerVisibility : bool) -> bool: ...
    def IsSelectable (self) -> bool: ...
    def IsSubObjectSelectable (self, componentIndex : ComponentIndex, ignoreSelectionState : bool) -> bool: ...
    def Select (self, on : bool, syncHighlight : bool, persistentSelect : bool, ignoreGripsState : bool, ignoreLayerLocking : bool, ignoreLayerVisibility : bool) -> int: ...
    def Select (self, on : bool) -> int: ...
    def Select (self, on : bool, syncHighlight : bool) -> int: ...
    def SelectSubObject (self, componentIndex : ComponentIndex, select : bool, syncHighlight : bool) -> int: ...
    def SelectSubObject (self, componentIndex : ComponentIndex, select : bool, syncHighlight : bool, persistentSelect : bool) -> int: ...
    def UnselectAllSubObjects (self) -> int: ...
    def IsHighlighted (self, checkSubObjects : bool) -> int: ...
    def Highlight (self, enable : bool) -> bool: ...
    def IsSubObjectHighlighted (self, componentIndex : ComponentIndex) -> bool: ...
    def GetHighlightedSubObjects (self) -> Set(ComponentIndex): ...
    def HighlightSubObject (self, componentIndex : ComponentIndex, highlight : bool) -> bool: ...
    def UnhighlightAllSubObjects (self) -> int: ...
    @property
    def GripsOn (self) -> bool: ...
    @GripsOn.setter
    def GripsOn (self, value : bool) -> None: ...
    @property
    def GripsSelected (self) -> bool: ...
    def EnableCustomGrips (self, customGrips : CustomObjectGrips) -> bool: ...
    def GetGrips (self) -> Set(GripObject): ...
    def EnableVisualAnalysisMode (self, mode : VisualAnalysisMode, enable : bool) -> bool: ...
    def InVisualAnalysisMode (self) -> bool: ...
    def InVisualAnalysisMode (self, mode : VisualAnalysisMode) -> bool: ...
    def GetActiveVisualAnalysisModes (self) -> Set(VisualAnalysisMode): ...
    def ShortDescription (self, plural : bool) -> str: ...
    def Description (self, textLog : TextLog) -> None: ...
    def DataCRC (self, currentRemainder : UInt32) -> UInt32: ...
    @property
    def IsSystemComponent (self) -> bool: ...
    def ClearId (self) -> None: ...
    @property
    def HasId (self) -> bool: ...
    @property
    def IdIsLocked (self) -> bool: ...
    def LockId (self) -> None: ...
    @property
    def Index (self) -> int: ...
    @Index.setter
    def Index (self, value : int) -> None: ...
    def ClearIndex (self) -> None: ...
    @property
    def HasIndex (self) -> bool: ...
    @property
    def IndexIsLocked (self) -> bool: ...
    def LockIndex (self) -> None: ...
    @property
    def ComponentStatus (self) -> ComponentStatus: ...
    @ComponentStatus.setter
    def ComponentStatus (self, value : ComponentStatus) -> None: ...
    @property
    def IsComponentStatusLocked (self) -> bool: ...
    def ClearName (self) -> None: ...
    @property
    def HasName (self) -> bool: ...
    @property
    def NameIsLocked (self) -> bool: ...
    def LockName (self) -> None: ...
    @property
    def DeletedName (self) -> str: ...
    @property
    def ModelSerialNumber (self) -> UInt32: ...
    def ToString (self) -> str: ...
    def EnsurePrivateCopy (self) -> None: ...
    @property
    def IsDocumentControlled (self) -> bool: ...
    @property
    def IsValid (self) -> bool: ...
    def IsValidWithLog (self) -> Tuple[bool, str]: ...
    def Dispose (self) -> None: ...
    @property
    def Disposed (self) -> bool: ...
    @property
    def HasUserData (self) -> bool: ...
    @property
    def UserData (self) -> UserDataList: ...
    @property
    def UserDictionary (self) -> ArchivableDictionary: ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext) -> None: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class CustomPointObject:
    def Dispose (self) -> None: ...
    @property
    def PointGeometry (self) -> Point: ...
    def DuplicatePointGeometry (self) -> Point: ...
    def IsMeshable (self, meshType : MeshType) -> bool: ...
    def GetRenderMeshParameters (self) -> MeshingParameters: ...
    def MeshCount (self, meshType : MeshType, parameters : MeshingParameters) -> int: ...
    def CreateMeshes (self, meshType : MeshType, parameters : MeshingParameters, ignoreCustomParameters : bool) -> int: ...
    def GetMeshes (self, meshType : MeshType) -> Set(Mesh): ...
    def SupportsRenderPrimitiveList (self, viewport : ViewportInfo, preview : bool) -> bool: ...
    def SupportsRenderPrimitiveList (self, viewport : ViewportInfo, attrs : DisplayPipelineAttributes) -> bool: ...
    def GetRenderPrimitiveList (self, viewport : ViewportInfo, preview : bool) -> RenderPrimitiveList: ...
    def GetRenderPrimitiveList (self, viewport : ViewportInfo, attrs : DisplayPipelineAttributes) -> RenderPrimitiveList: ...
    def TryGetRenderPrimitiveBoundingBox (self, viewport : ViewportInfo, preview : bool) -> Tuple[bool, BoundingBox]: ...
    def TryGetRenderPrimitiveBoundingBox (self, viewport : ViewportInfo, attrs : DisplayPipelineAttributes) -> Tuple[bool, BoundingBox]: ...
    def GetSubObjects (self) -> Set(RhinoObject): ...
    @property
    def HasDynamicTransform (self) -> bool: ...
    def GetDynamicTransform (self) -> Tuple[bool, Transform]: ...
    def GetTextureMapping (self, channel : int) -> TextureMapping: ...
    def GetTextureMapping (self, channel : int) -> Tuple[TextureMapping, Transform]: ...
    def SetTextureMapping (self, channel : int, tm : TextureMapping) -> int: ...
    def HasTextureMapping (self) -> bool: ...
    def GetTextureChannels (self) -> Set(int): ...
    @property
    def RenderMaterial (self) -> RenderMaterial: ...
    @RenderMaterial.setter
    def RenderMaterial (self, value : RenderMaterial) -> None: ...
    def GetRenderMaterial (self, frontMaterial : bool) -> RenderMaterial: ...
    def GetRenderMaterial (self, componentIndex : ComponentIndex, plugInId : Guid, attributes : ObjectAttributes) -> RenderMaterial: ...
    def GetRenderMaterial (self, componentIndex : ComponentIndex, plugInId : Guid) -> RenderMaterial: ...
    def GetRenderMaterial (self, componentIndex : ComponentIndex) -> RenderMaterial: ...
    @property
    def HasSubobjectMaterials (self) -> bool: ...
    @property
    def SubobjectMaterialComponents (self) -> Set(ComponentIndex): ...
    @property
    def ComponentType (self) -> ModelComponentType: ...
    def GetMaterial (self, frontMaterial : bool) -> Material: ...
    def GetMaterial (self, componentIndex : ComponentIndex, plugInId : Guid, attributes : ObjectAttributes) -> Material: ...
    def GetMaterial (self, componentIndex : ComponentIndex, plugInId : Guid) -> Material: ...
    def GetMaterial (self, componentIndex : ComponentIndex) -> Material: ...
    def GetCustomRenderMeshParameter (self, providerId : Guid, parameterName : str) -> IConvertible: ...
    def SetCustomRenderMeshParameter (self, providerId : Guid, parameterName : str, value : Object) -> None: ...
    def IsActiveInViewport (self, viewport : RhinoViewport) -> bool: ...
    @property
    def ObjectType (self) -> ObjectType: ...
    @property
    def Document (self) -> RhinoDoc: ...
    @property
    def Geometry (self) -> GeometryBase: ...
    @property
    def Attributes (self) -> ObjectAttributes: ...
    @Attributes.setter
    def Attributes (self, value : ObjectAttributes) -> None: ...
    @property
    def RuntimeSerialNumber (self) -> UInt32: ...
    @property
    def IsDeletable (self) -> bool: ...
    @property
    def IsDeleted (self) -> bool: ...
    @property
    def IsInstanceDefinitionGeometry (self) -> bool: ...
    @property
    def IsNormal (self) -> bool: ...
    @property
    def IsLocked (self) -> bool: ...
    @property
    def IsHidden (self) -> bool: ...
    @property
    def IsReference (self) -> bool: ...
    @property
    def WorksessionReferenceSerialNumber (self) -> UInt32: ...
    @property
    def ReferenceModelSerialNumber (self) -> UInt32: ...
    @property
    def InstanceDefinitionModelSerialNumber (self) -> UInt32: ...
    @property
    def Visible (self) -> bool: ...
    def DuplicateGeometry (self) -> GeometryBase: ...
    def CommitChanges (self) -> bool: ...
    def MemoryEstimate (self) -> UInt32: ...
    @property
    def Id (self) -> Guid: ...
    @Id.setter
    def Id (self, value : Guid) -> None: ...
    @property
    def Name (self) -> str: ...
    @Name.setter
    def Name (self, value : str) -> None: ...
    @property
    def GroupCount (self) -> int: ...
    def GetGroupList (self) -> Set(int): ...
    def IsSelected (self, checkSubObjects : bool) -> int: ...
    def IsSubObjectSelected (self, componentIndex : ComponentIndex) -> bool: ...
    def GetSelectedSubObjects (self) -> Set(ComponentIndex): ...
    def IsSelectable (self, ignoreSelectionState : bool, ignoreGripsState : bool, ignoreLayerLocking : bool, ignoreLayerVisibility : bool) -> bool: ...
    def IsSelectable (self) -> bool: ...
    def IsSubObjectSelectable (self, componentIndex : ComponentIndex, ignoreSelectionState : bool) -> bool: ...
    def Select (self, on : bool, syncHighlight : bool, persistentSelect : bool, ignoreGripsState : bool, ignoreLayerLocking : bool, ignoreLayerVisibility : bool) -> int: ...
    def Select (self, on : bool) -> int: ...
    def Select (self, on : bool, syncHighlight : bool) -> int: ...
    def SelectSubObject (self, componentIndex : ComponentIndex, select : bool, syncHighlight : bool) -> int: ...
    def SelectSubObject (self, componentIndex : ComponentIndex, select : bool, syncHighlight : bool, persistentSelect : bool) -> int: ...
    def UnselectAllSubObjects (self) -> int: ...
    def IsHighlighted (self, checkSubObjects : bool) -> int: ...
    def Highlight (self, enable : bool) -> bool: ...
    def IsSubObjectHighlighted (self, componentIndex : ComponentIndex) -> bool: ...
    def GetHighlightedSubObjects (self) -> Set(ComponentIndex): ...
    def HighlightSubObject (self, componentIndex : ComponentIndex, highlight : bool) -> bool: ...
    def UnhighlightAllSubObjects (self) -> int: ...
    @property
    def GripsOn (self) -> bool: ...
    @GripsOn.setter
    def GripsOn (self, value : bool) -> None: ...
    @property
    def GripsSelected (self) -> bool: ...
    def EnableCustomGrips (self, customGrips : CustomObjectGrips) -> bool: ...
    def GetGrips (self) -> Set(GripObject): ...
    def EnableVisualAnalysisMode (self, mode : VisualAnalysisMode, enable : bool) -> bool: ...
    def InVisualAnalysisMode (self) -> bool: ...
    def InVisualAnalysisMode (self, mode : VisualAnalysisMode) -> bool: ...
    def GetActiveVisualAnalysisModes (self) -> Set(VisualAnalysisMode): ...
    def ShortDescription (self, plural : bool) -> str: ...
    def Description (self, textLog : TextLog) -> None: ...
    def DataCRC (self, currentRemainder : UInt32) -> UInt32: ...
    @property
    def IsSystemComponent (self) -> bool: ...
    def ClearId (self) -> None: ...
    @property
    def HasId (self) -> bool: ...
    @property
    def IdIsLocked (self) -> bool: ...
    def LockId (self) -> None: ...
    @property
    def Index (self) -> int: ...
    @Index.setter
    def Index (self, value : int) -> None: ...
    def ClearIndex (self) -> None: ...
    @property
    def HasIndex (self) -> bool: ...
    @property
    def IndexIsLocked (self) -> bool: ...
    def LockIndex (self) -> None: ...
    @property
    def ComponentStatus (self) -> ComponentStatus: ...
    @ComponentStatus.setter
    def ComponentStatus (self, value : ComponentStatus) -> None: ...
    @property
    def IsComponentStatusLocked (self) -> bool: ...
    def ClearName (self) -> None: ...
    @property
    def HasName (self) -> bool: ...
    @property
    def NameIsLocked (self) -> bool: ...
    def LockName (self) -> None: ...
    @property
    def DeletedName (self) -> str: ...
    @property
    def ModelSerialNumber (self) -> UInt32: ...
    def ToString (self) -> str: ...
    def EnsurePrivateCopy (self) -> None: ...
    @property
    def IsDocumentControlled (self) -> bool: ...
    @property
    def IsValid (self) -> bool: ...
    def IsValidWithLog (self) -> Tuple[bool, str]: ...
    def Dispose (self) -> None: ...
    @property
    def Disposed (self) -> bool: ...
    @property
    def HasUserData (self) -> bool: ...
    @property
    def UserData (self) -> UserDataList: ...
    @property
    def UserDictionary (self) -> ArchivableDictionary: ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext) -> None: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class CustomGripObject:
    def __init__(self): ...
    def Dispose (self) -> None: ...
    @property
    def Index (self) -> int: ...
    @Index.setter
    def Index (self, value : int) -> None: ...
    @property
    def OriginalLocation (self) -> Point3d: ...
    @OriginalLocation.setter
    def OriginalLocation (self, value : Point3d) -> None: ...
    @property
    def Weight (self) -> float: ...
    @Weight.setter
    def Weight (self, value : float) -> None: ...
    def NewLocation (self) -> None: ...
    @property
    def CurrentLocation (self) -> Point3d: ...
    @CurrentLocation.setter
    def CurrentLocation (self, value : Point3d) -> None: ...
    @property
    def OriginalLocation (self) -> Point3d: ...
    @property
    def Moved (self) -> bool: ...
    def Move (self, xform : Transform) -> None: ...
    def Move (self, delta : Vector3d) -> None: ...
    def Move (self, newLocation : Point3d) -> None: ...
    def UndoMove (self) -> None: ...
    @property
    def OwnerId (self) -> Guid: ...
    def NeighborGrip (self, directionR : int, directionS : int, directionT : int, wrap : bool) -> GripObject: ...
    def GetGripDirections (self) -> Tuple[bool, Vector3d, Vector3d, Vector3d]: ...
    def GetSurfaceParameters (self) -> Tuple[bool, float, float]: ...
    def GetCageParameters (self) -> Tuple[bool, float, float, float]: ...
    def GetCurveParameters (self) -> Tuple[bool, float]: ...
    @property
    def Index (self) -> int: ...
    @Index.setter
    def Index (self, value : int) -> None: ...
    def IsMeshable (self, meshType : MeshType) -> bool: ...
    def GetRenderMeshParameters (self) -> MeshingParameters: ...
    def MeshCount (self, meshType : MeshType, parameters : MeshingParameters) -> int: ...
    def CreateMeshes (self, meshType : MeshType, parameters : MeshingParameters, ignoreCustomParameters : bool) -> int: ...
    def GetMeshes (self, meshType : MeshType) -> Set(Mesh): ...
    def SupportsRenderPrimitiveList (self, viewport : ViewportInfo, preview : bool) -> bool: ...
    def SupportsRenderPrimitiveList (self, viewport : ViewportInfo, attrs : DisplayPipelineAttributes) -> bool: ...
    def GetRenderPrimitiveList (self, viewport : ViewportInfo, preview : bool) -> RenderPrimitiveList: ...
    def GetRenderPrimitiveList (self, viewport : ViewportInfo, attrs : DisplayPipelineAttributes) -> RenderPrimitiveList: ...
    def TryGetRenderPrimitiveBoundingBox (self, viewport : ViewportInfo, preview : bool) -> Tuple[bool, BoundingBox]: ...
    def TryGetRenderPrimitiveBoundingBox (self, viewport : ViewportInfo, attrs : DisplayPipelineAttributes) -> Tuple[bool, BoundingBox]: ...
    def GetSubObjects (self) -> Set(RhinoObject): ...
    @property
    def HasDynamicTransform (self) -> bool: ...
    def GetDynamicTransform (self) -> Tuple[bool, Transform]: ...
    def GetTextureMapping (self, channel : int) -> TextureMapping: ...
    def GetTextureMapping (self, channel : int) -> Tuple[TextureMapping, Transform]: ...
    def SetTextureMapping (self, channel : int, tm : TextureMapping) -> int: ...
    def HasTextureMapping (self) -> bool: ...
    def GetTextureChannels (self) -> Set(int): ...
    @property
    def RenderMaterial (self) -> RenderMaterial: ...
    @RenderMaterial.setter
    def RenderMaterial (self, value : RenderMaterial) -> None: ...
    def GetRenderMaterial (self, frontMaterial : bool) -> RenderMaterial: ...
    def GetRenderMaterial (self, componentIndex : ComponentIndex, plugInId : Guid, attributes : ObjectAttributes) -> RenderMaterial: ...
    def GetRenderMaterial (self, componentIndex : ComponentIndex, plugInId : Guid) -> RenderMaterial: ...
    def GetRenderMaterial (self, componentIndex : ComponentIndex) -> RenderMaterial: ...
    @property
    def HasSubobjectMaterials (self) -> bool: ...
    @property
    def SubobjectMaterialComponents (self) -> Set(ComponentIndex): ...
    @property
    def ComponentType (self) -> ModelComponentType: ...
    def GetMaterial (self, frontMaterial : bool) -> Material: ...
    def GetMaterial (self, componentIndex : ComponentIndex, plugInId : Guid, attributes : ObjectAttributes) -> Material: ...
    def GetMaterial (self, componentIndex : ComponentIndex, plugInId : Guid) -> Material: ...
    def GetMaterial (self, componentIndex : ComponentIndex) -> Material: ...
    def GetCustomRenderMeshParameter (self, providerId : Guid, parameterName : str) -> IConvertible: ...
    def SetCustomRenderMeshParameter (self, providerId : Guid, parameterName : str, value : Object) -> None: ...
    def IsActiveInViewport (self, viewport : RhinoViewport) -> bool: ...
    @property
    def ObjectType (self) -> ObjectType: ...
    @property
    def Document (self) -> RhinoDoc: ...
    @property
    def Geometry (self) -> GeometryBase: ...
    @property
    def Attributes (self) -> ObjectAttributes: ...
    @Attributes.setter
    def Attributes (self, value : ObjectAttributes) -> None: ...
    @property
    def RuntimeSerialNumber (self) -> UInt32: ...
    @property
    def IsDeletable (self) -> bool: ...
    @property
    def IsDeleted (self) -> bool: ...
    @property
    def IsInstanceDefinitionGeometry (self) -> bool: ...
    @property
    def IsNormal (self) -> bool: ...
    @property
    def IsLocked (self) -> bool: ...
    @property
    def IsHidden (self) -> bool: ...
    @property
    def IsReference (self) -> bool: ...
    @property
    def WorksessionReferenceSerialNumber (self) -> UInt32: ...
    @property
    def ReferenceModelSerialNumber (self) -> UInt32: ...
    @property
    def InstanceDefinitionModelSerialNumber (self) -> UInt32: ...
    @property
    def Visible (self) -> bool: ...
    def DuplicateGeometry (self) -> GeometryBase: ...
    def CommitChanges (self) -> bool: ...
    def MemoryEstimate (self) -> UInt32: ...
    @property
    def Id (self) -> Guid: ...
    @Id.setter
    def Id (self, value : Guid) -> None: ...
    @property
    def Name (self) -> str: ...
    @Name.setter
    def Name (self, value : str) -> None: ...
    @property
    def GroupCount (self) -> int: ...
    def GetGroupList (self) -> Set(int): ...
    def IsSelected (self, checkSubObjects : bool) -> int: ...
    def IsSubObjectSelected (self, componentIndex : ComponentIndex) -> bool: ...
    def GetSelectedSubObjects (self) -> Set(ComponentIndex): ...
    def IsSelectable (self, ignoreSelectionState : bool, ignoreGripsState : bool, ignoreLayerLocking : bool, ignoreLayerVisibility : bool) -> bool: ...
    def IsSelectable (self) -> bool: ...
    def IsSubObjectSelectable (self, componentIndex : ComponentIndex, ignoreSelectionState : bool) -> bool: ...
    def Select (self, on : bool, syncHighlight : bool, persistentSelect : bool, ignoreGripsState : bool, ignoreLayerLocking : bool, ignoreLayerVisibility : bool) -> int: ...
    def Select (self, on : bool) -> int: ...
    def Select (self, on : bool, syncHighlight : bool) -> int: ...
    def SelectSubObject (self, componentIndex : ComponentIndex, select : bool, syncHighlight : bool) -> int: ...
    def SelectSubObject (self, componentIndex : ComponentIndex, select : bool, syncHighlight : bool, persistentSelect : bool) -> int: ...
    def UnselectAllSubObjects (self) -> int: ...
    def IsHighlighted (self, checkSubObjects : bool) -> int: ...
    def Highlight (self, enable : bool) -> bool: ...
    def IsSubObjectHighlighted (self, componentIndex : ComponentIndex) -> bool: ...
    def GetHighlightedSubObjects (self) -> Set(ComponentIndex): ...
    def HighlightSubObject (self, componentIndex : ComponentIndex, highlight : bool) -> bool: ...
    def UnhighlightAllSubObjects (self) -> int: ...
    @property
    def GripsOn (self) -> bool: ...
    @GripsOn.setter
    def GripsOn (self, value : bool) -> None: ...
    @property
    def GripsSelected (self) -> bool: ...
    def EnableCustomGrips (self, customGrips : CustomObjectGrips) -> bool: ...
    def GetGrips (self) -> Set(GripObject): ...
    def EnableVisualAnalysisMode (self, mode : VisualAnalysisMode, enable : bool) -> bool: ...
    def InVisualAnalysisMode (self) -> bool: ...
    def InVisualAnalysisMode (self, mode : VisualAnalysisMode) -> bool: ...
    def GetActiveVisualAnalysisModes (self) -> Set(VisualAnalysisMode): ...
    def ShortDescription (self, plural : bool) -> str: ...
    def Description (self, textLog : TextLog) -> None: ...
    def DataCRC (self, currentRemainder : UInt32) -> UInt32: ...
    @property
    def IsSystemComponent (self) -> bool: ...
    def ClearId (self) -> None: ...
    @property
    def HasId (self) -> bool: ...
    @property
    def IdIsLocked (self) -> bool: ...
    def LockId (self) -> None: ...
    def ClearIndex (self) -> None: ...
    @property
    def HasIndex (self) -> bool: ...
    @property
    def IndexIsLocked (self) -> bool: ...
    def LockIndex (self) -> None: ...
    @property
    def ComponentStatus (self) -> ComponentStatus: ...
    @ComponentStatus.setter
    def ComponentStatus (self, value : ComponentStatus) -> None: ...
    @property
    def IsComponentStatusLocked (self) -> bool: ...
    def ClearName (self) -> None: ...
    @property
    def HasName (self) -> bool: ...
    @property
    def NameIsLocked (self) -> bool: ...
    def LockName (self) -> None: ...
    @property
    def DeletedName (self) -> str: ...
    @property
    def ModelSerialNumber (self) -> UInt32: ...
    def ToString (self) -> str: ...
    def EnsurePrivateCopy (self) -> None: ...
    @property
    def IsDocumentControlled (self) -> bool: ...
    @property
    def IsValid (self) -> bool: ...
    def IsValidWithLog (self) -> Tuple[bool, str]: ...
    def Dispose (self) -> None: ...
    @property
    def Disposed (self) -> bool: ...
    @property
    def HasUserData (self) -> bool: ...
    @property
    def UserData (self) -> UserDataList: ...
    @property
    def UserDictionary (self) -> ArchivableDictionary: ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext) -> None: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
