from typing import Tuple, Set, Iterable, List

class TwistSpaceMorph:
    def __init__(self): ...
    @property
    def TwistAxis (self) -> Line: ...
    @TwistAxis.setter
    def TwistAxis (self, value : Line): ...
    @property
    def TwistAngleRadians (self) -> float: ...
    @TwistAngleRadians.setter
    def TwistAngleRadians (self, value : float): ...
    @property
    def InfiniteTwist (self) -> bool: ...
    @InfiniteTwist.setter
    def InfiniteTwist (self, value : bool): ...
    def MorphPoint (self, point : Point3d) -> Point3d: ...
    def Dispose (self): ...
    def Morph (self, geometry : GeometryBase) -> bool: ...
    def Morph (self, plane : Plane) -> Tuple(bool, Plane): ...
    @property
    def Tolerance (self) -> float: ...
    @Tolerance.setter
    def Tolerance (self, value : float): ...
    @property
    def QuickPreview (self) -> bool: ...
    @QuickPreview.setter
    def QuickPreview (self, value : bool): ...
    @property
    def PreserveStructure (self) -> bool: ...
    @PreserveStructure.setter
    def PreserveStructure (self, value : bool): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class BendSpaceMorph:
    def __init__(self, start : Point3d, end : Point3d, point : Point3d, straight : bool, symmetric : bool): ...
    def __init__(self, start : Point3d, end : Point3d, point : Point3d, angle : float, straight : bool, symmetric : bool): ...
    @property
    def IsValid (self) -> bool: ...
    def MorphPoint (self, point : Point3d) -> Point3d: ...
    def Dispose (self): ...
    def Morph (self, geometry : GeometryBase) -> bool: ...
    def Morph (self, plane : Plane) -> Tuple(bool, Plane): ...
    @property
    def Tolerance (self) -> float: ...
    @Tolerance.setter
    def Tolerance (self, value : float): ...
    @property
    def QuickPreview (self) -> bool: ...
    @QuickPreview.setter
    def QuickPreview (self, value : bool): ...
    @property
    def PreserveStructure (self) -> bool: ...
    @PreserveStructure.setter
    def PreserveStructure (self, value : bool): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class TaperSpaceMorph:
    def __init__(self, start : Point3d, end : Point3d, startRadius : float, endRadius : float, bFlat : bool, infiniteTaper : bool): ...
    @property
    def IsValid (self) -> bool: ...
    def MorphPoint (self, point : Point3d) -> Point3d: ...
    def Dispose (self): ...
    def Morph (self, geometry : GeometryBase) -> bool: ...
    def Morph (self, plane : Plane) -> Tuple(bool, Plane): ...
    @property
    def Tolerance (self) -> float: ...
    @Tolerance.setter
    def Tolerance (self, value : float): ...
    @property
    def QuickPreview (self) -> bool: ...
    @QuickPreview.setter
    def QuickPreview (self, value : bool): ...
    @property
    def PreserveStructure (self) -> bool: ...
    @PreserveStructure.setter
    def PreserveStructure (self, value : bool): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class MaelstromSpaceMorph:
    def __init__(self, plane : Plane, radius0 : float, radius1 : float, angle : float): ...
    @property
    def IsValid (self) -> bool: ...
    def MorphPoint (self, point : Point3d) -> Point3d: ...
    def Dispose (self): ...
    def Morph (self, geometry : GeometryBase) -> bool: ...
    def Morph (self, plane : Plane) -> Tuple(bool, Plane): ...
    @property
    def Tolerance (self) -> float: ...
    @Tolerance.setter
    def Tolerance (self, value : float): ...
    @property
    def QuickPreview (self) -> bool: ...
    @QuickPreview.setter
    def QuickPreview (self, value : bool): ...
    @property
    def PreserveStructure (self) -> bool: ...
    @PreserveStructure.setter
    def PreserveStructure (self, value : bool): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class StretchSpaceMorph:
    def __init__(self, start : Point3d, end : Point3d, point : Point3d): ...
    def __init__(self, start : Point3d, end : Point3d, length : float): ...
    @property
    def IsValid (self) -> bool: ...
    def MorphPoint (self, point : Point3d) -> Point3d: ...
    def Dispose (self): ...
    def Morph (self, geometry : GeometryBase) -> bool: ...
    def Morph (self, plane : Plane) -> Tuple(bool, Plane): ...
    @property
    def Tolerance (self) -> float: ...
    @Tolerance.setter
    def Tolerance (self, value : float): ...
    @property
    def QuickPreview (self) -> bool: ...
    @QuickPreview.setter
    def QuickPreview (self, value : bool): ...
    @property
    def PreserveStructure (self) -> bool: ...
    @PreserveStructure.setter
    def PreserveStructure (self, value : bool): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class SporphSpaceMorph:
    def __init__(self, surface0 : Surface, surface1 : Surface): ...
    def __init__(self, surface0 : Surface, surface1 : Surface, surface0Param : Point2d, surface1Param : Point2d): ...
    @property
    def IsValid (self) -> bool: ...
    def MorphPoint (self, point : Point3d) -> Point3d: ...
    def Dispose (self): ...
    def Morph (self, geometry : GeometryBase) -> bool: ...
    def Morph (self, plane : Plane) -> Tuple(bool, Plane): ...
    @property
    def Tolerance (self) -> float: ...
    @Tolerance.setter
    def Tolerance (self, value : float): ...
    @property
    def QuickPreview (self) -> bool: ...
    @QuickPreview.setter
    def QuickPreview (self, value : bool): ...
    @property
    def PreserveStructure (self) -> bool: ...
    @PreserveStructure.setter
    def PreserveStructure (self, value : bool): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class FlowSpaceMorph:
    def __init__(self, curve0 : Curve, curve1 : Curve, preventStretching : bool): ...
    def __init__(self, curve0 : Curve, curve1 : Curve, reverseCurve0 : bool, reverseCurve1 : bool, preventStretching : bool): ...
    @property
    def IsValid (self) -> bool: ...
    def MorphPoint (self, point : Point3d) -> Point3d: ...
    def Dispose (self): ...
    def Morph (self, geometry : GeometryBase) -> bool: ...
    def Morph (self, plane : Plane) -> Tuple(bool, Plane): ...
    @property
    def Tolerance (self) -> float: ...
    @Tolerance.setter
    def Tolerance (self, value : float): ...
    @property
    def QuickPreview (self) -> bool: ...
    @QuickPreview.setter
    def QuickPreview (self, value : bool): ...
    @property
    def PreserveStructure (self) -> bool: ...
    @PreserveStructure.setter
    def PreserveStructure (self, value : bool): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class SplopSpaceMorph:
    def __init__(self, plane : Plane, surface : Surface, surfaceParam : Point2d): ...
    def __init__(self, plane : Plane, surface : Surface, surfaceParam : Point2d, scale : float): ...
    def __init__(self, plane : Plane, surface : Surface, surfaceParam : Point2d, scale : float, angle : float): ...
    @property
    def IsValid (self) -> bool: ...
    def MorphPoint (self, point : Point3d) -> Point3d: ...
    def Dispose (self): ...
    def Morph (self, geometry : GeometryBase) -> bool: ...
    def Morph (self, plane : Plane) -> Tuple(bool, Plane): ...
    @property
    def Tolerance (self) -> float: ...
    @Tolerance.setter
    def Tolerance (self, value : float): ...
    @property
    def QuickPreview (self) -> bool: ...
    @QuickPreview.setter
    def QuickPreview (self, value : bool): ...
    @property
    def PreserveStructure (self) -> bool: ...
    @PreserveStructure.setter
    def PreserveStructure (self, value : bool): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
