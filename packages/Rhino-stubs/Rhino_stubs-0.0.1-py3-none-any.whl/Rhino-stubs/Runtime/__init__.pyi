from typing import Tuple, Set, Iterable, List

class Analytics:
    def __init__(self, TrackingID : str, Name : str): ...
    def __init__(self, TrackingID : str, Name : str, Platform : str, InstallerId : str, Version : str): ...
    @property
    def GoogleAnalyticsTrackingID (self) -> str: ...
    @GoogleAnalyticsTrackingID.setter
    def GoogleAnalyticsTrackingID (self, value : str): ...
    @property
    def AppName (self) -> str: ...
    @AppName.setter
    def AppName (self, value : str): ...
    @property
    def AppPlatform (self) -> str: ...
    @AppPlatform.setter
    def AppPlatform (self, value : str): ...
    @property
    def AppInstallerId (self) -> str: ...
    @AppInstallerId.setter
    def AppInstallerId (self, value : str): ...
    @property
    def AppVersion (self) -> str: ...
    @AppVersion.setter
    def AppVersion (self, value : str): ...
    def Send (self, Category : str, Action : str, Label : str, Value : UInt32): ...
    def Send (self, data : NameValueCollection): ...
    def Send (self, Category : str): ...
    def Send (self, Category : str, Action : str): ...
    def Send (self, Category : str, Action : str, Label : str): ...
    @property
    def UsageStatisticsEnabled () -> bool: ...
    @property
    def UserId () -> Guid: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class Mode:
    NormalMode = 0
    ViewerMode = 1
    BetaMode = 2
    InvalidMode = 100
class Skin:
    @property
    def ActiveSkin () -> Skin: ...
    @property
    def Settings (self) -> PersistentSettings: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class PythonCompiledCode:
    def Execute (self, scope : PythonScript): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class PythonScript:
    def Create () -> PythonScript: ...
    def Compile (self, script : str) -> PythonCompiledCode: ...
    def ContainsVariable (self, name : str) -> bool: ...
    def GetVariableNames (self) -> Iterable(str): ...
    def GetVariable (self, name : str) -> Object: ...
    def SetVariable (self, name : str, value : Object): ...
    def SetIntellisenseVariable (self, name : str, value : Object): ...
    def RemoveVariable (self, name : str): ...
    def EvaluateExpression (self, statements : str, expression : str) -> Object: ...
    def ExecuteFile (self, path : str) -> bool: ...
    def ExecuteScript (self, script : str) -> bool: ...
    def GetStackTraceFromException (self, ex : Exception) -> str: ...
    @property
    def Output (self) -> Action: ...
    @Output.setter
    def Output (self, value : Action): ...
    @property
    def ScriptContextDoc (self) -> Object: ...
    @ScriptContextDoc.setter
    def ScriptContextDoc (self, value : Object): ...
    @property
    def ScriptContextCommand (self) -> Command: ...
    @ScriptContextCommand.setter
    def ScriptContextCommand (self, value : Command): ...
    @property
    def ContextId (self) -> int: ...
    @ContextId.setter
    def ContextId (self, value : int): ...
    def CreateTextEditorControl (self, script : str, helpcallback : Action) -> Object: ...
    def SetupScriptContext (self, doc : Object): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RiskyAction:
    def __init__(self, description : str, file : str, member : str, line : int): ...
    def Dispose (self): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class IPlatformServiceLocator:
    def GetService (self) -> T: ...
class HostUtils:
    def GetPlatformService (assemblyPath : str, typeFullName : str) -> T: ...
    def IsManagedDll (path : str) -> bool: ...
    def ClearFpuExceptionStatus (): ...
    def GetAssemblySearchPaths () -> Set(str): ...
    def InPlaceConstCast (geometry : GeometryBase, makeNonConst : bool): ...
    @property
    def RunningOnWindows () -> bool: ...
    @property
    def RunningOnOSX () -> bool: ...
    @property
    def DeviceName () -> str: ...
    @property
    def ComputerSerialNumber () -> str: ...
    @property
    def CurrentOSLanguage () -> UInt32: ...
    @property
    def DeviceId () -> Guid: ...
    @property
    def RunningInMono () -> bool: ...
    @property
    def RunningInRhino () -> bool: ...
    def CheckForRdk (throwOnFalse : bool, usePreviousResult : bool) -> bool: ...
    def GetAbsolutePath (relativePath : str, bRelativePathisFileName : bool, relativeTo : str, bRelativeToIsFileName : bool) -> Tuple(bool, str): ...
    def IsRhinoFileExtension (fileExtension : str) -> bool: ...
    def FileNameEndsWithRhinoExtension (fileName : str) -> bool: ...
    def IsRhinoBackupFileExtension (fileExtension : str) -> bool: ...
    def FileNameEndsWithRhinoBackupExtension (fileName : str) -> bool: ...
    def DebugString (msg : str): ...
    def DebugString (format : str, args : Set(Object)): ...
    @property
    def SendDebugToCommandLine () -> bool: ...
    @SendDebugToCommandLine.setter
    def SendDebugToCommandLine (value : bool): ...
    def ExceptionReport (ex : Exception): ...
    def ExceptionReport (source : str, ex : Exception): ...
    def add_OnExceptionReport (value : ExceptionReportDelegate): ...
    def remove_OnExceptionReport (value : ExceptionReportDelegate): ...
    def SendLogMessageToCloudCallbackProc (msg_type : LogMessageType, pwStringClass : IntPtr, pwStringDesc : IntPtr, pwStringMessage : IntPtr): ...
    def add_OnSendLogMessageToCloud (value : SendLogMessageToCloudDelegate): ...
    def remove_OnSendLogMessageToCloud (value : SendLogMessageToCloudDelegate): ...
    def DebugDumpToString (geometry : GeometryBase) -> str: ...
    def DebugDumpToString (bezierCurve : BezierCurve) -> str: ...
    def RecordInitInstanceTime (description : str): ...
    def CreateCommands (plugin : PlugIn): ...
    def CreateCommands (pPlugIn : IntPtr, pluginAssembly : Assembly) -> int: ...
    def RegisterDynamicCommand (plugin : PlugIn, cmd : Command) -> bool: ...
    def AutoInstallPlugInFolder (currentUser : bool) -> str: ...
    def GetActivePlugInVersionFolders (currentUser : bool) -> Iterable(DirectoryInfo): ...
    def InitializeRhinoCommon (): ...
    def InitializeRhinoCommon_RDK (): ...
    def ShutDownRhinoCommon_RDK (): ...
    def RhinoCommonExceptionHandler (title : str, sender : Object, ex : Exception): ...
    def UnhandledThreadException (sender : Object, e : ThreadExceptionEventArgs): ...
    def InitializeZooClient (): ...
    def CallFromCoreRhino (task : str) -> int: ...
    def CreatePlugIn (pluginType : Type, printDebugMessages : bool) -> PlugIn: ...
    def DisplayOleAlerts (display : bool): ...
    def GetRhinoDotNetAssembly () -> Assembly: ...
    def SetInShutDown (): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RdkNotLoadedException:
    def __init__(self): ...
    @property
    def Message (self) -> str: ...
    @property
    def Data (self) -> IDictionary: ...
    def GetBaseException (self) -> Exception: ...
    @property
    def InnerException (self) -> Exception: ...
    @property
    def TargetSite (self) -> MethodBase: ...
    @property
    def StackTrace (self) -> str: ...
    @property
    def HelpLink (self) -> str: ...
    @HelpLink.setter
    def HelpLink (self, value : str): ...
    @property
    def Source (self) -> str: ...
    @Source.setter
    def Source (self, value : str): ...
    def ToString (self) -> str: ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    @property
    def HResult (self) -> int: ...
    def GetType (self) -> Type: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class Interop:
    def FontFromPointer (ptrManagedFont : IntPtr) -> Font: ...
    def ViewCaptureFromPointer (ptrViewCapture : IntPtr) -> ViewCaptureSettings: ...
    def NativeRhinoDocPointer (doc : RhinoDoc) -> IntPtr: ...
    def NSFontFromFont (font : Font) -> IntPtr: ...
    def NSFontFromFont (font : Font, pointSize : float) -> IntPtr: ...
    def NativeGeometryConstPointer (geometry : GeometryBase) -> IntPtr: ...
    def NativeGeometryNonConstPointer (geometry : GeometryBase) -> IntPtr: ...
    def NativeNonConstPointer (settings : ViewCaptureSettings) -> IntPtr: ...
    def NativeNonConstPointer (viewport : ViewportInfo) -> IntPtr: ...
    def NativeNonConstPointer (viewport : RhinoViewport) -> IntPtr: ...
    def NativeNonConstPointer (pipeline : DisplayPipeline) -> IntPtr: ...
    def NativeNonConstPointer (getPoint : GetPoint) -> IntPtr: ...
    def RhinoObjectConstPointer (rhinoObject : RhinoObject) -> IntPtr: ...
    def RhinoObjectFromPointer (pRhinoObject : IntPtr) -> RhinoObject: ...
    def FileWriteOptionsConstPointer (options : FileWriteOptions) -> IntPtr: ...
    def FileReadOptionsConstPointer (options : FileReadOptions) -> IntPtr: ...
    def CreateFromNativePointer (pGeometry : IntPtr) -> GeometryBase: ...
    def TryCopyFromOnArc (source : Object) -> Tuple(bool, Arc): ...
    def TryCopyToOnArc (source : Arc, destination : Object) -> bool: ...
    def FromOnBrep (source : Object) -> Brep: ...
    def FromOnSurface (source : Object) -> Surface: ...
    def FromOnMesh (source : Object) -> Mesh: ...
    def FromOnCurve (source : Object) -> Curve: ...
    def ToOnBrep (source : Brep) -> Object: ...
    def ToOnSurface (source : Surface) -> Object: ...
    def ToOnMesh (source : Mesh) -> Object: ...
    def ToOnCurve (source : Curve) -> Object: ...
    def ToOnXform (source : Transform) -> Object: ...
    def ToIRhinoViewport (source : RhinoViewport) -> Object: ...
    def PlugInPointer (plugin : PlugIn) -> IntPtr: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class LicenseTypes:
    Undefined = 0
    Standalone = 1
    ZooAutoDetect = 2
    ZooManualDetect = 3
    CloudZoo = 4
class ZooClientParameters:
    def __init__(self, productGuid : Guid, licenseGuid : Guid, productTitle : str, productBuildType : int, capabilities : LicenseCapabilities, licenseEntryTextMask : str, productPath : str, parentWindow : Object, selectedLicenseType : LicenseTypes, validateProductKey : ValidateProductKeyDelegate, onLeaseChangedDelegate : OnLeaseChangedDelegate, verifyLicenseKeyDelegate : VerifyLicenseKeyDelegate, verifyPreviousVersionLicenseKeyDelegate : VerifyPreviousVersionLicenseDelegate): ...
    @property
    def ProductGuid (self) -> Guid: ...
    @property
    def LicenseGuid (self) -> Guid: ...
    @property
    def ProductTitle (self) -> str: ...
    @property
    def ProductBuildType (self) -> int: ...
    @property
    def Capabilities (self) -> LicenseCapabilities: ...
    @Capabilities.setter
    def Capabilities (self, value : LicenseCapabilities): ...
    @property
    def LicenseEntryTextMask (self) -> str: ...
    @property
    def ProductPath (self) -> str: ...
    @property
    def ParentWindow (self) -> Object: ...
    @property
    def SelectedLicenseType (self) -> LicenseTypes: ...
    @SelectedLicenseType.setter
    def SelectedLicenseType (self, value : LicenseTypes): ...
    @property
    def OnLeaseChanged (self) -> OnLeaseChangedDelegate: ...
    def VerifyPreviousVersionLicense (self, license : str, previousVersionLicense : str) -> Tuple(bool, str): ...
    def VerifyLicenseKey (self, licenseKey : str, validationCode : str, validationCodeInstallDate : DateTime, gracePeriodExpired : bool) -> Tuple(ValidateResult, LicenseData): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class IZooClientUtilities:
    def Initialize (self, verify : Object) -> bool: ...
    def Echo (self, verify : Object, message : str) -> str: ...
    def ShowRhinoExpiredMessage (self, mode : Mode, result : int) -> Tuple(bool, int): ...
    def GetLicense (self, verify : Object, parameters : ZooClientParameters) -> bool: ...
    def ReturnLicense (self, verify : Object, productId : Guid) -> bool: ...
    def ReturnLicense (self, verify : Object, productPath : str, productId : Guid) -> bool: ...
    def CheckOutLicense (self, verify : Object, productId : Guid) -> bool: ...
    def CheckInLicense (self, verify : Object, productId : Guid) -> bool: ...
    def ConvertLicense (self, verify : Object, productId : Guid) -> bool: ...
    def DeleteLicense (self, verify : Object, productId : Guid) -> bool: ...
    def GetLicenseType (self, verify : Object, productId : Guid) -> int: ...
    def IsCheckOutEnabled (self, verify : Object) -> bool: ...
    def GetLicenseStatus (self, verify : Object) -> Set(LicenseStatus): ...
    def GetOneLicenseStatus (self, verify : Object, productId : Guid) -> LicenseStatus: ...
    def ShowBuyLicenseUi (self, verify : Object, productId : Guid): ...
    def AskUserForLicense (self, verify : Object, parameters : ZooClientParameters) -> bool: ...
    def LicenseOptionsHandler (self, verify : Object, parameters : ZooClientParameters) -> bool: ...
    def ShowLicenseValidationUi (self, verify : Object, cdkey : str) -> bool: ...
    def GetRegisteredOwnerInfo (self, verify : Object, productId : Guid, registeredOwner : str, registeredOrganization : str) -> Tuple(bool, str, str): ...
    def LoginToCloudZoo (self) -> bool: ...
    def LogoutOfCloudZoo (self) -> bool: ...
    @property
    def LoggedInUserAvatar (self) -> Image: ...
    @property
    def LoggedInUserName (self) -> str: ...
    @property
    def UserIsLoggedIn (self) -> bool: ...
    def GetCurrentTime (self) -> DateTime: ...
class DocumentCollectedException:
    def __init__(self): ...
    def __init__(self, message : str): ...
    @property
    def Message (self) -> str: ...
    @property
    def Data (self) -> IDictionary: ...
    def GetBaseException (self) -> Exception: ...
    @property
    def InnerException (self) -> Exception: ...
    @property
    def TargetSite (self) -> MethodBase: ...
    @property
    def StackTrace (self) -> str: ...
    @property
    def HelpLink (self) -> str: ...
    @HelpLink.setter
    def HelpLink (self, value : str): ...
    @property
    def Source (self) -> str: ...
    @Source.setter
    def Source (self, value : str): ...
    def ToString (self) -> str: ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    @property
    def HResult (self) -> int: ...
    def GetType (self) -> Type: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class CorruptGeometryException:
    @property
    def Pointer (self) -> IntPtr: ...
    @property
    def CommonObject (self) -> CommonObject: ...
    @property
    def Message (self) -> str: ...
    @property
    def Data (self) -> IDictionary: ...
    def GetBaseException (self) -> Exception: ...
    @property
    def InnerException (self) -> Exception: ...
    @property
    def TargetSite (self) -> MethodBase: ...
    @property
    def StackTrace (self) -> str: ...
    @property
    def HelpLink (self) -> str: ...
    @HelpLink.setter
    def HelpLink (self, value : str): ...
    @property
    def Source (self) -> str: ...
    @Source.setter
    def Source (self, value : str): ...
    def ToString (self) -> str: ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    @property
    def HResult (self) -> int: ...
    def GetType (self) -> Type: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class CommonObject:
    @property
    def PerformCorruptionTesting () -> bool: ...
    @PerformCorruptionTesting.setter
    def PerformCorruptionTesting (value : bool): ...
    def EnsurePrivateCopy (self): ...
    @property
    def IsDocumentControlled (self) -> bool: ...
    @property
    def IsValid (self) -> bool: ...
    def IsValidWithLog (self) -> Tuple(bool, str): ...
    def Dispose (self): ...
    @property
    def Disposed (self) -> bool: ...
    @property
    def HasUserData (self) -> bool: ...
    @property
    def UserData (self) -> UserDataList: ...
    @property
    def UserDictionary (self) -> ArchivableDictionary: ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class AssemblyResolver:
    def AddSearchFolder (folder : str): ...
    def AddSearchFile (file : str): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class ViewCaptureWriter:
    def __init__(self, dpi : float, pageSize : Size): ...
    def Draw (self, constPtrPrintInfo : IntPtr): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class TextFields:
    def Notes () -> str: ...
    def NumPages () -> int: ...
    def PageNumber () -> int: ...
    def PageName () -> str: ...
    def Date () -> str: ...
    def Date (dateFormat : str) -> str: ...
    def DateModified () -> str: ...
    def DateModified (dateFormat : str) -> str: ...
    def Area (id : str) -> float: ...
    def Volume (id : str) -> float: ...
    def ObjectName (id : str) -> str: ...
    def DocumentText (key : str) -> str: ...
    def BlockInstanceCount (instanceDefinitionName : str) -> int: ...
    def ModelUnits () -> str: ...
    def FileName () -> str: ...
    def FileName (options : str) -> str: ...
    def UserText (id : str, key : str) -> str: ...
    def CurveLength (id : str) -> float: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class ExceptionReportDelegate:
    def __init__(self, object : Object, method : IntPtr): ...
    def Invoke (self, source : str, ex : Exception): ...
    def BeginInvoke (self, source : str, ex : Exception, callback : AsyncCallback, object : Object) -> IAsyncResult: ...
    def EndInvoke (self, result : IAsyncResult): ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def Equals (self, obj : Object) -> bool: ...
    def GetInvocationList (self) -> Set(Delegate): ...
    def GetHashCode (self) -> int: ...
    def DynamicInvoke (self, args : Set(Object)) -> Object: ...
    @property
    def Method (self) -> MethodInfo: ...
    @property
    def Target (self) -> Object: ...
    def Clone (self) -> Object: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class LogMessageType:
    unknown = 0
    information = 1
    warning = 2
    error = 3
    assert = 4
class SendLogMessageToCloudDelegate:
    def __init__(self, object : Object, method : IntPtr): ...
    def Invoke (self, msg_type : LogMessageType, sClass : str, sDesc : str, sMessage : str): ...
    def BeginInvoke (self, msg_type : LogMessageType, sClass : str, sDesc : str, sMessage : str, callback : AsyncCallback, object : Object) -> IAsyncResult: ...
    def EndInvoke (self, result : IAsyncResult): ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def Equals (self, obj : Object) -> bool: ...
    def GetInvocationList (self) -> Set(Delegate): ...
    def GetHashCode (self) -> int: ...
    def DynamicInvoke (self, args : Set(Object)) -> Object: ...
    @property
    def Method (self) -> MethodInfo: ...
    @property
    def Target (self) -> Object: ...
    def Clone (self) -> Object: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class SetClipRectProc:
    def __init__(self, object : Object, method : IntPtr): ...
    def Invoke (self, left : int, top : int, right : int, bottom : int) -> Tuple(int, int, int, int): ...
    def BeginInvoke (self, left : int, top : int, right : int, bottom : int, callback : AsyncCallback, object : Object) -> Tuple(IAsyncResult, int, int, int, int): ...
    def EndInvoke (self, left : int, top : int, right : int, bottom : int, result : IAsyncResult) -> Tuple(int, int, int, int): ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def Equals (self, obj : Object) -> bool: ...
    def GetInvocationList (self) -> Set(Delegate): ...
    def GetHashCode (self) -> int: ...
    def DynamicInvoke (self, args : Set(Object)) -> Object: ...
    @property
    def Method (self) -> MethodInfo: ...
    @property
    def Target (self) -> Object: ...
    def Clone (self) -> Object: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class VectorPolylineProc:
    def __init__(self, object : Object, method : IntPtr): ...
    def Invoke (self, argb : int, thickness : Single, dashed : int, count : int, points : IntPtr): ...
    def BeginInvoke (self, argb : int, thickness : Single, dashed : int, count : int, points : IntPtr, callback : AsyncCallback, object : Object) -> IAsyncResult: ...
    def EndInvoke (self, result : IAsyncResult): ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def Equals (self, obj : Object) -> bool: ...
    def GetInvocationList (self) -> Set(Delegate): ...
    def GetHashCode (self) -> int: ...
    def DynamicInvoke (self, args : Set(Object)) -> Object: ...
    @property
    def Method (self) -> MethodInfo: ...
    @property
    def Target (self) -> Object: ...
    def Clone (self) -> Object: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class VectorArcProc:
    def __init__(self, object : Object, method : IntPtr): ...
    def Invoke (self, argb : int, thickness : Single, dashed : int, arc : Arc) -> Tuple(Arc): ...
    def BeginInvoke (self, argb : int, thickness : Single, dashed : int, arc : Arc, callback : AsyncCallback, object : Object) -> Tuple(IAsyncResult, Arc): ...
    def EndInvoke (self, arc : Arc, result : IAsyncResult) -> Tuple(Arc): ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def Equals (self, obj : Object) -> bool: ...
    def GetInvocationList (self) -> Set(Delegate): ...
    def GetHashCode (self) -> int: ...
    def DynamicInvoke (self, args : Set(Object)) -> Object: ...
    @property
    def Method (self) -> MethodInfo: ...
    @property
    def Target (self) -> Object: ...
    def Clone (self) -> Object: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class VectorStringProc:
    def __init__(self, object : Object, method : IntPtr): ...
    def Invoke (self, constPtrString : IntPtr, argbTextColor : int, x : float, y : float, angle : Single, alignment : int, heightPixels : Single, constPtrFont : IntPtr): ...
    def BeginInvoke (self, constPtrString : IntPtr, argbTextColor : int, x : float, y : float, angle : Single, alignment : int, heightPixels : Single, constPtrFont : IntPtr, callback : AsyncCallback, object : Object) -> IAsyncResult: ...
    def EndInvoke (self, result : IAsyncResult): ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def Equals (self, obj : Object) -> bool: ...
    def GetInvocationList (self) -> Set(Delegate): ...
    def GetHashCode (self) -> int: ...
    def DynamicInvoke (self, args : Set(Object)) -> Object: ...
    @property
    def Method (self) -> MethodInfo: ...
    @property
    def Target (self) -> Object: ...
    def Clone (self) -> Object: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class VectorFillPolygonProc:
    def __init__(self, object : Object, method : IntPtr): ...
    def Invoke (self, argb : int, count : int, points : IntPtr): ...
    def BeginInvoke (self, argb : int, count : int, points : IntPtr, callback : AsyncCallback, object : Object) -> IAsyncResult: ...
    def EndInvoke (self, result : IAsyncResult): ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def Equals (self, obj : Object) -> bool: ...
    def GetInvocationList (self) -> Set(Delegate): ...
    def GetHashCode (self) -> int: ...
    def DynamicInvoke (self, args : Set(Object)) -> Object: ...
    @property
    def Method (self) -> MethodInfo: ...
    @property
    def Target (self) -> Object: ...
    def Clone (self) -> Object: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class VectorPathProc:
    def __init__(self, object : Object, method : IntPtr): ...
    def Invoke (self, begin : int, argb : int): ...
    def BeginInvoke (self, begin : int, argb : int, callback : AsyncCallback, object : Object) -> IAsyncResult: ...
    def EndInvoke (self, result : IAsyncResult): ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def Equals (self, obj : Object) -> bool: ...
    def GetInvocationList (self) -> Set(Delegate): ...
    def GetHashCode (self) -> int: ...
    def DynamicInvoke (self, args : Set(Object)) -> Object: ...
    @property
    def Method (self) -> MethodInfo: ...
    @property
    def Target (self) -> Object: ...
    def Clone (self) -> Object: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class VectorPointProc:
    def __init__(self, object : Object, method : IntPtr): ...
    def Invoke (self, style : int, screenX : Single, screenY : Single, fillArgb : int, strokeArgb : int, diameterPixels : Single, innerDiameterPixels : Single, strokeWidthPixels : Single, rotationRadians : Single): ...
    def BeginInvoke (self, style : int, screenX : Single, screenY : Single, fillArgb : int, strokeArgb : int, diameterPixels : Single, innerDiameterPixels : Single, strokeWidthPixels : Single, rotationRadians : Single, callback : AsyncCallback, object : Object) -> IAsyncResult: ...
    def EndInvoke (self, result : IAsyncResult): ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def Equals (self, obj : Object) -> bool: ...
    def GetInvocationList (self) -> Set(Delegate): ...
    def GetHashCode (self) -> int: ...
    def DynamicInvoke (self, args : Set(Object)) -> Object: ...
    @property
    def Method (self) -> MethodInfo: ...
    @property
    def Target (self) -> Object: ...
    def Clone (self) -> Object: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class VectorBitmapProc:
    def __init__(self, object : Object, method : IntPtr): ...
    def Invoke (self, hBmp : IntPtr, m11 : float, m12 : float, m21 : float, m22 : float, dx : float, dy : float): ...
    def BeginInvoke (self, hBmp : IntPtr, m11 : float, m12 : float, m21 : float, m22 : float, dx : float, dy : float, callback : AsyncCallback, object : Object) -> IAsyncResult: ...
    def EndInvoke (self, result : IAsyncResult): ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def Equals (self, obj : Object) -> bool: ...
    def GetInvocationList (self) -> Set(Delegate): ...
    def GetHashCode (self) -> int: ...
    def DynamicInvoke (self, args : Set(Object)) -> Object: ...
    @property
    def Method (self) -> MethodInfo: ...
    @property
    def Target (self) -> Object: ...
    def Clone (self) -> Object: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class VectorRoundedRectProc:
    def __init__(self, object : Object, method : IntPtr): ...
    def Invoke (self, centerX : Single, centerY : Single, pixelWidth : Single, pixelHeight : Single, cornerRadius : Single, strokeColor : int, strokeWidth : Single, fillColor : int): ...
    def BeginInvoke (self, centerX : Single, centerY : Single, pixelWidth : Single, pixelHeight : Single, cornerRadius : Single, strokeColor : int, strokeWidth : Single, fillColor : int, callback : AsyncCallback, object : Object) -> IAsyncResult: ...
    def EndInvoke (self, result : IAsyncResult): ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def Equals (self, obj : Object) -> bool: ...
    def GetInvocationList (self) -> Set(Delegate): ...
    def GetHashCode (self) -> int: ...
    def DynamicInvoke (self, args : Set(Object)) -> Object: ...
    @property
    def Method (self) -> MethodInfo: ...
    @property
    def Target (self) -> Object: ...
    def Clone (self) -> Object: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class VectorClipPathProc:
    def __init__(self, object : Object, method : IntPtr): ...
    def Invoke (self, count : int, points : IntPtr, asBeziers : int): ...
    def BeginInvoke (self, count : int, points : IntPtr, asBeziers : int, callback : AsyncCallback, object : Object) -> IAsyncResult: ...
    def EndInvoke (self, result : IAsyncResult): ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def Equals (self, obj : Object) -> bool: ...
    def GetInvocationList (self) -> Set(Delegate): ...
    def GetHashCode (self) -> int: ...
    def DynamicInvoke (self, args : Set(Object)) -> Object: ...
    @property
    def Method (self) -> MethodInfo: ...
    @property
    def Target (self) -> Object: ...
    def Clone (self) -> Object: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class VectorGradientProc:
    def __init__(self, object : Object, method : IntPtr): ...
    def Invoke (self, pEngine : IntPtr, pHatch : IntPtr, strokeWidth : Single, gradientCount : int, colors : IntPtr, stops : IntPtr, points : IntPtr, linearGradient : int, boundaryColor : int): ...
    def BeginInvoke (self, pEngine : IntPtr, pHatch : IntPtr, strokeWidth : Single, gradientCount : int, colors : IntPtr, stops : IntPtr, points : IntPtr, linearGradient : int, boundaryColor : int, callback : AsyncCallback, object : Object) -> IAsyncResult: ...
    def EndInvoke (self, result : IAsyncResult): ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def Equals (self, obj : Object) -> bool: ...
    def GetInvocationList (self) -> Set(Delegate): ...
    def GetHashCode (self) -> int: ...
    def DynamicInvoke (self, args : Set(Object)) -> Object: ...
    @property
    def Method (self) -> MethodInfo: ...
    @property
    def Target (self) -> Object: ...
    def Clone (self) -> Object: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class Pen:
    def __init__(self): ...
    @property
    def Color (self) -> Color: ...
    @property
    def Width (self) -> Single: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class PointType:
    Move = 0
    Line = 1
    CubicBezier = 2
    Close = 3
class PathPoint:
    @property
    def Location (self) -> PointF: ...
    @Location.setter
    def Location (self, value : PointF): ...
    @property
    def PointType (self) -> PointType: ...
    @PointType.setter
    def PointType (self, value : PointType): ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
