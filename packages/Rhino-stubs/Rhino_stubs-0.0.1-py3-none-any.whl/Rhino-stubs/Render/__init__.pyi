from typing import Tuple, Set, Iterable, List

class Dithering:
    def __init__(self): ...
    def __init__(self, d : Dithering): ...
    def CopyFrom (self, src : FreeFloatingBase): ...
    @property
    def Method (self) -> Methods: ...
    @Method.setter
    def Method (self, value : Methods): ...
    def BeginChange (self, cc : ChangeContexts): ...
    def EndChange (self) -> bool: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderSettings:
    def __init__(self, source : RenderSettings): ...
    def __init__(self): ...
    @property
    def AmbientLight (self) -> Color: ...
    @AmbientLight.setter
    def AmbientLight (self, value : Color): ...
    @property
    def BackgroundColorTop (self) -> Color: ...
    @BackgroundColorTop.setter
    def BackgroundColorTop (self, value : Color): ...
    @property
    def BackgroundColorBottom (self) -> Color: ...
    @BackgroundColorBottom.setter
    def BackgroundColorBottom (self, value : Color): ...
    @property
    def UseHiddenLights (self) -> bool: ...
    @UseHiddenLights.setter
    def UseHiddenLights (self, value : bool): ...
    @property
    def DepthCue (self) -> bool: ...
    @DepthCue.setter
    def DepthCue (self, value : bool): ...
    @property
    def FlatShade (self) -> bool: ...
    @FlatShade.setter
    def FlatShade (self, value : bool): ...
    @property
    def RenderBackfaces (self) -> bool: ...
    @RenderBackfaces.setter
    def RenderBackfaces (self, value : bool): ...
    @property
    def RenderPoints (self) -> bool: ...
    @RenderPoints.setter
    def RenderPoints (self, value : bool): ...
    @property
    def RenderCurves (self) -> bool: ...
    @RenderCurves.setter
    def RenderCurves (self, value : bool): ...
    @property
    def RenderIsoparams (self) -> bool: ...
    @RenderIsoparams.setter
    def RenderIsoparams (self, value : bool): ...
    @property
    def RenderMeshEdges (self) -> bool: ...
    @RenderMeshEdges.setter
    def RenderMeshEdges (self, value : bool): ...
    @property
    def RenderAnnotations (self) -> bool: ...
    @RenderAnnotations.setter
    def RenderAnnotations (self, value : bool): ...
    @property
    def AntialiasLevel (self) -> AntialiasLevel: ...
    @AntialiasLevel.setter
    def AntialiasLevel (self, value : AntialiasLevel): ...
    @property
    def UseViewportSize (self) -> bool: ...
    @UseViewportSize.setter
    def UseViewportSize (self, value : bool): ...
    @property
    def ScaleBackgroundToFit (self) -> bool: ...
    @ScaleBackgroundToFit.setter
    def ScaleBackgroundToFit (self, value : bool): ...
    @property
    def TransparentBackground (self) -> bool: ...
    @TransparentBackground.setter
    def TransparentBackground (self, value : bool): ...
    @property
    def ImageUnitSystem (self) -> UnitSystem: ...
    @ImageUnitSystem.setter
    def ImageUnitSystem (self, value : UnitSystem): ...
    @property
    def ImageDpi (self) -> float: ...
    @ImageDpi.setter
    def ImageDpi (self, value : float): ...
    @property
    def ImageSize (self) -> Size: ...
    @ImageSize.setter
    def ImageSize (self, value : Size): ...
    @property
    def ShadowmapLevel (self) -> int: ...
    @ShadowmapLevel.setter
    def ShadowmapLevel (self, value : int): ...
    @property
    def BackgroundStyle (self) -> BackgroundStyle: ...
    @BackgroundStyle.setter
    def BackgroundStyle (self, value : BackgroundStyle): ...
    @property
    def LinearWorkflow (self) -> LinearWorkflow: ...
    @property
    def Dithering (self) -> Dithering: ...
    @NamedView.setter
    def NamedView (self, value : str): ...
    @property
    def NamedView (self) -> str: ...
    @Snapshot.setter
    def Snapshot (self, value : str): ...
    @property
    def Snapshot (self) -> str: ...
    @SpecificViewport.setter
    def SpecificViewport (self, value : str): ...
    @property
    def SpecificViewport (self) -> str: ...
    @property
    def RenderSource (self) -> RenderingSources: ...
    @RenderSource.setter
    def RenderSource (self, value : RenderingSources): ...
    def EnsurePrivateCopy (self): ...
    @property
    def IsDocumentControlled (self) -> bool: ...
    @property
    def IsValid (self) -> bool: ...
    def IsValidWithLog (self) -> Tuple(bool, str): ...
    def Dispose (self): ...
    @property
    def Disposed (self) -> bool: ...
    @property
    def HasUserData (self) -> bool: ...
    @property
    def UserData (self) -> UserDataList: ...
    @property
    def UserDictionary (self) -> ArchivableDictionary: ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class CachedTextureCoordinates:
    def TryGetAt (self, index : int) -> Tuple(bool, float, float, float): ...
    @property
    def Dim (self) -> int: ...
    @property
    def MappingId (self) -> Guid: ...
    def Contains (self, item : Point3d) -> bool: ...
    def CopyTo (self, array : Set(Point3d), arrayIndex : int): ...
    @property
    def Count (self) -> int: ...
    @property
    def IsReadOnly (self) -> bool: ...
    def GetEnumerator (self) -> IEnumerator: ...
    def IndexOf (self, item : Point3d) -> int: ...
    @property
    def Item (self, index : int) -> Point3d: ...
    def EnsurePrivateCopy (self): ...
    @property
    def IsDocumentControlled (self) -> bool: ...
    @property
    def IsValid (self) -> bool: ...
    def IsValidWithLog (self) -> Tuple(bool, str): ...
    def Dispose (self): ...
    @property
    def Disposed (self) -> bool: ...
    @property
    def HasUserData (self) -> bool: ...
    @property
    def UserData (self) -> UserDataList: ...
    @property
    def UserDictionary (self) -> ArchivableDictionary: ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class MappingTag:
    def __init__(self): ...
    @property
    def Id (self) -> Guid: ...
    @Id.setter
    def Id (self, value : Guid): ...
    @property
    def MappingType (self) -> TextureMappingType: ...
    @MappingType.setter
    def MappingType (self, value : TextureMappingType): ...
    @property
    def MappingCRC (self) -> UInt32: ...
    @MappingCRC.setter
    def MappingCRC (self, value : UInt32): ...
    @property
    def MeshTransform (self) -> Transform: ...
    @MeshTransform.setter
    def MeshTransform (self, value : Transform): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class TextureMappingType:
    None = 0
    SurfaceParameters = 1
    PlaneMapping = 2
    CylinderMapping = 3
    SphereMapping = 4
    BoxMapping = 5
    MeshMappingPrimitive = 6
    SurfaceMappingPrimitive = 7
    BrepMappingPrimitive = 8
class TextureMapping:
    @property
    def MappingType (self) -> TextureMappingType: ...
    @property
    def Id (self) -> Guid: ...
    @property
    def UvwTransform (self) -> Transform: ...
    @UvwTransform.setter
    def UvwTransform (self, value : Transform): ...
    @property
    def PrimativeTransform (self) -> Transform: ...
    @PrimativeTransform.setter
    def PrimativeTransform (self, value : Transform): ...
    @property
    def NormalTransform (self) -> Transform: ...
    @NormalTransform.setter
    def NormalTransform (self, value : Transform): ...
    @property
    def ComponentType (self) -> ModelComponentType: ...
    def TryGetMappingBox (self) -> Tuple(bool, Plane, Interval, Interval, Interval): ...
    def TryGetMappingBox (self) -> Tuple(bool, Plane, Interval, Interval, Interval, bool): ...
    def TryGetMappingSphere (self) -> Tuple(bool, Sphere): ...
    def TryGetMappingCylinder (self) -> Tuple(bool, Cylinder): ...
    def TryGetMappingCylinder (self) -> Tuple(bool, Cylinder, bool): ...
    def TryGetMappingPlane (self) -> Tuple(bool, Plane, Interval, Interval, Interval): ...
    def TryGetMappingPlane (self) -> Tuple(bool, Plane, Interval, Interval, Interval, bool): ...
    def CreatePlaneMapping (plane : Plane, dx : Interval, dy : Interval, dz : Interval) -> TextureMapping: ...
    def CreatePlaneMapping (plane : Plane, dx : Interval, dy : Interval, dz : Interval, capped : bool) -> TextureMapping: ...
    def CreateCylinderMapping (cylinder : Cylinder, capped : bool) -> TextureMapping: ...
    def CreateSphereMapping (sphere : Sphere) -> TextureMapping: ...
    def CreateBoxMapping (plane : Plane, dx : Interval, dy : Interval, dz : Interval, capped : bool) -> TextureMapping: ...
    def DataCRC (self, currentRemainder : UInt32) -> UInt32: ...
    @property
    def IsSystemComponent (self) -> bool: ...
    @Id.setter
    def Id (self, value : Guid): ...
    def ClearId (self): ...
    @property
    def HasId (self) -> bool: ...
    @property
    def IdIsLocked (self) -> bool: ...
    def LockId (self): ...
    @property
    def Index (self) -> int: ...
    @Index.setter
    def Index (self, value : int): ...
    def ClearIndex (self): ...
    @property
    def HasIndex (self) -> bool: ...
    @property
    def IndexIsLocked (self) -> bool: ...
    def LockIndex (self): ...
    @property
    def ComponentStatus (self) -> ComponentStatus: ...
    @ComponentStatus.setter
    def ComponentStatus (self, value : ComponentStatus): ...
    @property
    def IsComponentStatusLocked (self) -> bool: ...
    @property
    def Name (self) -> str: ...
    @Name.setter
    def Name (self, value : str): ...
    def ClearName (self): ...
    @property
    def HasName (self) -> bool: ...
    @property
    def NameIsLocked (self) -> bool: ...
    def LockName (self): ...
    @property
    def DeletedName (self) -> str: ...
    @property
    def ModelSerialNumber (self) -> UInt32: ...
    @property
    def ReferenceModelSerialNumber (self) -> UInt32: ...
    @property
    def InstanceDefinitionModelSerialNumber (self) -> UInt32: ...
    def ToString (self) -> str: ...
    def EnsurePrivateCopy (self): ...
    @property
    def IsDocumentControlled (self) -> bool: ...
    @property
    def IsValid (self) -> bool: ...
    def IsValidWithLog (self) -> Tuple(bool, str): ...
    def Dispose (self): ...
    @property
    def Disposed (self) -> bool: ...
    @property
    def HasUserData (self) -> bool: ...
    @property
    def UserData (self) -> UserDataList: ...
    @property
    def UserDictionary (self) -> ArchivableDictionary: ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class City:
    @property
    def Name (self) -> str: ...
    @property
    def Latitude (self) -> float: ...
    @property
    def Longitude (self) -> float: ...
    @property
    def TimeZone (self) -> float: ...
    def FindNearest (latitude : float, longitude : float) -> City: ...
    def Cities () -> int: ...
    def CityAt (index : int) -> City: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderContentSerializer:
    def RegisterSerializer (self, id : Guid) -> bool: ...
    @property
    def FileExtension (self) -> str: ...
    @property
    def ContentType (self) -> RenderContentKind: ...
    @property
    def CanRead (self) -> bool: ...
    @property
    def CanWrite (self) -> bool: ...
    def Read (self, pathToFile : str) -> RenderContent: ...
    def Write (self, pathToFile : str, renderContent : RenderContent, previewArgs : CreatePreviewEventArgs) -> bool: ...
    @property
    def EnglishDescription (self) -> str: ...
    @property
    def LocalDescription (self) -> str: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderPropertyChangedEvent:
    @property
    def Document (self) -> RhinoDoc: ...
    @property
    def Context (self) -> int: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class GroundPlane:
    def __init__(self): ...
    def __init__(self, g : GroundPlane): ...
    def add_Changed (value : EventHandler): ...
    def remove_Changed (value : EventHandler): ...
    def CopyFrom (self, src : FreeFloatingBase): ...
    @property
    def Enabled (self) -> bool: ...
    @Enabled.setter
    def Enabled (self, value : bool): ...
    @property
    def ShadowOnly (self) -> bool: ...
    @ShadowOnly.setter
    def ShadowOnly (self, value : bool): ...
    @property
    def AutoAltitude (self) -> bool: ...
    @AutoAltitude.setter
    def AutoAltitude (self, value : bool): ...
    @property
    def ShowUnderside (self) -> bool: ...
    @ShowUnderside.setter
    def ShowUnderside (self, value : bool): ...
    @property
    def Altitude (self) -> float: ...
    @Altitude.setter
    def Altitude (self, value : float): ...
    @property
    def MaterialInstanceId (self) -> Guid: ...
    @MaterialInstanceId.setter
    def MaterialInstanceId (self, value : Guid): ...
    @property
    def TextureOffset (self) -> Vector2d: ...
    @TextureOffset.setter
    def TextureOffset (self, value : Vector2d): ...
    @property
    def TextureSize (self) -> Vector2d: ...
    @TextureSize.setter
    def TextureSize (self, value : Vector2d): ...
    @property
    def TextureRotation (self) -> float: ...
    @TextureRotation.setter
    def TextureRotation (self, value : float): ...
    @property
    def TextureSizeLocked (self) -> bool: ...
    @TextureSizeLocked.setter
    def TextureSizeLocked (self, value : bool): ...
    @property
    def TextureOffsetLocked (self) -> bool: ...
    @TextureOffsetLocked.setter
    def TextureOffsetLocked (self, value : bool): ...
    def BeginChange (self, cc : ChangeContexts): ...
    def EndChange (self) -> bool: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderContentStyles:
    None = 0
    TextureSummary = 1
    QuickPreview = 2
    PreviewCache = 4
    ProgressivePreview = 8
    LocalTextureMapping = 16
    GraphDisplay = 32
    SharedUI = 64
    Adjustment = 128
    Fields = 256
    ModalEditing = 512
    DynamicFields = 1024
class ContentUuids:
    @property
    def BasicMaterialType () -> Guid: ...
    @property
    def BlendMaterialType () -> Guid: ...
    @property
    def CompositeMaterialType () -> Guid: ...
    @property
    def PlasterMaterialType () -> Guid: ...
    @property
    def MetalMaterialType () -> Guid: ...
    @property
    def PaintMaterialType () -> Guid: ...
    @property
    def PlasticMaterialType () -> Guid: ...
    @property
    def GemMaterialType () -> Guid: ...
    @property
    def GlassMaterialType () -> Guid: ...
    @property
    def PictureMaterialType () -> Guid: ...
    @property
    def DefaultMaterialInstance () -> Guid: ...
    @property
    def RealtimeDisplayMaterialType () -> Guid: ...
    @property
    def BasicEnvironmentType () -> Guid: ...
    @property
    def DefaultEnvironmentInstance () -> Guid: ...
    @property
    def Texture2DCheckerTextureType () -> Guid: ...
    @property
    def Texture3DCheckerTextureType () -> Guid: ...
    @property
    def AdvancedDotTextureType () -> Guid: ...
    @property
    def BitmapTextureType () -> Guid: ...
    @property
    def BlendTextureType () -> Guid: ...
    @property
    def CubeMapTextureType () -> Guid: ...
    @property
    def ExposureTextureType () -> Guid: ...
    @property
    def FBmTextureType () -> Guid: ...
    @property
    def GradientTextureType () -> Guid: ...
    @property
    def GraniteTextureType () -> Guid: ...
    @property
    def GridTextureType () -> Guid: ...
    @property
    def HDRTextureType () -> Guid: ...
    @property
    def EXRTextureType () -> Guid: ...
    @property
    def MarbleTextureType () -> Guid: ...
    @property
    def MaskTextureType () -> Guid: ...
    @property
    def NoiseTextureType () -> Guid: ...
    @property
    def PerlinMarbleTextureType () -> Guid: ...
    @property
    def PerturbingTextureType () -> Guid: ...
    @property
    def ProjectionChangerTextureType () -> Guid: ...
    @property
    def ResampleTextureType () -> Guid: ...
    @property
    def SingleColorTextureType () -> Guid: ...
    @property
    def SimpleBitmapTextureType () -> Guid: ...
    @property
    def StuccoTextureType () -> Guid: ...
    @property
    def TextureAdjustmentTextureType () -> Guid: ...
    @property
    def TileTextureType () -> Guid: ...
    @property
    def TurbulenceTextureType () -> Guid: ...
    @property
    def WavesTextureType () -> Guid: ...
    @property
    def WoodTextureType () -> Guid: ...
    @property
    def HatchBumpTexture () -> Guid: ...
    @property
    def CrossHatchBumpTexture () -> Guid: ...
    @property
    def LeatherBumpTexture () -> Guid: ...
    @property
    def WoodBumpTexture () -> Guid: ...
    @property
    def SpeckleBumpTexture () -> Guid: ...
    @property
    def GritBumpTexture () -> Guid: ...
    @property
    def DotBumpTexture () -> Guid: ...
    @property
    def BasicMaterialCCI () -> Guid: ...
    @property
    def BlendMaterialCCI () -> Guid: ...
    @property
    def CompositeMaterialCCI () -> Guid: ...
    @property
    def BasicEnvironmentCCI () -> Guid: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class DynamicIconUsage:
    TreeControl = 0
    SubnodeControl = 1
    ContentControl = 2
class CustomRenderContentAttribute:
    def __init__(self, renderEngineGuid : str, imageBased : bool, category : str, is_elevated : bool, is_built_in : bool, is_private : bool): ...
    @property
    def RenderEngineId (self) -> Guid: ...
    @property
    def ImageBased (self) -> bool: ...
    @ImageBased.setter
    def ImageBased (self, value : bool): ...
    @property
    def Category (self) -> str: ...
    @Category.setter
    def Category (self, value : str): ...
    @property
    def IsElevated (self) -> bool: ...
    @IsElevated.setter
    def IsElevated (self, value : bool): ...
    @property
    def IsBuiltIn (self) -> bool: ...
    @IsBuiltIn.setter
    def IsBuiltIn (self, value : bool): ...
    @property
    def IsPrivate (self) -> bool: ...
    @IsPrivate.setter
    def IsPrivate (self, value : bool): ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    @property
    def TypeId (self) -> Object: ...
    def Match (self, obj : Object) -> bool: ...
    def IsDefaultAttribute (self) -> bool: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class RenderContentKind:
    None = 0
    Material = 1
    Environment = 2
    Texture = 4
class it_strategy:
    ContentDataBase = 0
    ContentSelection = 1
class ProxyTypes:
    None = 0
    Single = 1
    Multi = 2
class RenderContentKindList:
    def __init__(self): ...
    def __init__(self, kind_list : RenderContentKindList): ...
    def __init__(self, pRdkRenderContentKindList : IntPtr): ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def Dispose (self): ...
    def Add (self, kind : RenderContentKind): ...
    def Count (self) -> int: ...
    def SingleKind (self) -> RenderContentKind: ...
    def Contains (self, kind : RenderContentKind) -> bool: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class FilterContentByUsage:
    None = 0
    Used = 1
    Unused = 2
class RenderContentCollection:
    def __init__(self): ...
    def __init__(self, nativePtr : IntPtr): ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def Dispose (self): ...
    def GetFilterContentByUsage (self) -> FilterContentByUsage: ...
    def GetForcedVaries (self) -> bool: ...
    def SetForcedVaries (self, b : bool): ...
    def SetSearchPattern (self, pattern : str): ...
    def GetSearchPattern (self) -> str: ...
    def FirstTag (self) -> str: ...
    def NextTag (self) -> str: ...
    def Remove (self, collection : RenderContentCollection): ...
    def Add (self, collection : RenderContentCollection): ...
    def Set (self, collection : RenderContentCollection): ...
    def Clear (self): ...
    def Append (self, content : RenderContent): ...
    def Count (self) -> int: ...
    def Iterator (self) -> ContentCollectionIterator: ...
    def Find_Sel (self, uuid : Guid) -> RenderContent: ...
    def ContentAt (self, index : int) -> RenderContent: ...
    def GetEnumerator (self) -> IEnumerator: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class ContentCollectionIterator:
    def __init__(self, pCollection : IntPtr): ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def Dispose (self): ...
    def DeleteThis (self): ...
    def First (self) -> RenderContent: ...
    def Next (self) -> RenderContent: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderContent:
    def SetChildSlotOn (self, childSlotName : str, bOn : bool, cc : ChangeContexts): ...
    def ChildSlotAmount (self, childSlotName : str) -> float: ...
    def SetChildSlotAmount (self, childSlotName : str, amount : float, cc : ChangeContexts): ...
    def NewPreviewSceneServer (self, ssd : SceneServerData) -> PreviewSceneServer: ...
    def MatchData (self, oldContent : RenderContent) -> MatchDataResult: ...
    def IsCompatible (self, renderEngineId : Guid) -> bool: ...
    def ChildSlotNameFromParamName (self, paramName : str) -> str: ...
    def ParamNameFromChildSlotName (self, childSlotName : str) -> str: ...
    def FindChild (self, childSlotName : str) -> RenderContent: ...
    def SetChild (self, renderContent : RenderContent, childSlotName : str) -> bool: ...
    def SetChild (self, renderContent : RenderContent, childSlotName : str, changeContexts : ChangeContexts) -> bool: ...
    def AddChild (self, renderContent : RenderContent) -> bool: ...
    def AddChild (self, renderContent : RenderContent, childSlotName : str) -> bool: ...
    def DeleteChild (self, childSlotName : str, changeContexts : ChangeContexts) -> bool: ...
    def DeleteAllChildren (self, changeContexts : ChangeContexts): ...
    def ChangeChild (self, oldContent : RenderContent, newContent : RenderContent) -> bool: ...
    @property
    def ChildSlotName (self) -> str: ...
    @ChildSlotName.setter
    def ChildSlotName (self, value : str): ...
    def GetEmbeddedFilesList (self) -> Set(str): ...
    def Initialize (self) -> bool: ...
    def Uninitialize (self): ...
    def Replace (self, newcontent : RenderContent) -> bool: ...
    def IsFactoryProductAcceptableAsChild (self, kindId : Guid, factoryKind : str, childSlotName : str) -> bool: ...
    @property
    def FilesToEmbed (self) -> Iterable(str): ...
    def VirtualIcon (self, size : Size) -> Tuple(bool, Bitmap): ...
    def Icon (self, size : Size) -> Tuple(bool, Bitmap): ...
    def DynamicIcon (self, size : Size, usage : DynamicIconUsage) -> Tuple(bool, Bitmap): ...
    def add_ContentAdded (value : EventHandler): ...
    def remove_ContentAdded (value : EventHandler): ...
    def add_ContentRenamed (value : EventHandler): ...
    def remove_ContentRenamed (value : EventHandler): ...
    def add_ContentDeleting (value : EventHandler): ...
    def remove_ContentDeleting (value : EventHandler): ...
    def add_ContentDeleted (value : EventHandler): ...
    def remove_ContentDeleted (value : EventHandler): ...
    def add_ContentReplacing (value : EventHandler): ...
    def remove_ContentReplacing (value : EventHandler): ...
    def add_ContentReplaced (value : EventHandler): ...
    def remove_ContentReplaced (value : EventHandler): ...
    def add_ContentChanged (value : EventHandler): ...
    def remove_ContentChanged (value : EventHandler): ...
    def add_ContentFieldChanged (value : EventHandler): ...
    def remove_ContentFieldChanged (value : EventHandler): ...
    def add_ContentUpdatePreview (value : EventHandler): ...
    def remove_ContentUpdatePreview (value : EventHandler): ...
    def add_CurrentEnvironmentChanged (value : EventHandler): ...
    def remove_CurrentEnvironmentChanged (value : EventHandler): ...
    def Dispose (self): ...
    def Create (type : Guid, flags : ShowContentChooserFlags, doc : RhinoDoc) -> RenderContent: ...
    def Create (type : Type, flags : ShowContentChooserFlags, doc : RhinoDoc) -> RenderContent: ...
    def Create (type : Guid, parent : RenderContent, childSlotName : str, flags : ShowContentChooserFlags, doc : RhinoDoc) -> RenderContent: ...
    def Create (type : Type, parent : RenderContent, childSlotName : str, flags : ShowContentChooserFlags, doc : RhinoDoc) -> RenderContent: ...
    def RegisterContent (plugin : PlugIn) -> Set(Type): ...
    def RegisterContent (assembly : Assembly, pluginId : Guid) -> Set(Type): ...
    def LoadFromFile (filename : str) -> RenderContent: ...
    def AddPersistentRenderContent (renderContent : RenderContent) -> bool: ...
    def AddPersistentRenderContent (document : RhinoDoc, renderContent : RenderContent) -> bool: ...
    def FromId (document : RhinoDoc, id : Guid) -> RenderContent: ...
    def MakeCopy (self) -> RenderContent: ...
    def FromXml (xml : str) -> RenderContent: ...
    def FromXml (xml : str, doc : RhinoDoc) -> RenderContent: ...
    @property
    def Fields (self) -> FieldDictionary: ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def BindParameterToField (self, parameterName : str, childSlotName : str, field : Field, setEvent : ChangeContexts): ...
    def BindParameterToField (self, parameterName : str, field : Field, setEvent : ChangeContexts): ...
    @property
    def TypeName (self) -> str: ...
    @property
    def TypeDescription (self) -> str: ...
    @property
    def Name (self) -> str: ...
    @Name.setter
    def Name (self, value : str): ...
    @property
    def Notes (self) -> str: ...
    @Notes.setter
    def Notes (self, value : str): ...
    @property
    def Tags (self) -> str: ...
    @Tags.setter
    def Tags (self, value : str): ...
    @property
    def Category (self) -> str: ...
    @property
    def Id (self) -> Guid: ...
    @Id.setter
    def Id (self, value : Guid): ...
    @property
    def TypeId (self) -> Guid: ...
    def ForDisplay (self) -> RenderContent: ...
    def IsReference (self) -> bool: ...
    def UseCount (self) -> int: ...
    def SetRenderHash (self, hash : UInt32): ...
    def IsRenderHashCached (self) -> bool: ...
    @property
    def RenderHash (self) -> UInt32: ...
    def RenderHashExclude (self, flags : TextureRenderHashFlags, excludeParameterNames : str) -> UInt32: ...
    def RenderHashExclude (self, flags : CrcRenderHashFlags, excludeParameterNames : str) -> UInt32: ...
    @property
    def TopLevel (self) -> bool: ...
    @property
    def Hidden (self) -> bool: ...
    @Hidden.setter
    def Hidden (self, value : bool): ...
    @property
    def CanBeEdited (self) -> bool: ...
    @property
    def IsDefaultInstance (self) -> bool: ...
    @property
    def ProxyType (self) -> ProxyTypes: ...
    @property
    def Parent (self) -> RenderContent: ...
    @property
    def FirstChild (self) -> RenderContent: ...
    @property
    def NextSibling (self) -> RenderContent: ...
    @property
    def TopLevelParent (self) -> RenderContent: ...
    @property
    def Document (self) -> RhinoDoc: ...
    @property
    def DocumentRegistered (self) -> RhinoDoc: ...
    @property
    def DocumentAssoc (self) -> RhinoDoc: ...
    @DocumentAssoc.setter
    def DocumentAssoc (self, value : RhinoDoc): ...
    def OpenInEditor (self) -> bool: ...
    def OpenInModalEditor (self) -> bool: ...
    def Edit (self) -> RenderContent: ...
    @property
    def Xml (self) -> str: ...
    def BeginChange (self, changeContext : ChangeContexts): ...
    def EndChange (self): ...
    def AddUserInterfaceSection (self, classType : Type, caption : str, createExpanded : bool, createVisible : bool) -> UserInterfaceSection: ...
    def AddAutomaticUserInterfaceSection (self, caption : str, id : int) -> bool: ...
    def AddUserInterfaceSection (self, section : ICollapsibleSection) -> bool: ...
    def Factory (self) -> ContentFactory: ...
    def IsContentTypeAcceptableAsChild (self, type : Guid, childSlotName : str) -> bool: ...
    def IsFactoryProductAcceptableAsChild (self, factory : ContentFactory, childSlotName : str) -> bool: ...
    def GetParameter (self, parameterName : str) -> Object: ...
    def SetParameter (self, parameterName : str, value : Object, changeContext : ChangeContexts) -> bool: ...
    def SetParameter (self, parameterName : str, value : Object) -> bool: ...
    @property
    def IsLocked (self) -> bool: ...
    @IsLocked.setter
    def IsLocked (self, value : bool): ...
    def GetChildSlotParameter (self, parameterName : str, childSlotName : str) -> Object: ...
    def SetChildSlotParameter (self, parameterName : str, childSlotName : str, value : Object, sc : ExtraRequirementsSetContexts) -> bool: ...
    def ChildSlotOn (self, childSlotName : str) -> bool: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class CrcRenderHashFlags:
    Normal = 0
    ExcludeLinearWorkflow = 1
    ExcludeLocalMapping = 2
    Reserved1 = 4
    Reserved2 = 8
class RenderContentEventArgs:
    @property
    def Content (self) -> RenderContent: ...
    @property
    def Document (self) -> RhinoDoc: ...
    @property
    def Reason (self) -> RenderContentChangeReason: ...
    @property
    def EnvironmentUsage (self) -> Usage: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderContentChangedEventArgs:
    @property
    def ChangeContext (self) -> ChangeContexts: ...
    @property
    def OldContent (self) -> RenderContent: ...
    @property
    def Content (self) -> RenderContent: ...
    @property
    def Document (self) -> RhinoDoc: ...
    @property
    def Reason (self) -> RenderContentChangeReason: ...
    @property
    def EnvironmentUsage (self) -> Usage: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderContentChangeReason:
    None = 0
    Attach = 1
    Detach = 2
    ChangeAttach = 3
    ChangeDetach = 4
    AttachUndo = 5
    DetachUndo = 6
    Open = 7
    Delete = 8
class RenderContentFieldChangedEventArgs:
    @property
    def FieldName (self) -> str: ...
    @property
    def ChangeContext (self) -> ChangeContexts: ...
    @property
    def OldContent (self) -> RenderContent: ...
    @property
    def Content (self) -> RenderContent: ...
    @property
    def Document (self) -> RhinoDoc: ...
    @property
    def Reason (self) -> RenderContentChangeReason: ...
    @property
    def EnvironmentUsage (self) -> Usage: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderContentType:
    def __init__(self, typeId : Guid): ...
    def GetAllAvailableTypes () -> Set(RenderContentType): ...
    def NewRenderContent (self) -> RenderContent: ...
    def NewContentFromTypeId (typeId : Guid) -> RenderContent: ...
    def NewContentFromTypeId (typeId : Guid, doc : RhinoDoc) -> RenderContent: ...
    @property
    def Id (self) -> Guid: ...
    @property
    def InternalName (self) -> str: ...
    @property
    def RenderEngineId (self) -> Guid: ...
    @property
    def PlugInId (self) -> Guid: ...
    def Dispose (self): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderMaterialTable:
    def Add (self, c : RenderMaterial) -> bool: ...
    def Remove (self, c : RenderMaterial) -> bool: ...
    def GetEnumerator (self) -> IEnumerator: ...
    @property
    def Count (self) -> int: ...
    @property
    def Item (self, index : int) -> RenderMaterial: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderEnvironmentTable:
    def Add (self, c : RenderEnvironment) -> bool: ...
    def Remove (self, c : RenderEnvironment) -> bool: ...
    def GetEnumerator (self) -> IEnumerator: ...
    @property
    def Count (self) -> int: ...
    @property
    def Item (self, index : int) -> RenderEnvironment: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderTextureTable:
    def Add (self, c : RenderTexture) -> bool: ...
    def Remove (self, c : RenderTexture) -> bool: ...
    def GetEnumerator (self) -> IEnumerator: ...
    @property
    def Count (self) -> int: ...
    @property
    def Item (self, index : int) -> RenderTexture: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderPrimitiveType:
    None = 0
    Mesh = 1
    Sphere = 2
    Plane = 3
    Box = 4
    Cone = 5
class RenderPrimitiveList:
    def ToMeshArray (self) -> Set(Mesh): ...
    def ToMaterialArray (self) -> Set(RenderMaterial): ...
    def Add (self, mesh : Mesh, material : RenderMaterial): ...
    def Add (self, mesh : Mesh, material : RenderMaterial, t : Transform): ...
    def Add (self, sphere : Sphere, material : RenderMaterial): ...
    def Add (self, cone : Cone, truncation : Plane, material : RenderMaterial): ...
    def Add (self, plane : PlaneSurface, material : RenderMaterial): ...
    def Add (self, box : Box, material : RenderMaterial): ...
    @property
    def UseObjectsMappingChannels (self) -> bool: ...
    @UseObjectsMappingChannels.setter
    def UseObjectsMappingChannels (self, value : bool): ...
    @property
    def Count (self) -> int: ...
    def PrimitiveType (self, index : int) -> RenderPrimitiveType: ...
    def Mesh (self, index : int) -> Mesh: ...
    def MeshInstance (self, index : int) -> Tuple(Mesh, Transform): ...
    def TryGetSphere (self, index : int) -> Tuple(bool, Sphere): ...
    def TryGetBox (self, index : int) -> Tuple(bool, Box): ...
    def TryGetPlane (self, index : int) -> Tuple(bool, PlaneSurface): ...
    def TryGetCone (self, index : int) -> Tuple(bool, Cone, Plane): ...
    def Material (self, index : int) -> RenderMaterial: ...
    @property
    def RhinoObject (self) -> RhinoObject: ...
    def ConvertMeshesToTriangles (self): ...
    def Clear (self): ...
    def GetInstanceTransform (self, index : int) -> Transform: ...
    def SetInstanceTransform (self, index : int, xform : Transform): ...
    def AutoDeleteMeshesOn (self) -> bool: ...
    def AutoDeleteMaterialsOn (self) -> bool: ...
    def Dispose (self): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class CustomRenderMeshProvider:
    @property
    def EdgeSofteningId () -> Guid: ...
    @property
    def DisplacementId () -> Guid: ...
    @property
    def CurvePipingId () -> Guid: ...
    @property
    def ShutLiningId () -> Guid: ...
    @property
    def ThickeningId () -> Guid: ...
    @property
    def Name (self) -> str: ...
    def WillBuildCustomMeshes (self, vp : ViewportInfo, obj : RhinoObject, requestingPlugIn : Guid, preview : bool) -> bool: ...
    def BuildCustomMeshes (self, vp : ViewportInfo, objMeshes : RenderPrimitiveList, requestingPlugIn : Guid, meshType : bool) -> bool: ...
    def RegisterProviders (assembly : Assembly, pluginId : Guid): ...
    def AllObjectsChanged (): ...
    def AllObjectsChanged (doc : RhinoDoc): ...
    def ObjectChanged (doc : RhinoDoc, obj : RhinoObject): ...
    def DocumentBasedMeshesChanged (doc : RhinoDoc): ...
    def BoundingBox (self, vp : ViewportInfo, obj : RhinoObject, requestingPlugIn : Guid, preview : bool) -> BoundingBox: ...
    def BoundingBox (self, vp : ViewportInfo, obj : RhinoObject, doc : RhinoDoc, requestingPlugIn : Guid, attrs : DisplayPipelineAttributes) -> BoundingBox: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class CustomRenderMeshProvider2:
    def WillBuildCustomMeshes (self, vp : ViewportInfo, obj : RhinoObject, requestingPlugIn : Guid, preview : bool) -> bool: ...
    def BuildCustomMeshes (self, vp : ViewportInfo, objMeshes : RenderPrimitiveList, requestingPlugIn : Guid, preview : bool) -> bool: ...
    def BoundingBox (self, vp : ViewportInfo, obj : RhinoObject, requestingPlugIn : Guid, preview : bool) -> BoundingBox: ...
    def WillBuildCustomMeshes (self, vp : ViewportInfo, obj : RhinoObject, doc : RhinoDoc, requestingPlugIn : Guid, attrs : DisplayPipelineAttributes) -> bool: ...
    def BuildCustomMeshes (self, vp : ViewportInfo, doc : RhinoDoc, objMeshes : RenderPrimitiveList, requestingPlugIn : Guid, attrs : DisplayPipelineAttributes) -> bool: ...
    def BoundingBox (self, vp : ViewportInfo, obj : RhinoObject, doc : RhinoDoc, requestingPlugIn : Guid, attrs : DisplayPipelineAttributes) -> BoundingBox: ...
    @property
    def Name (self) -> str: ...
    def BoundingBox (self, vp : ViewportInfo, obj : RhinoObject, doc : RhinoDoc, requestingPlugIn : Guid, attrs : DisplayPipelineAttributes) -> BoundingBox: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class DecalMapping:
    Planar = 0
    Cylindrical = 1
    Spherical = 2
    UV = 3
class DecalProjection:
    Forward = 0
    Backward = 1
    Both = 2
class Decal:
    def Dispose (self): ...
    def Dispose (self, isDisposing : bool): ...
    def Create (createParams : DecalCreateParams) -> Decal: ...
    @property
    def CRC (self) -> int: ...
    @property
    def TextureInstanceId (self) -> Guid: ...
    @property
    def DecalMapping (self) -> DecalMapping: ...
    @property
    def DecalProjection (self) -> DecalProjection: ...
    @property
    def MapToInside (self) -> bool: ...
    @property
    def Transparency (self) -> float: ...
    @property
    def Origin (self) -> Point3d: ...
    @property
    def VectorUp (self) -> Vector3d: ...
    @property
    def VectorAcross (self) -> Vector3d: ...
    @property
    def Height (self) -> float: ...
    @property
    def Radius (self) -> float: ...
    @property
    def StartLatitude (self) -> float: ...
    @property
    def EndLatitude (self) -> float: ...
    @property
    def StartLongitude (self) -> float: ...
    @property
    def EndLongitude (self) -> float: ...
    def UVBounds (self, minUOut : float, minVOut : float, maxUOut : float, maxVOut : float) -> Tuple(float, float, float, float): ...
    def CustomData (self) -> List: ...
    def TryGetColor (self, point : Point3d, normal : Vector3d, colInOut : Color4f, uvOut : Point2d) -> Tuple(bool, Color4f, Point2d): ...
    def ConstPointer (self) -> IntPtr: ...
    def NonConstPointer (self) -> IntPtr: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class Decals:
    def Add (self, decal : Decal) -> UInt32: ...
    def Clear (self): ...
    def Remove (self, decal : Decal) -> bool: ...
    def GetEnumerator (self) -> IEnumerator: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class DecalCreateParams:
    def __init__(self): ...
    @property
    def TextureInstanceId (self) -> Guid: ...
    @TextureInstanceId.setter
    def TextureInstanceId (self, value : Guid): ...
    @property
    def DecalMapping (self) -> DecalMapping: ...
    @DecalMapping.setter
    def DecalMapping (self, value : DecalMapping): ...
    @property
    def DecalProjection (self) -> DecalProjection: ...
    @DecalProjection.setter
    def DecalProjection (self, value : DecalProjection): ...
    @property
    def MapToInside (self) -> bool: ...
    @MapToInside.setter
    def MapToInside (self, value : bool): ...
    @property
    def Transparency (self) -> float: ...
    @Transparency.setter
    def Transparency (self, value : float): ...
    @property
    def Origin (self) -> Point3d: ...
    @Origin.setter
    def Origin (self, value : Point3d): ...
    @property
    def VectorUp (self) -> Vector3d: ...
    @VectorUp.setter
    def VectorUp (self, value : Vector3d): ...
    @property
    def VectorAcross (self) -> Vector3d: ...
    @VectorAcross.setter
    def VectorAcross (self, value : Vector3d): ...
    @property
    def Height (self) -> float: ...
    @Height.setter
    def Height (self, value : float): ...
    @property
    def Radius (self) -> float: ...
    @Radius.setter
    def Radius (self, value : float): ...
    @property
    def StartLatitude (self) -> float: ...
    @StartLatitude.setter
    def StartLatitude (self, value : float): ...
    @property
    def EndLatitude (self) -> float: ...
    @EndLatitude.setter
    def EndLatitude (self, value : float): ...
    @property
    def StartLongitude (self) -> float: ...
    @StartLongitude.setter
    def StartLongitude (self, value : float): ...
    @property
    def EndLongitude (self) -> float: ...
    @EndLongitude.setter
    def EndLongitude (self, value : float): ...
    @property
    def MinU (self) -> float: ...
    @MinU.setter
    def MinU (self, value : float): ...
    @property
    def MinV (self) -> float: ...
    @MinV.setter
    def MinV (self, value : float): ...
    @property
    def MaxU (self) -> float: ...
    @MaxU.setter
    def MaxU (self, value : float): ...
    @property
    def MaxV (self) -> float: ...
    @MaxV.setter
    def MaxV (self, value : float): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class FreeFloatingBase:
    def CopyFrom (self, src : FreeFloatingBase): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class DocumentOrFreeFloatingBase:
    def BeginChange (self, cc : ChangeContexts): ...
    def EndChange (self) -> bool: ...
    def CopyFrom (self, src : FreeFloatingBase): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class ICurrentEnvironment_Get:
    @property
    def ForBackground (self) -> RenderEnvironment: ...
    @property
    def ForBackground_CheckMode (self) -> RenderEnvironment: ...
    @property
    def ForLighting (self) -> RenderEnvironment: ...
    @property
    def ForReflectionAndRefraction (self) -> RenderEnvironment: ...
class ICurrentEnvironment:
    @property
    def ForBackground (self) -> RenderEnvironment: ...
    @ForBackground.setter
    def ForBackground (self, value : RenderEnvironment): ...
    @property
    def ForBackground_CheckMode (self) -> RenderEnvironment: ...
    @ForBackground_CheckMode.setter
    def ForBackground_CheckMode (self, value : RenderEnvironment): ...
    @property
    def ForLighting (self) -> RenderEnvironment: ...
    @ForLighting.setter
    def ForLighting (self, value : RenderEnvironment): ...
    @property
    def ForReflectionAndRefraction (self) -> RenderEnvironment: ...
    @ForReflectionAndRefraction.setter
    def ForReflectionAndRefraction (self, value : RenderEnvironment): ...
    @ForAnyUsage.setter
    def ForAnyUsage (self, value : RenderEnvironment): ...
class RenderEnvironment:
    @property
    def CurrentEnvironment () -> RenderEnvironment: ...
    @CurrentEnvironment.setter
    def CurrentEnvironment (value : RenderEnvironment): ...
    def NewBasicEnvironment (environment : SimulatedEnvironment) -> RenderEnvironment: ...
    def NewBasicEnvironment (environment : SimulatedEnvironment, doc : RhinoDoc) -> RenderEnvironment: ...
    def SimulateEnvironment (self, simulation : SimulatedEnvironment, isForDataOnly : bool) -> Tuple(SimulatedEnvironment): ...
    def SimulateEnvironment (self, isForDataOnly : bool) -> SimulatedEnvironment: ...
    @property
    def TextureChildSlotName (self) -> str: ...
    def SetChildSlotOn (self, childSlotName : str, bOn : bool, cc : ChangeContexts): ...
    def ChildSlotAmount (self, childSlotName : str) -> float: ...
    def SetChildSlotAmount (self, childSlotName : str, amount : float, cc : ChangeContexts): ...
    def NewPreviewSceneServer (self, ssd : SceneServerData) -> PreviewSceneServer: ...
    def MatchData (self, oldContent : RenderContent) -> MatchDataResult: ...
    def IsCompatible (self, renderEngineId : Guid) -> bool: ...
    def ChildSlotNameFromParamName (self, paramName : str) -> str: ...
    def ParamNameFromChildSlotName (self, childSlotName : str) -> str: ...
    def FindChild (self, childSlotName : str) -> RenderContent: ...
    def SetChild (self, renderContent : RenderContent, childSlotName : str) -> bool: ...
    def SetChild (self, renderContent : RenderContent, childSlotName : str, changeContexts : ChangeContexts) -> bool: ...
    def AddChild (self, renderContent : RenderContent) -> bool: ...
    def AddChild (self, renderContent : RenderContent, childSlotName : str) -> bool: ...
    def DeleteChild (self, childSlotName : str, changeContexts : ChangeContexts) -> bool: ...
    def DeleteAllChildren (self, changeContexts : ChangeContexts): ...
    def ChangeChild (self, oldContent : RenderContent, newContent : RenderContent) -> bool: ...
    @property
    def ChildSlotName (self) -> str: ...
    @ChildSlotName.setter
    def ChildSlotName (self, value : str): ...
    def GetEmbeddedFilesList (self) -> Set(str): ...
    def Initialize (self) -> bool: ...
    def Uninitialize (self): ...
    def Replace (self, newcontent : RenderContent) -> bool: ...
    def IsFactoryProductAcceptableAsChild (self, kindId : Guid, factoryKind : str, childSlotName : str) -> bool: ...
    @property
    def FilesToEmbed (self) -> Iterable(str): ...
    def VirtualIcon (self, size : Size) -> Tuple(bool, Bitmap): ...
    def Icon (self, size : Size) -> Tuple(bool, Bitmap): ...
    def DynamicIcon (self, size : Size, usage : DynamicIconUsage) -> Tuple(bool, Bitmap): ...
    def Dispose (self): ...
    def MakeCopy (self) -> RenderContent: ...
    @property
    def Fields (self) -> FieldDictionary: ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def BindParameterToField (self, parameterName : str, childSlotName : str, field : Field, setEvent : ChangeContexts): ...
    def BindParameterToField (self, parameterName : str, field : Field, setEvent : ChangeContexts): ...
    @property
    def TypeName (self) -> str: ...
    @property
    def TypeDescription (self) -> str: ...
    @property
    def Name (self) -> str: ...
    @Name.setter
    def Name (self, value : str): ...
    @property
    def Notes (self) -> str: ...
    @Notes.setter
    def Notes (self, value : str): ...
    @property
    def Tags (self) -> str: ...
    @Tags.setter
    def Tags (self, value : str): ...
    @property
    def Category (self) -> str: ...
    @property
    def Id (self) -> Guid: ...
    @Id.setter
    def Id (self, value : Guid): ...
    @property
    def TypeId (self) -> Guid: ...
    def ForDisplay (self) -> RenderContent: ...
    def IsReference (self) -> bool: ...
    def UseCount (self) -> int: ...
    def SetRenderHash (self, hash : UInt32): ...
    def IsRenderHashCached (self) -> bool: ...
    @property
    def RenderHash (self) -> UInt32: ...
    def RenderHashExclude (self, flags : TextureRenderHashFlags, excludeParameterNames : str) -> UInt32: ...
    def RenderHashExclude (self, flags : CrcRenderHashFlags, excludeParameterNames : str) -> UInt32: ...
    @property
    def TopLevel (self) -> bool: ...
    @property
    def Hidden (self) -> bool: ...
    @Hidden.setter
    def Hidden (self, value : bool): ...
    @property
    def CanBeEdited (self) -> bool: ...
    @property
    def IsDefaultInstance (self) -> bool: ...
    @property
    def ProxyType (self) -> ProxyTypes: ...
    @property
    def Parent (self) -> RenderContent: ...
    @property
    def FirstChild (self) -> RenderContent: ...
    @property
    def NextSibling (self) -> RenderContent: ...
    @property
    def TopLevelParent (self) -> RenderContent: ...
    @property
    def Document (self) -> RhinoDoc: ...
    @property
    def DocumentRegistered (self) -> RhinoDoc: ...
    @property
    def DocumentAssoc (self) -> RhinoDoc: ...
    @DocumentAssoc.setter
    def DocumentAssoc (self, value : RhinoDoc): ...
    def OpenInEditor (self) -> bool: ...
    def OpenInModalEditor (self) -> bool: ...
    def Edit (self) -> RenderContent: ...
    @property
    def Xml (self) -> str: ...
    def BeginChange (self, changeContext : ChangeContexts): ...
    def EndChange (self): ...
    def AddUserInterfaceSection (self, classType : Type, caption : str, createExpanded : bool, createVisible : bool) -> UserInterfaceSection: ...
    def AddAutomaticUserInterfaceSection (self, caption : str, id : int) -> bool: ...
    def AddUserInterfaceSection (self, section : ICollapsibleSection) -> bool: ...
    def Factory (self) -> ContentFactory: ...
    def IsContentTypeAcceptableAsChild (self, type : Guid, childSlotName : str) -> bool: ...
    def IsFactoryProductAcceptableAsChild (self, factory : ContentFactory, childSlotName : str) -> bool: ...
    def GetParameter (self, parameterName : str) -> Object: ...
    def SetParameter (self, parameterName : str, value : Object, changeContext : ChangeContexts) -> bool: ...
    def SetParameter (self, parameterName : str, value : Object) -> bool: ...
    @property
    def IsLocked (self) -> bool: ...
    @IsLocked.setter
    def IsLocked (self, value : bool): ...
    def GetChildSlotParameter (self, parameterName : str, childSlotName : str) -> Object: ...
    def SetChildSlotParameter (self, parameterName : str, childSlotName : str, value : Object, sc : ExtraRequirementsSetContexts) -> bool: ...
    def ChildSlotOn (self, childSlotName : str) -> bool: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class Utilities:
    def SetDefaultRenderPlugIn (pluginId : Guid) -> bool: ...
    @property
    def DefaultRenderPlugInId () -> Guid: ...
    @property
    def ShowIncompatibleMaterials () -> bool: ...
    @ShowIncompatibleMaterials.setter
    def ShowIncompatibleMaterials (value : bool): ...
    @property
    def ShowIncompatibleEnvironments () -> bool: ...
    @ShowIncompatibleEnvironments.setter
    def ShowIncompatibleEnvironments (value : bool): ...
    @property
    def ShowIncompatibleTextures () -> bool: ...
    @ShowIncompatibleTextures.setter
    def ShowIncompatibleTextures (value : bool): ...
    def SafeFrameEnabled (doc : RhinoDoc) -> bool: ...
    def ChangeContentType (oldContent : RenderContent, newType : Guid, harvestParameters : bool) -> RenderContent: ...
    def PromptForSaveImageFileParameters (filename : str, width : int, height : int, colorDepth : int) -> Tuple(str, int, int, int): ...
    def LoadPersistentRenderContentFromFile (docSerialNumber : UInt32, filename : str) -> RenderContent: ...
    def FindFile (doc : RhinoDoc, fullPathToFile : str) -> str: ...
    def FindFile (doc : RhinoDoc, fullPathToFile : str, unpackFromBitmapTableIfNecessary : bool) -> str: ...
    def IsCachedTextureFileInUse (textureFileName : str) -> bool: ...
    def MoveWindow (hwnd : IntPtr, rect : Rectangle, bRepaint : bool, bRepaintNC : bool): ...
    def ShowIORMenu (hwnd : IntPtr, pt : Point, outIOR : float, outString : str) -> Tuple(bool, float, str): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class LightManagerSupportClient:
    def __init__(self, doc_uuid : UInt32): ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def Dispose (self): ...
    def GetLights (self) -> LightArray: ...
    def GetLightFromId (self, uuid : Guid) -> Light: ...
    def OnEditLight (self, lights : LightArray): ...
    def GroupLights (self, lights : LightArray): ...
    def UnGroup (self, lights : LightArray): ...
    def ModifyLight (self, light : Light): ...
    def DeleteLight (self, light : Light): ...
    def LightDescription (self, light : Light) -> str: ...
    def ObjectFromLight (self, light : Light) -> RhinoObject: ...
    def SetLightSolo (self, light : Light, bSolo : bool) -> bool: ...
    def GetLightSolo (self, light : Light) -> bool: ...
    def LightsInSoloStorage (self) -> int: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class LightArray:
    def __init__(self): ...
    def __init__(self, pLightArray : IntPtr): ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def Dispose (self): ...
    def ElementAt (self, index : int) -> Light: ...
    def Append (self, light : Light): ...
    def Count (self) -> int: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class LightMangerSupportCustomEvent:
    light_added = 0
    light_deleted = 1
    light_undeleted = 2
    light_modified = 3
    light_sorted = 4
class LightManagerSupport:
    def RegisterLightManager (plugin : PlugIn): ...
    def RegisterProviders (assembly : Assembly, pluginId : Guid): ...
    def PluginId (self) -> Guid: ...
    def RenderEngineId (self) -> Guid: ...
    def ModifyLight (self, doc : RhinoDoc, light : Light): ...
    def DeleteLight (self, doc : RhinoDoc, light : Light, bUndelete : bool) -> bool: ...
    def GetLights (self, doc : RhinoDoc, light_array : LightArray) -> Tuple(LightArray): ...
    def LightFromId (self, doc : RhinoDoc, uuid : Guid, light : Light) -> Tuple(bool, Light): ...
    def ObjectSerialNumberFromLight (self, doc : RhinoDoc, light : Light) -> Tuple(int, Light): ...
    def OnEditLight (self, doc : RhinoDoc, light_array : LightArray) -> Tuple(bool, LightArray): ...
    def GroupLights (self, doc : RhinoDoc, light_array : LightArray) -> Tuple(LightArray): ...
    def UnGroup (self, doc : RhinoDoc, light_array : LightArray) -> Tuple(LightArray): ...
    def LightDescription (self, doc : RhinoDoc, light : Light) -> Tuple(str, Light): ...
    def SetLightSolo (self, doc : RhinoDoc, uuid_light : Guid, bSolo : bool) -> bool: ...
    def GetLightSolo (self, doc : RhinoDoc, uuid_light : Guid) -> bool: ...
    def LightsInSoloStorage (self, doc : RhinoDoc) -> int: ...
    def OnCustomLightEvent (self, doc : RhinoDoc, le : LightMangerSupportCustomEvent, light : Light) -> Tuple(Light): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class LinearWorkflow:
    def __init__(self): ...
    def __init__(self, src : LinearWorkflow): ...
    def CopyFrom (self, src : FreeFloatingBase): ...
    @property
    def PreProcessColors (self) -> bool: ...
    @PreProcessColors.setter
    def PreProcessColors (self, value : bool): ...
    @property
    def PreProcessTextures (self) -> bool: ...
    @PreProcessTextures.setter
    def PreProcessTextures (self, value : bool): ...
    @property
    def PostProcessFrameBuffer (self) -> bool: ...
    @PostProcessFrameBuffer.setter
    def PostProcessFrameBuffer (self, value : bool): ...
    @property
    def PreProcessGamma (self) -> Single: ...
    @PreProcessGamma.setter
    def PreProcessGamma (self, value : Single): ...
    @property
    def PostProcessGamma (self) -> Single: ...
    @PostProcessGamma.setter
    def PostProcessGamma (self, value : Single): ...
    @property
    def PostProcessGammaReciprocal (self) -> Single: ...
    @property
    def Hash (self) -> UInt32: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def BeginChange (self, cc : ChangeContexts): ...
    def EndChange (self) -> bool: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class TexturedColor:
    def __init__(self, name : str, value : Color4f, on : bool, amount : Single): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class TexturedFloat:
    def __init__(self, name : str, value : Single, on : bool, amount : Single): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderMaterial:
    def CreateBasicMaterial (material : Material) -> RenderMaterial: ...
    def CreateBasicMaterial (material : Material, doc : RhinoDoc) -> RenderMaterial: ...
    @property
    def PlasterMaterialGuid () -> Guid: ...
    @property
    def PlasticMaterialGuid () -> Guid: ...
    @property
    def PaintMaterialGuid () -> Guid: ...
    @property
    def GlassMaterialGuid () -> Guid: ...
    @property
    def GemMaterialGuid () -> Guid: ...
    @property
    def MetalMaterialGuid () -> Guid: ...
    @property
    def PictureMaterialGuid () -> Guid: ...
    def TextureChildSlotName (self, slot : StandardChildSlots) -> str: ...
    def GetTextureFromUsage (self, which : StandardChildSlots) -> RenderTexture: ...
    def GetTextureOnFromUsage (self, which : StandardChildSlots) -> bool: ...
    def GetTextureAmountFromUsage (self, which : StandardChildSlots) -> float: ...
    def SimulateMaterial (self, simulation : Material, isForDataOnly : bool) -> Tuple(Material): ...
    def SimulateMaterial (self, isForDataOnly : bool) -> Material: ...
    @property
    def DefaultPreviewGeometryType (self) -> PreviewGeometryType: ...
    @DefaultPreviewGeometryType.setter
    def DefaultPreviewGeometryType (self, value : PreviewGeometryType): ...
    @property
    def DefaultPreviewBackgroundType (self) -> PreviewBackgroundType: ...
    @DefaultPreviewBackgroundType.setter
    def DefaultPreviewBackgroundType (self, value : PreviewBackgroundType): ...
    @property
    def DefaultPreviewSize (self) -> float: ...
    @DefaultPreviewSize.setter
    def DefaultPreviewSize (self, value : float): ...
    @property
    def SmellsLikePlaster (self) -> bool: ...
    @property
    def SmellsLikePaint (self) -> bool: ...
    @property
    def SmellsLikeMetal (self) -> bool: ...
    @property
    def SmellsLikePlastic (self) -> bool: ...
    @property
    def SmellsLikeGem (self) -> bool: ...
    @property
    def SmellsLikeGlass (self) -> bool: ...
    @property
    def SmellsLikeTexturedPlaster (self) -> bool: ...
    @property
    def SmellsLikeTexturedPaint (self) -> bool: ...
    @property
    def SmellsLikeTexturedMetal (self) -> bool: ...
    @property
    def SmellsLikeTexturedPlastic (self) -> bool: ...
    @property
    def SmellsLikeTexturedGem (self) -> bool: ...
    @property
    def SmellsLikeTexturedGlass (self) -> bool: ...
    def HandleTexturedValue (self, slotname : str, tc : TexturedValue) -> bool: ...
    def SetChildSlotOn (self, childSlotName : str, bOn : bool, cc : ChangeContexts): ...
    def ChildSlotAmount (self, childSlotName : str) -> float: ...
    def SetChildSlotAmount (self, childSlotName : str, amount : float, cc : ChangeContexts): ...
    def NewPreviewSceneServer (self, ssd : SceneServerData) -> PreviewSceneServer: ...
    def MatchData (self, oldContent : RenderContent) -> MatchDataResult: ...
    def IsCompatible (self, renderEngineId : Guid) -> bool: ...
    def ChildSlotNameFromParamName (self, paramName : str) -> str: ...
    def ParamNameFromChildSlotName (self, childSlotName : str) -> str: ...
    def FindChild (self, childSlotName : str) -> RenderContent: ...
    def SetChild (self, renderContent : RenderContent, childSlotName : str) -> bool: ...
    def SetChild (self, renderContent : RenderContent, childSlotName : str, changeContexts : ChangeContexts) -> bool: ...
    def AddChild (self, renderContent : RenderContent) -> bool: ...
    def AddChild (self, renderContent : RenderContent, childSlotName : str) -> bool: ...
    def DeleteChild (self, childSlotName : str, changeContexts : ChangeContexts) -> bool: ...
    def DeleteAllChildren (self, changeContexts : ChangeContexts): ...
    def ChangeChild (self, oldContent : RenderContent, newContent : RenderContent) -> bool: ...
    @property
    def ChildSlotName (self) -> str: ...
    @ChildSlotName.setter
    def ChildSlotName (self, value : str): ...
    def GetEmbeddedFilesList (self) -> Set(str): ...
    def Initialize (self) -> bool: ...
    def Uninitialize (self): ...
    def Replace (self, newcontent : RenderContent) -> bool: ...
    def IsFactoryProductAcceptableAsChild (self, kindId : Guid, factoryKind : str, childSlotName : str) -> bool: ...
    @property
    def FilesToEmbed (self) -> Iterable(str): ...
    def VirtualIcon (self, size : Size) -> Tuple(bool, Bitmap): ...
    def Icon (self, size : Size) -> Tuple(bool, Bitmap): ...
    def DynamicIcon (self, size : Size, usage : DynamicIconUsage) -> Tuple(bool, Bitmap): ...
    def Dispose (self): ...
    def MakeCopy (self) -> RenderContent: ...
    @property
    def Fields (self) -> FieldDictionary: ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def BindParameterToField (self, parameterName : str, childSlotName : str, field : Field, setEvent : ChangeContexts): ...
    def BindParameterToField (self, parameterName : str, field : Field, setEvent : ChangeContexts): ...
    @property
    def TypeName (self) -> str: ...
    @property
    def TypeDescription (self) -> str: ...
    @property
    def Name (self) -> str: ...
    @Name.setter
    def Name (self, value : str): ...
    @property
    def Notes (self) -> str: ...
    @Notes.setter
    def Notes (self, value : str): ...
    @property
    def Tags (self) -> str: ...
    @Tags.setter
    def Tags (self, value : str): ...
    @property
    def Category (self) -> str: ...
    @property
    def Id (self) -> Guid: ...
    @Id.setter
    def Id (self, value : Guid): ...
    @property
    def TypeId (self) -> Guid: ...
    def ForDisplay (self) -> RenderContent: ...
    def IsReference (self) -> bool: ...
    def UseCount (self) -> int: ...
    def SetRenderHash (self, hash : UInt32): ...
    def IsRenderHashCached (self) -> bool: ...
    @property
    def RenderHash (self) -> UInt32: ...
    def RenderHashExclude (self, flags : TextureRenderHashFlags, excludeParameterNames : str) -> UInt32: ...
    def RenderHashExclude (self, flags : CrcRenderHashFlags, excludeParameterNames : str) -> UInt32: ...
    @property
    def TopLevel (self) -> bool: ...
    @property
    def Hidden (self) -> bool: ...
    @Hidden.setter
    def Hidden (self, value : bool): ...
    @property
    def CanBeEdited (self) -> bool: ...
    @property
    def IsDefaultInstance (self) -> bool: ...
    @property
    def ProxyType (self) -> ProxyTypes: ...
    @property
    def Parent (self) -> RenderContent: ...
    @property
    def FirstChild (self) -> RenderContent: ...
    @property
    def NextSibling (self) -> RenderContent: ...
    @property
    def TopLevelParent (self) -> RenderContent: ...
    @property
    def Document (self) -> RhinoDoc: ...
    @property
    def DocumentRegistered (self) -> RhinoDoc: ...
    @property
    def DocumentAssoc (self) -> RhinoDoc: ...
    @DocumentAssoc.setter
    def DocumentAssoc (self, value : RhinoDoc): ...
    def OpenInEditor (self) -> bool: ...
    def OpenInModalEditor (self) -> bool: ...
    def Edit (self) -> RenderContent: ...
    @property
    def Xml (self) -> str: ...
    def BeginChange (self, changeContext : ChangeContexts): ...
    def EndChange (self): ...
    def AddUserInterfaceSection (self, classType : Type, caption : str, createExpanded : bool, createVisible : bool) -> UserInterfaceSection: ...
    def AddAutomaticUserInterfaceSection (self, caption : str, id : int) -> bool: ...
    def AddUserInterfaceSection (self, section : ICollapsibleSection) -> bool: ...
    def Factory (self) -> ContentFactory: ...
    def IsContentTypeAcceptableAsChild (self, type : Guid, childSlotName : str) -> bool: ...
    def IsFactoryProductAcceptableAsChild (self, factory : ContentFactory, childSlotName : str) -> bool: ...
    def GetParameter (self, parameterName : str) -> Object: ...
    def SetParameter (self, parameterName : str, value : Object, changeContext : ChangeContexts) -> bool: ...
    def SetParameter (self, parameterName : str, value : Object) -> bool: ...
    @property
    def IsLocked (self) -> bool: ...
    @IsLocked.setter
    def IsLocked (self, value : bool): ...
    def GetChildSlotParameter (self, parameterName : str, childSlotName : str) -> Object: ...
    def SetChildSlotParameter (self, parameterName : str, childSlotName : str, value : Object, sc : ExtraRequirementsSetContexts) -> bool: ...
    def ChildSlotOn (self, childSlotName : str) -> bool: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class PhysicallyBasedMaterial:
    def __init__(self): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class IRhRdkPreviewSceneServer_eRotationType:
    Camera = 0
    Object = 1
class PreviewAppearance:
    def __init__(self, pRenderContent : IntPtr): ...
    @property
    def CppPointer (self) -> IntPtr: ...
    @property
    def MetaData (self) -> MetaData: ...
    def Dispose (self): ...
    def RotationX (self) -> float: ...
    def SetRotationX (self, d : float): ...
    def RotationY (self) -> float: ...
    def SetRotationY (self, d : float): ...
    def Size (self) -> float: ...
    def SetSize (self, d : float): ...
    def RotationType (self) -> IRhRdkPreviewSceneServer_eRotationType: ...
    def SetRotationType (self, type : IRhRdkPreviewSceneServer_eRotationType): ...
    def Geometry (self) -> PreviewGeometry: ...
    def FromMetaData (self, md : MetaData): ...
    def ToMetaData (self): ...
    def ToMetaData (self, mdp : MetaDataProxy): ...
    def Background (self) -> PreviewBackground: ...
    def Lighting (self) -> PreviewLighting: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class MetaDataProxy:
    def __init__(self): ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def Dispose (self): ...
    def SetContentInstanceId (self, uuid : Guid): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class PreviewBackground:
    def __init__(self, pPreviewBackground : IntPtr): ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def EnvironmentInstanceId (self) -> Guid: ...
    def SetEnvironmentInstanceId (self, guid : Guid): ...
    def SetUpPreview (self, sceneServerPointer : IntPtr, guid : Guid): ...
    def ElementKind (self) -> str: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class PreviewGeometry:
    def __init__(self, pPreviewGeometry : IntPtr): ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def SetUpPreview (self, sceneServerPointer : IntPtr, pRenderContent : IntPtr, bCopy : bool): ...
    def ElementKind (self) -> str: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class PreviewLighting:
    def __init__(self, pPreviewLighting : IntPtr): ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def SetUpPreview (self, sceneServerPointer : IntPtr): ...
    def ElementKind (self) -> str: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class PreviewSceneQuality:
    None = 0
    RealtimeQuick = 1
    Low = 1
    RefineFirstPass = 1
    RefineSecondPass = 2
    Medium = 2
    IntermediateProgressive = 3
    RefineThirdPass = 4
    Full = 4
class CreatePreviewReason:
    ContentChanged = 0
    ViewChanged = 1
    RefreshDisplay = 2
    UpdateBitmap = 3
    Other = 99
class CreatePreviewEventArgs:
    @property
    def PreviewNotifier (self) -> PreviewNotification: ...
    def SkipInitialisation (self): ...
    @property
    def Reason (self) -> CreatePreviewReason: ...
    @property
    def PreviewContent (self) -> RenderContent: ...
    @property
    def PreviewImageSize (self) -> Size: ...
    @property
    def Quality (self) -> PreviewSceneQuality: ...
    @property
    def PreviewImage (self) -> Bitmap: ...
    @PreviewImage.setter
    def PreviewImage (self, value : Bitmap): ...
    @property
    def Cancel (self) -> bool: ...
    @property
    def Id (self) -> int: ...
    @property
    def ContentKind (self) -> RenderContentKind: ...
    @property
    def ContentTypeId (self) -> Guid: ...
    @property
    def Environment (self) -> RenderEnvironment: ...
    @property
    def Objects (self) -> List: ...
    @property
    def Lights (self) -> List: ...
    @property
    def Viewport (self) -> ViewportInfo: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class CreateTexture2dPreviewEventArgs:
    @property
    def PreviewImageSize (self) -> Size: ...
    @property
    def PreviewImage (self) -> Bitmap: ...
    @PreviewImage.setter
    def PreviewImage (self, value : Bitmap): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class SceneServerDataUsage:
    Synchronous = 0
    Asynchronous = 1
class SceneServerData:
    def __init__(self, geo : PreviewGeometry, back : PreviewBackground, light : PreviewLighting, usage : SceneServerDataUsage): ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def Dispose (self): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class PreviewSceneServer:
    def __init__(self, pPreviewSceneServer : IntPtr): ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def Dispose (self): ...
    def ApplyRotation (self, X : float, Y : float, type : IRhRdkPreviewSceneServer_eRotationType): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderPrimitive:
    def Dispose (self): ...
    @property
    def RhinoObject (self) -> RhinoObject: ...
    @property
    def PrimitiveType (self) -> RenderPrimitiveType: ...
    def Mesh (self) -> Mesh: ...
    def TryGetSphere (self) -> Tuple(bool, Sphere): ...
    def TryGetBox (self) -> Tuple(bool, Box): ...
    def TryGetPlane (self) -> Tuple(bool, PlaneSurface): ...
    def TryGetCone (self) -> Tuple(bool, Cone, Plane): ...
    @property
    def InstanceTransform (self) -> Transform: ...
    @property
    def RenderMaterial (self) -> RenderMaterial: ...
    @property
    def BoundingBox (self) -> BoundingBox: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class SupportOptions:
    def AlwaysShowSunPreview () -> bool: ...
    def SetAlwaysShowSunPreview (b : bool): ...
    def PreviewCustomRenderMeshes () -> bool: ...
    def SetPreviewCustomRenderMeshes (b : bool): ...
    def MultithreadedTextureEvaluation () -> bool: ...
    def SetMultithreadedTextureEvaluation (b : bool): ...
    def HarvestContentParameters () -> bool: ...
    def SetHarvestContentParameters (b : bool): ...
    def TextureSize () -> int: ...
    def SetTextureSize (size : RdkTextureSize, bSendEvent : bool): ...
    def SupportSharedUIsNoCache () -> bool: ...
    def SupportSharedUIs () -> bool: ...
    def SetSupportSharedUIs (b : bool): ...
    def CombineEditors () -> bool: ...
    def SetCombineEditors (b : bool): ...
    def UseDefaultLibraryPath () -> bool: ...
    def SetUseDefaultLibraryPath (b : bool): ...
    def CustomLibraryPath () -> str: ...
    def SetCustomLibraryPath (path : str): ...
    def ShowRenderContent () -> bool: ...
    def ShowDocuments () -> bool: ...
    def ShowCustom () -> bool: ...
    def SetShowRenderContent (b : bool): ...
    def SetShowDocuments (b : bool): ...
    def SetShowCustom (b : bool): ...
    def CustomPaths () -> str: ...
    def SetCustomPaths (path : str): ...
    def LibrariesInitialLocation () -> RdkInitialLocation: ...
    def SetLibrariesInitialLocation (l : RdkInitialLocation): ...
    def LibrariesInitialLocationCustomFolder () -> str: ...
    def SetLibrariesInitialLocationCustomFolder (path : str): ...
    def SetLastNavigatedLocation (folder : str): ...
    def LastNavigatedLocation () -> str: ...
    def PreferNativeRenderer () -> bool: ...
    def SetPreferNativeRenderer (b : bool): ...
    def UsePreviewCache () -> bool: ...
    def SetUsePreviewCache (b : bool): ...
    def UseQuickInitialPreview () -> bool: ...
    def SetUseQuickInitialPreview (b : bool): ...
    def UsePreview () -> bool: ...
    def UseRenderedPreview () -> bool: ...
    def ShowDetailsPanel () -> bool: ...
    def SetShowDetailsPanel (b : bool): ...
    def PreferredUnpackFolder () -> str: ...
    def SetPreferredUnpackFolder (path : str): ...
    def CheckSupportFilesBeforeRendering () -> bool: ...
    def SetCheckSupportFilesBeforeRendering (b : bool): ...
    def AutoSaveRenderings () -> bool: ...
    def SetAutoSaveRenderings (b : bool): ...
    def AutoSaveKeepAmount () -> int: ...
    def SetAutoSaveKeepAmount (value : int): ...
    def MaxPreviewCacheMB () -> int: ...
    def MaxPreviewSeconds () -> int: ...
    def EnablePreviewJobLog () -> bool: ...
    def DarkPreviewCheckerColor () -> int: ...
    def LightPreviewCheckerColor () -> int: ...
    def LabelFormatLoc () -> int: ...
    def SetLabelFormatLoc (value : int): ...
    def LabelFormatUtc () -> int: ...
    def SetLabelFormatUtc (value : int): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderPlugInList:
    def __init__(self): ...
    @property
    def Capacity (self) -> int: ...
    @Capacity.setter
    def Capacity (self, value : int): ...
    @property
    def Count (self) -> int: ...
    @property
    def Item (self, index : int) -> RenderPlugInInfo: ...
    @Item.setter
    def Item (self, index : int, value : RenderPlugInInfo): ...
    def Add (self, item : RenderPlugInInfo): ...
    def AddRange (self, collection : Iterable(RenderPlugInInfo)): ...
    def AsReadOnly (self) -> ReadOnlyCollection: ...
    def BinarySearch (self, index : int, count : int, item : RenderPlugInInfo, comparer : IComparer) -> int: ...
    def BinarySearch (self, item : RenderPlugInInfo) -> int: ...
    def BinarySearch (self, item : RenderPlugInInfo, comparer : IComparer) -> int: ...
    def Clear (self): ...
    def Contains (self, item : RenderPlugInInfo) -> bool: ...
    def CopyTo (self, array : Set(RenderPlugInInfo)): ...
    def CopyTo (self, index : int, array : Set(RenderPlugInInfo), arrayIndex : int, count : int): ...
    def CopyTo (self, array : Set(RenderPlugInInfo), arrayIndex : int): ...
    def Exists (self, match : Predicate) -> bool: ...
    def Find (self, match : Predicate) -> RenderPlugInInfo: ...
    def FindAll (self, match : Predicate) -> List: ...
    def FindIndex (self, match : Predicate) -> int: ...
    def FindIndex (self, startIndex : int, match : Predicate) -> int: ...
    def FindIndex (self, startIndex : int, count : int, match : Predicate) -> int: ...
    def FindLast (self, match : Predicate) -> RenderPlugInInfo: ...
    def FindLastIndex (self, match : Predicate) -> int: ...
    def FindLastIndex (self, startIndex : int, match : Predicate) -> int: ...
    def FindLastIndex (self, startIndex : int, count : int, match : Predicate) -> int: ...
    def ForEach (self, action : Action): ...
    def GetEnumerator (self) -> Enumerator: ...
    def GetRange (self, index : int, count : int) -> List: ...
    def IndexOf (self, item : RenderPlugInInfo) -> int: ...
    def IndexOf (self, item : RenderPlugInInfo, index : int) -> int: ...
    def IndexOf (self, item : RenderPlugInInfo, index : int, count : int) -> int: ...
    def Insert (self, index : int, item : RenderPlugInInfo): ...
    def InsertRange (self, index : int, collection : Iterable(RenderPlugInInfo)): ...
    def LastIndexOf (self, item : RenderPlugInInfo) -> int: ...
    def LastIndexOf (self, item : RenderPlugInInfo, index : int) -> int: ...
    def LastIndexOf (self, item : RenderPlugInInfo, index : int, count : int) -> int: ...
    def Remove (self, item : RenderPlugInInfo) -> bool: ...
    def RemoveAll (self, match : Predicate) -> int: ...
    def RemoveAt (self, index : int): ...
    def RemoveRange (self, index : int, count : int): ...
    def Reverse (self): ...
    def Reverse (self, index : int, count : int): ...
    def Sort (self): ...
    def Sort (self, comparer : IComparer): ...
    def Sort (self, index : int, count : int, comparer : IComparer): ...
    def Sort (self, comparison : Comparison): ...
    def ToArray (self) -> Set(RenderPlugInInfo): ...
    def TrimExcess (self): ...
    def TrueForAll (self, match : Predicate) -> bool: ...
    def ConvertAll (self, converter : Converter) -> List: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderPlugInInfo:
    @property
    def Name (self) -> str: ...
    @Name.setter
    def Name (self, value : str): ...
    @property
    def PlugInId (self) -> Guid: ...
    @PlugInId.setter
    def PlugInId (self, value : Guid): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RealtimeDisplayModeClassInfo:
    @property
    def Name (self) -> str: ...
    @property
    def GUID (self) -> Guid: ...
    @property
    def DrawOpenGl (self) -> bool: ...
    @property
    def RealtimeDisplayModeType (self) -> Type: ...
    @property
    def DontRegisterAttributesOnStart (self) -> bool: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RealtimeDisplayMode:
    def add_HudStatusTextPressed (self, value : EventHandler): ...
    def remove_HudStatusTextPressed (self, value : EventHandler): ...
    def add_HudTimePressed (self, value : EventHandler): ...
    def remove_HudTimePressed (self, value : EventHandler): ...
    @property
    def Paused (self) -> bool: ...
    @Paused.setter
    def Paused (self, value : bool): ...
    @property
    def Locked (self) -> bool: ...
    @Locked.setter
    def Locked (self, value : bool): ...
    @property
    def MaxPasses (self) -> int: ...
    @MaxPasses.setter
    def MaxPasses (self, value : int): ...
    def add_MaxPassesChanged (self, value : EventHandler): ...
    def remove_MaxPassesChanged (self, value : EventHandler): ...
    def RegisterDisplayModes (plugin : PlugIn) -> Set(RealtimeDisplayModeClassInfo): ...
    def RegisterDisplayModes (assembly : Assembly, pluginId : Guid) -> Set(RealtimeDisplayModeClassInfo): ...
    def UnregisterDisplayModes (plugin : PlugIn): ...
    def UnregisterDisplayModes (assembly : Assembly, pluginId : Guid): ...
    def PostConstruct (self): ...
    def SignalRedraw (self): ...
    def ComputeViewportCrc (self, view : ViewInfo) -> UInt32: ...
    def SetView (self, view : ViewInfo): ...
    def GetView (self) -> ViewInfo: ...
    @property
    def LinearWorkflow (self) -> LinearWorkflow: ...
    def RemoveRealtimeViewport (realtimeViewport : IntPtr): ...
    def GetRealtimeViewport (realtimeViewport : IntPtr) -> RealtimeDisplayMode: ...
    def GetRealtimeViewport (realtimeViewport : IntPtr, create : bool) -> RealtimeDisplayMode: ...
    def CreateWorld (self, doc : RhinoDoc, viewInfo : ViewInfo, displayPipelineAttributes : DisplayPipelineAttributes): ...
    def GetRenderSize (self) -> Tuple(int, int): ...
    def StartRenderer (self, w : int, h : int, doc : RhinoDoc, view : ViewInfo, viewportInfo : ViewportInfo, forCapture : bool, renderWindow : RenderWindow) -> bool: ...
    def ShutdownRenderer (self): ...
    def LastRenderedPass (self) -> int: ...
    def ShowCaptureProgress (self) -> bool: ...
    def CaptureProgress (self) -> float: ...
    def OnRenderSizeChanged (self, width : int, height : int) -> bool: ...
    def IsRendererStarted (self) -> bool: ...
    def IsFrameBufferAvailable (self, view : ViewInfo) -> bool: ...
    def IsCompleted (self) -> bool: ...
    def add_OnDisplayPipelineSettingsChanged (self, value : EventHandler): ...
    def remove_OnDisplayPipelineSettingsChanged (self, value : EventHandler): ...
    def add_OnInitFramebuffer (self, value : EventHandler): ...
    def remove_OnInitFramebuffer (self, value : EventHandler): ...
    def add_OnDrawMiddleground (self, value : EventHandler): ...
    def remove_OnDrawMiddleground (self, value : EventHandler): ...
    def DrawOpenGl (self) -> bool: ...
    def UseFastDraw (self) -> bool: ...
    def SetUseDrawOpenGl (self, use : bool): ...
    def OpenGlVersion (self) -> int: ...
    def HudProductName (self) -> str: ...
    def HudCustomStatusText (self) -> str: ...
    def HudMaximumPasses (self) -> int: ...
    def HudLastRenderedPass (self) -> int: ...
    def HudRendererPaused (self) -> bool: ...
    def HudRendererLocked (self) -> bool: ...
    def HudAllowEditMaxPasses (self) -> bool: ...
    def HudShowMaxPasses (self) -> bool: ...
    def HudShowPasses (self) -> bool: ...
    def HudShowCustomStatusText (self) -> bool: ...
    def HudShowControls (self) -> bool: ...
    def HudShow (self) -> bool: ...
    def HudStartTime (self) -> DateTime: ...
    def add_HudPlayButtonPressed (self, value : EventHandler): ...
    def remove_HudPlayButtonPressed (self, value : EventHandler): ...
    def add_HudPauseButtonPressed (self, value : EventHandler): ...
    def remove_HudPauseButtonPressed (self, value : EventHandler): ...
    def add_HudLockButtonPressed (self, value : EventHandler): ...
    def remove_HudLockButtonPressed (self, value : EventHandler): ...
    def add_HudUnlockButtonPressed (self, value : EventHandler): ...
    def remove_HudUnlockButtonPressed (self, value : EventHandler): ...
    def add_HudProductNamePressed (self, value : EventHandler): ...
    def remove_HudProductNamePressed (self, value : EventHandler): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class PixelBuffer:
    def __init__(self, bufferPointer : IntPtr): ...
    @property
    def Buffer (self) -> IntPtr: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderWindowClonedEventArgs:
    @property
    def OldSessionId (self) -> Guid: ...
    @property
    def NewSessionId (self) -> Guid: ...
    @property
    def OldRenderWindow (self) -> RenderWindow: ...
    @property
    def NewRenderWindow (self) -> RenderWindow: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderWindow:
    def Create (szSize : Size) -> RenderWindow: ...
    def Dispose (self): ...
    @property
    def SessionId (self) -> Guid: ...
    def add_Cloned (value : EventHandler): ...
    def remove_Cloned (value : EventHandler): ...
    def ChannelId (ch : StandardChannels) -> Guid: ...
    def Size (self) -> Size: ...
    def SetSize (self, size : Size): ...
    def SetView (self, view : ViewInfo): ...
    def SetProgress (self, text : str, progress : Single): ...
    def EndAsyncRender (self, successCode : RenderSuccessCode): ...
    def OpenChannel (self, id : StandardChannels) -> Channel: ...
    def GetBitmap (self) -> Bitmap: ...
    def AddWireframeChannel (self, doc : RhinoDoc, viewport : ViewportInfo, size : Size, region : Rectangle) -> bool: ...
    def AddChannel (self, channel : StandardChannels) -> bool: ...
    def SetRGBAChannelColors (self, size : Size, colors : Set(Color4f)): ...
    def SetRGBAChannelColors (self, rectangle : Rectangle, colors : Set(Color4f)): ...
    def Invalidate (self): ...
    def InvalidateArea (self, rect : Rectangle): ...
    def SaveDibAsBitmap (self, filename : str): ...
    def SaveRenderImageAs (self, filename : str, renderEngineGuid : Guid, saveAlpha : bool): ...
    def SaveRenderImageAs (self, filename : str, saveAlpha : bool): ...
    def FromSessionId (sessionId : Guid) -> RenderWindow: ...
    def GetAdjust (self) -> ImageAdjust: ...
    def SetAdjust (self, imageAdjust : ImageAdjust): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderPanelType:
    RenderWindow = 0
class RenderTabs:
    def FromRenderSessionId (plugIn : PlugIn, tabType : Type, renderSessionId : Guid) -> Object: ...
    def SessionIdFromTab (tab : Object) -> Guid: ...
    def RegisterTab (self, plugin : PlugIn, tabType : Type, caption : str, icon : Icon): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderPanels:
    def FromRenderSessionId (plugIn : PlugIn, panelType : Type, renderSessionId : Guid) -> Object: ...
    def RegisterPanel (self, plugin : PlugIn, renderPanelType : RenderPanelType, panelType : Type, caption : str, alwaysShow : bool, initialShow : bool): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderPipeline:
    def SaveImage (self, fileName : str, saveAlpha : bool) -> bool: ...
    def CloseWindow (self) -> bool: ...
    def CommandResult (self) -> Result: ...
    def Render (self) -> RenderReturnCode: ...
    @property
    def RenderSessionId (self) -> Guid: ...
    def RenderWindow (self, view : RhinoView, rect : Rectangle, inWindow : bool) -> RenderReturnCode: ...
    def RenderSize () -> Size: ...
    def RenderSize (doc : RhinoDoc) -> Size: ...
    def RenderSize (doc : RhinoDoc, fromRenderSources : bool) -> Size: ...
    def SetAsyncRenderContext (self, aRC : AsyncRenderContext) -> Tuple(AsyncRenderContext): ...
    def GetRenderWindow (self, withWireframeChannel : bool) -> RenderWindow: ...
    def GetRenderWindow (self, withWireframeChannel : bool, fromRenderViewSource : bool) -> RenderWindow: ...
    def GetRenderWindow (self) -> RenderWindow: ...
    def GetRenderWindowFromRenderViewSource (self, fromRenderViewSource : bool) -> RenderWindow: ...
    @ConfirmationSeconds.setter
    def ConfirmationSeconds (self, value : int): ...
    @property
    def PlugIn (self) -> PlugIn: ...
    def SupportsPause (self) -> bool: ...
    def PauseRendering (self): ...
    def ResumeRendering (self): ...
    def Dispose (self): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderSourceView:
    def __init__(self, doc : RhinoDoc): ...
    def Dispose (self): ...
    def GetViewInfo (self) -> ViewInfo: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class AsyncRenderContext:
    @property
    def RenderWindow (self) -> RenderWindow: ...
    @RenderWindow.setter
    def RenderWindow (self, value : RenderWindow): ...
    @property
    def RenderThread (self) -> Thread: ...
    def StartRenderThread (self, threadStart : ThreadStart, threadName : str) -> bool: ...
    def JoinRenderThread (self): ...
    def StopRendering (self): ...
    def Dispose (self): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderEndEventArgs:
    def __init__(self): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class SimulatedEnvironment:
    def __init__(self): ...
    @property
    def BackgroundColor (self) -> Color: ...
    @BackgroundColor.setter
    def BackgroundColor (self, value : Color): ...
    @property
    def BackgroundImage (self) -> SimulatedTexture: ...
    @BackgroundImage.setter
    def BackgroundImage (self, value : SimulatedTexture): ...
    @property
    def BackgroundProjection (self) -> BackgroundProjections: ...
    @BackgroundProjection.setter
    def BackgroundProjection (self, value : BackgroundProjections): ...
    def ProjectionFromString (projection : str) -> BackgroundProjections: ...
    def StringFromProjection (projection : BackgroundProjections) -> str: ...
    def Dispose (self): ...
    def ConstPointer (self) -> IntPtr: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class TextureProjectionMode:
    MappingChannel = 0
    View = 1
    Wcs = 2
    EnvironmentMap = 3
    WcsBox = 4
    Screen = 5
class TextureMode:
    PROJECTION_MODE = 0
    MAPPING_CHANNEL_MODE = 1
    WRAP_TYPE_MODE = 2
    REPEAT_LOCKED_MODE = 3
    OFFSET_LOCKED_MODE = 4
    PREVIEW_IN_3D_MODE = 5
    REPEAT_MODE = 6
    OFFSET_MODE = 7
    ROTATION_MODE = 8
    ENVIRONMENT_MAPPING_MODE = 9
    INTERNAL_ENVIRONMENT_MAPPING_MODE = 10
    PREVIEW_LOCAL_MAPPING_MODE = 11
    DISPLAY_IN_VIEWPORT_MODE = 12
    IS_HDR_CAPABLE_MODE = 13
    IS_LINEAR_MODE = 14
    IS_IMAGE_BASED = 15
class TextureWrapType:
    Clamped = 0
    Repeating = 1
class TextureEnvironmentMappingMode:
    Automatic = 0
    Spherical = 1
    EnvironmentMap = 2
    Box = 3
    LightProbe = 5
    Cube = 6
    VerticalCrossCube = 7
    HorizontalCrossCube = 8
    Hemispherical = 9
class TextureGeneration:
    Allow = 1
    Disallow = 2
class TextureRenderHashFlags:
    ExcludeLocalMapping = 1
class RenderTexture:
    def NewBitmapTexture (texture : SimulatedTexture) -> RenderTexture: ...
    def NewBitmapTexture (texture : SimulatedTexture, doc : RhinoDoc) -> RenderTexture: ...
    def NewBitmapTexture (bitmap : Bitmap, doc : RhinoDoc) -> RenderTexture: ...
    @property
    def RenderHashWithoutLocalMapping (self) -> UInt32: ...
    @property
    def LocalMappingTransform (self) -> Transform: ...
    def PixelSize (self) -> Tuple(int, int, int): ...
    def CreateEvaluator (self, evaluatorFlags : TextureEvaluatorFlags) -> TextureEvaluator: ...
    def CreateEvaluator (self) -> TextureEvaluator: ...
    def SimulateTexture (self, simulation : SimulatedTexture, isForDataOnly : bool) -> Tuple(SimulatedTexture): ...
    def SimulateTexture (self, simulation : SimulatedTexture, tg : TextureGeneration, size : int, obj : RhinoObject) -> Tuple(SimulatedTexture): ...
    def SimulatedTexture (self, tg : TextureGeneration, size : int, obj : RhinoObject) -> SimulatedTexture: ...
    def GetProjectionMode (self) -> TextureProjectionMode: ...
    def SetProjectionMode (self, value : TextureProjectionMode, changeContext : ChangeContexts): ...
    def GetWrapType (self) -> TextureWrapType: ...
    def SetWrapType (self, value : TextureWrapType, changeContext : ChangeContexts): ...
    def GetMappingChannel (self) -> int: ...
    def SetMappingChannel (self, value : int, changeContext : ChangeContexts): ...
    def GetRepeatLocked (self) -> bool: ...
    def SetRepeatLocked (self, value : bool, changeContext : ChangeContexts): ...
    def GetOffsetLocked (self) -> bool: ...
    def SetOffsetLocked (self, value : bool, changeContext : ChangeContexts): ...
    def GetPreviewIn3D (self) -> bool: ...
    def SetPreviewIn3D (self, value : bool, changeContext : ChangeContexts): ...
    def GetRepeat (self) -> Vector3d: ...
    def SetRepeat (self, value : Vector3d, changeContext : ChangeContexts): ...
    def GetOffset (self) -> Vector3d: ...
    def SetOffset (self, value : Vector3d, changeContext : ChangeContexts): ...
    def GetRotation (self) -> Vector3d: ...
    def SetRotation (self, value : Vector3d, changeContext : ChangeContexts): ...
    def GetInternalEnvironmentMappingMode (self) -> TextureEnvironmentMappingMode: ...
    def GetEnvironmentMappingMode (self) -> TextureEnvironmentMappingMode: ...
    def SetEnvironmentMappingMode (self, value : TextureEnvironmentMappingMode, changeContext : ChangeContexts): ...
    def SetEnvironmentMappingMode (self, value : TextureEnvironmentMappingMode): ...
    def GetPreviewLocalMapping (self) -> bool: ...
    def SetPreviewLocalMapping (self, value : bool, changeContext : ChangeContexts): ...
    def GetLocalMappingType (self) -> eLocalMappingType: ...
    def SetPreviewLocalMapping (self, value : bool): ...
    def GetDisplayInViewport (self) -> bool: ...
    def SetDisplayInViewport (self, value : bool, changeContext : ChangeContexts): ...
    def SetDisplayInViewport (self, value : bool): ...
    def IsHdrCapable (self) -> bool: ...
    def IsLinear (self) -> bool: ...
    def GraphInfo (self, tgi : TextureGraphInfo) -> Tuple(TextureGraphInfo): ...
    def SetGraphInfo (self, tgi : TextureGraphInfo): ...
    def IsImageBased (self) -> bool: ...
    def GetEnvironmentMappingProjection (mode : TextureEnvironmentMappingMode, reflectionVector : Vector3d) -> Tuple(bool, Single, Single): ...
    def GetWcsBoxMapping (worldXyz : Point3d, normal : Vector3d) -> Point3d: ...
    def SetChildSlotOn (self, childSlotName : str, bOn : bool, cc : ChangeContexts): ...
    def ChildSlotAmount (self, childSlotName : str) -> float: ...
    def SetChildSlotAmount (self, childSlotName : str, amount : float, cc : ChangeContexts): ...
    def NewPreviewSceneServer (self, ssd : SceneServerData) -> PreviewSceneServer: ...
    def MatchData (self, oldContent : RenderContent) -> MatchDataResult: ...
    def IsCompatible (self, renderEngineId : Guid) -> bool: ...
    def ChildSlotNameFromParamName (self, paramName : str) -> str: ...
    def ParamNameFromChildSlotName (self, childSlotName : str) -> str: ...
    def FindChild (self, childSlotName : str) -> RenderContent: ...
    def SetChild (self, renderContent : RenderContent, childSlotName : str) -> bool: ...
    def SetChild (self, renderContent : RenderContent, childSlotName : str, changeContexts : ChangeContexts) -> bool: ...
    def AddChild (self, renderContent : RenderContent) -> bool: ...
    def AddChild (self, renderContent : RenderContent, childSlotName : str) -> bool: ...
    def DeleteChild (self, childSlotName : str, changeContexts : ChangeContexts) -> bool: ...
    def DeleteAllChildren (self, changeContexts : ChangeContexts): ...
    def ChangeChild (self, oldContent : RenderContent, newContent : RenderContent) -> bool: ...
    @property
    def ChildSlotName (self) -> str: ...
    @ChildSlotName.setter
    def ChildSlotName (self, value : str): ...
    def GetEmbeddedFilesList (self) -> Set(str): ...
    def Initialize (self) -> bool: ...
    def Uninitialize (self): ...
    def Replace (self, newcontent : RenderContent) -> bool: ...
    def IsFactoryProductAcceptableAsChild (self, kindId : Guid, factoryKind : str, childSlotName : str) -> bool: ...
    @property
    def FilesToEmbed (self) -> Iterable(str): ...
    def VirtualIcon (self, size : Size) -> Tuple(bool, Bitmap): ...
    def Icon (self, size : Size) -> Tuple(bool, Bitmap): ...
    def DynamicIcon (self, size : Size, usage : DynamicIconUsage) -> Tuple(bool, Bitmap): ...
    def Dispose (self): ...
    def MakeCopy (self) -> RenderContent: ...
    @property
    def Fields (self) -> FieldDictionary: ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def BindParameterToField (self, parameterName : str, childSlotName : str, field : Field, setEvent : ChangeContexts): ...
    def BindParameterToField (self, parameterName : str, field : Field, setEvent : ChangeContexts): ...
    @property
    def TypeName (self) -> str: ...
    @property
    def TypeDescription (self) -> str: ...
    @property
    def Name (self) -> str: ...
    @Name.setter
    def Name (self, value : str): ...
    @property
    def Notes (self) -> str: ...
    @Notes.setter
    def Notes (self, value : str): ...
    @property
    def Tags (self) -> str: ...
    @Tags.setter
    def Tags (self, value : str): ...
    @property
    def Category (self) -> str: ...
    @property
    def Id (self) -> Guid: ...
    @Id.setter
    def Id (self, value : Guid): ...
    @property
    def TypeId (self) -> Guid: ...
    def ForDisplay (self) -> RenderContent: ...
    def IsReference (self) -> bool: ...
    def UseCount (self) -> int: ...
    def SetRenderHash (self, hash : UInt32): ...
    def IsRenderHashCached (self) -> bool: ...
    @property
    def RenderHash (self) -> UInt32: ...
    def RenderHashExclude (self, flags : TextureRenderHashFlags, excludeParameterNames : str) -> UInt32: ...
    def RenderHashExclude (self, flags : CrcRenderHashFlags, excludeParameterNames : str) -> UInt32: ...
    @property
    def TopLevel (self) -> bool: ...
    @property
    def Hidden (self) -> bool: ...
    @Hidden.setter
    def Hidden (self, value : bool): ...
    @property
    def CanBeEdited (self) -> bool: ...
    @property
    def IsDefaultInstance (self) -> bool: ...
    @property
    def ProxyType (self) -> ProxyTypes: ...
    @property
    def Parent (self) -> RenderContent: ...
    @property
    def FirstChild (self) -> RenderContent: ...
    @property
    def NextSibling (self) -> RenderContent: ...
    @property
    def TopLevelParent (self) -> RenderContent: ...
    @property
    def Document (self) -> RhinoDoc: ...
    @property
    def DocumentRegistered (self) -> RhinoDoc: ...
    @property
    def DocumentAssoc (self) -> RhinoDoc: ...
    @DocumentAssoc.setter
    def DocumentAssoc (self, value : RhinoDoc): ...
    def OpenInEditor (self) -> bool: ...
    def OpenInModalEditor (self) -> bool: ...
    def Edit (self) -> RenderContent: ...
    @property
    def Xml (self) -> str: ...
    def BeginChange (self, changeContext : ChangeContexts): ...
    def EndChange (self): ...
    def AddUserInterfaceSection (self, classType : Type, caption : str, createExpanded : bool, createVisible : bool) -> UserInterfaceSection: ...
    def AddAutomaticUserInterfaceSection (self, caption : str, id : int) -> bool: ...
    def AddUserInterfaceSection (self, section : ICollapsibleSection) -> bool: ...
    def Factory (self) -> ContentFactory: ...
    def IsContentTypeAcceptableAsChild (self, type : Guid, childSlotName : str) -> bool: ...
    def IsFactoryProductAcceptableAsChild (self, factory : ContentFactory, childSlotName : str) -> bool: ...
    def GetParameter (self, parameterName : str) -> Object: ...
    def SetParameter (self, parameterName : str, value : Object, changeContext : ChangeContexts) -> bool: ...
    def SetParameter (self, parameterName : str, value : Object) -> bool: ...
    @property
    def IsLocked (self) -> bool: ...
    @IsLocked.setter
    def IsLocked (self, value : bool): ...
    def GetChildSlotParameter (self, parameterName : str, childSlotName : str) -> Object: ...
    def SetChildSlotParameter (self, parameterName : str, childSlotName : str, value : Object, sc : ExtraRequirementsSetContexts) -> bool: ...
    def ChildSlotOn (self, childSlotName : str) -> bool: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class TextureGraphInfo:
    def __init__(self): ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def Dispose (self): ...
    def AmountU (self) -> float: ...
    def SetAmountU (self, d : float): ...
    def AmountV (self) -> float: ...
    def SetAmountV (self, d : float): ...
    def AmountW (self) -> float: ...
    def SetAmountW (self, d : float): ...
    def ActiveAxis (self) -> Axis: ...
    def SetActiveAxis (self, axis : Axis): ...
    def ActiveChannel (self) -> Channel: ...
    def SetActiveChannel (self, channel : Channel): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class TwoColorRenderTexture:
    @property
    def Color1 (self) -> Color4f: ...
    @Color1.setter
    def Color1 (self, value : Color4f): ...
    @property
    def Color2 (self) -> Color4f: ...
    @Color2.setter
    def Color2 (self, value : Color4f): ...
    @property
    def Texture1On (self) -> bool: ...
    @Texture1On.setter
    def Texture1On (self, value : bool): ...
    @property
    def Texture2On (self) -> bool: ...
    @Texture2On.setter
    def Texture2On (self, value : bool): ...
    @property
    def Texture1Amount (self) -> float: ...
    @Texture1Amount.setter
    def Texture1Amount (self, value : float): ...
    @property
    def Texture2Amount (self) -> float: ...
    @Texture2Amount.setter
    def Texture2Amount (self, value : float): ...
    @property
    def SwapColors (self) -> bool: ...
    @SwapColors.setter
    def SwapColors (self, value : bool): ...
    @property
    def SuperSample (self) -> bool: ...
    @SuperSample.setter
    def SuperSample (self, value : bool): ...
    @property
    def RenderHashWithoutLocalMapping (self) -> UInt32: ...
    @property
    def LocalMappingTransform (self) -> Transform: ...
    def PixelSize (self) -> Tuple(int, int, int): ...
    def CreateEvaluator (self, evaluatorFlags : TextureEvaluatorFlags) -> TextureEvaluator: ...
    def CreateEvaluator (self) -> TextureEvaluator: ...
    def SimulateTexture (self, simulation : SimulatedTexture, isForDataOnly : bool) -> Tuple(SimulatedTexture): ...
    def SimulateTexture (self, simulation : SimulatedTexture, tg : TextureGeneration, size : int, obj : RhinoObject) -> Tuple(SimulatedTexture): ...
    def SimulatedTexture (self, tg : TextureGeneration, size : int, obj : RhinoObject) -> SimulatedTexture: ...
    def GetProjectionMode (self) -> TextureProjectionMode: ...
    def SetProjectionMode (self, value : TextureProjectionMode, changeContext : ChangeContexts): ...
    def GetWrapType (self) -> TextureWrapType: ...
    def SetWrapType (self, value : TextureWrapType, changeContext : ChangeContexts): ...
    def GetMappingChannel (self) -> int: ...
    def SetMappingChannel (self, value : int, changeContext : ChangeContexts): ...
    def GetRepeatLocked (self) -> bool: ...
    def SetRepeatLocked (self, value : bool, changeContext : ChangeContexts): ...
    def GetOffsetLocked (self) -> bool: ...
    def SetOffsetLocked (self, value : bool, changeContext : ChangeContexts): ...
    def GetPreviewIn3D (self) -> bool: ...
    def SetPreviewIn3D (self, value : bool, changeContext : ChangeContexts): ...
    def GetRepeat (self) -> Vector3d: ...
    def SetRepeat (self, value : Vector3d, changeContext : ChangeContexts): ...
    def GetOffset (self) -> Vector3d: ...
    def SetOffset (self, value : Vector3d, changeContext : ChangeContexts): ...
    def GetRotation (self) -> Vector3d: ...
    def SetRotation (self, value : Vector3d, changeContext : ChangeContexts): ...
    def GetInternalEnvironmentMappingMode (self) -> TextureEnvironmentMappingMode: ...
    def GetEnvironmentMappingMode (self) -> TextureEnvironmentMappingMode: ...
    def SetEnvironmentMappingMode (self, value : TextureEnvironmentMappingMode, changeContext : ChangeContexts): ...
    def SetEnvironmentMappingMode (self, value : TextureEnvironmentMappingMode): ...
    def GetPreviewLocalMapping (self) -> bool: ...
    def SetPreviewLocalMapping (self, value : bool, changeContext : ChangeContexts): ...
    def GetLocalMappingType (self) -> eLocalMappingType: ...
    def SetPreviewLocalMapping (self, value : bool): ...
    def GetDisplayInViewport (self) -> bool: ...
    def SetDisplayInViewport (self, value : bool, changeContext : ChangeContexts): ...
    def SetDisplayInViewport (self, value : bool): ...
    def IsHdrCapable (self) -> bool: ...
    def IsLinear (self) -> bool: ...
    def GraphInfo (self, tgi : TextureGraphInfo) -> Tuple(TextureGraphInfo): ...
    def SetGraphInfo (self, tgi : TextureGraphInfo): ...
    def IsImageBased (self) -> bool: ...
    def SetChildSlotOn (self, childSlotName : str, bOn : bool, cc : ChangeContexts): ...
    def ChildSlotAmount (self, childSlotName : str) -> float: ...
    def SetChildSlotAmount (self, childSlotName : str, amount : float, cc : ChangeContexts): ...
    def NewPreviewSceneServer (self, ssd : SceneServerData) -> PreviewSceneServer: ...
    def MatchData (self, oldContent : RenderContent) -> MatchDataResult: ...
    def IsCompatible (self, renderEngineId : Guid) -> bool: ...
    def ChildSlotNameFromParamName (self, paramName : str) -> str: ...
    def ParamNameFromChildSlotName (self, childSlotName : str) -> str: ...
    def FindChild (self, childSlotName : str) -> RenderContent: ...
    def SetChild (self, renderContent : RenderContent, childSlotName : str) -> bool: ...
    def SetChild (self, renderContent : RenderContent, childSlotName : str, changeContexts : ChangeContexts) -> bool: ...
    def AddChild (self, renderContent : RenderContent) -> bool: ...
    def AddChild (self, renderContent : RenderContent, childSlotName : str) -> bool: ...
    def DeleteChild (self, childSlotName : str, changeContexts : ChangeContexts) -> bool: ...
    def DeleteAllChildren (self, changeContexts : ChangeContexts): ...
    def ChangeChild (self, oldContent : RenderContent, newContent : RenderContent) -> bool: ...
    @property
    def ChildSlotName (self) -> str: ...
    @ChildSlotName.setter
    def ChildSlotName (self, value : str): ...
    def GetEmbeddedFilesList (self) -> Set(str): ...
    def Initialize (self) -> bool: ...
    def Uninitialize (self): ...
    def Replace (self, newcontent : RenderContent) -> bool: ...
    def IsFactoryProductAcceptableAsChild (self, kindId : Guid, factoryKind : str, childSlotName : str) -> bool: ...
    @property
    def FilesToEmbed (self) -> Iterable(str): ...
    def VirtualIcon (self, size : Size) -> Tuple(bool, Bitmap): ...
    def Icon (self, size : Size) -> Tuple(bool, Bitmap): ...
    def DynamicIcon (self, size : Size, usage : DynamicIconUsage) -> Tuple(bool, Bitmap): ...
    def Dispose (self): ...
    def MakeCopy (self) -> RenderContent: ...
    @property
    def Fields (self) -> FieldDictionary: ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def BindParameterToField (self, parameterName : str, childSlotName : str, field : Field, setEvent : ChangeContexts): ...
    def BindParameterToField (self, parameterName : str, field : Field, setEvent : ChangeContexts): ...
    @property
    def TypeName (self) -> str: ...
    @property
    def TypeDescription (self) -> str: ...
    @property
    def Name (self) -> str: ...
    @Name.setter
    def Name (self, value : str): ...
    @property
    def Notes (self) -> str: ...
    @Notes.setter
    def Notes (self, value : str): ...
    @property
    def Tags (self) -> str: ...
    @Tags.setter
    def Tags (self, value : str): ...
    @property
    def Category (self) -> str: ...
    @property
    def Id (self) -> Guid: ...
    @Id.setter
    def Id (self, value : Guid): ...
    @property
    def TypeId (self) -> Guid: ...
    def ForDisplay (self) -> RenderContent: ...
    def IsReference (self) -> bool: ...
    def UseCount (self) -> int: ...
    def SetRenderHash (self, hash : UInt32): ...
    def IsRenderHashCached (self) -> bool: ...
    @property
    def RenderHash (self) -> UInt32: ...
    def RenderHashExclude (self, flags : TextureRenderHashFlags, excludeParameterNames : str) -> UInt32: ...
    def RenderHashExclude (self, flags : CrcRenderHashFlags, excludeParameterNames : str) -> UInt32: ...
    @property
    def TopLevel (self) -> bool: ...
    @property
    def Hidden (self) -> bool: ...
    @Hidden.setter
    def Hidden (self, value : bool): ...
    @property
    def CanBeEdited (self) -> bool: ...
    @property
    def IsDefaultInstance (self) -> bool: ...
    @property
    def ProxyType (self) -> ProxyTypes: ...
    @property
    def Parent (self) -> RenderContent: ...
    @property
    def FirstChild (self) -> RenderContent: ...
    @property
    def NextSibling (self) -> RenderContent: ...
    @property
    def TopLevelParent (self) -> RenderContent: ...
    @property
    def Document (self) -> RhinoDoc: ...
    @property
    def DocumentRegistered (self) -> RhinoDoc: ...
    @property
    def DocumentAssoc (self) -> RhinoDoc: ...
    @DocumentAssoc.setter
    def DocumentAssoc (self, value : RhinoDoc): ...
    def OpenInEditor (self) -> bool: ...
    def OpenInModalEditor (self) -> bool: ...
    def Edit (self) -> RenderContent: ...
    @property
    def Xml (self) -> str: ...
    def BeginChange (self, changeContext : ChangeContexts): ...
    def EndChange (self): ...
    def AddUserInterfaceSection (self, classType : Type, caption : str, createExpanded : bool, createVisible : bool) -> UserInterfaceSection: ...
    def AddAutomaticUserInterfaceSection (self, caption : str, id : int) -> bool: ...
    def AddUserInterfaceSection (self, section : ICollapsibleSection) -> bool: ...
    def Factory (self) -> ContentFactory: ...
    def IsContentTypeAcceptableAsChild (self, type : Guid, childSlotName : str) -> bool: ...
    def IsFactoryProductAcceptableAsChild (self, factory : ContentFactory, childSlotName : str) -> bool: ...
    def GetParameter (self, parameterName : str) -> Object: ...
    def SetParameter (self, parameterName : str, value : Object, changeContext : ChangeContexts) -> bool: ...
    def SetParameter (self, parameterName : str, value : Object) -> bool: ...
    @property
    def IsLocked (self) -> bool: ...
    @IsLocked.setter
    def IsLocked (self, value : bool): ...
    def GetChildSlotParameter (self, parameterName : str, childSlotName : str) -> Object: ...
    def SetChildSlotParameter (self, parameterName : str, childSlotName : str, value : Object, sc : ExtraRequirementsSetContexts) -> bool: ...
    def ChildSlotOn (self, childSlotName : str) -> bool: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class TextureEvaluator:
    def Initialize (self) -> bool: ...
    def GetColor (self, uvw : Point3d, duvwdx : Vector3d, duvwdy : Vector3d) -> Color4f: ...
    def Dispose (self): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class TimeZone:
    @property
    def Name (self) -> str: ...
    @property
    def Hours (self) -> float: ...
    def TimeZones () -> int: ...
    def TimeZoneAt (index : int) -> TimeZone: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class ContentUndoHelper:
    def __init__(self, doc : RhinoDoc, description : str): ...
    def AddContent (self, content : RenderContent, parent : RenderContent) -> bool: ...
    def ModifyContent (self, content : RenderContent) -> bool: ...
    def TweakContent (self, content : RenderContent, parameterName : str) -> bool: ...
    def Dispose (self): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class ContentUndoBlocker:
    def __init__(self): ...
    def Dispose (self): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RdkUndoRecord:
    def __init__(self, pUndoRecord : IntPtr): ...
    def Dispose (self): ...
    def SetDescription (self, description : str): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RdkUndo:
    def __init__(self, pUndoRecord : IntPtr): ...
    def Dispose (self): ...
    def NewUndoRecord (self) -> RdkUndoRecord: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class NamedValue:
    def __init__(self, name : str, value : Object): ...
    @property
    def Name (self) -> str: ...
    @Name.setter
    def Name (self, value : str): ...
    @property
    def Value (self) -> Object: ...
    @Value.setter
    def Value (self, value : Object): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class ConvertibleExtensions:
    def ToColor4f (variant : IConvertible) -> Color4f: ...
    def ToVector2d (variant : IConvertible) -> Vector2d: ...
    def ToVector3d (variant : IConvertible) -> Vector3d: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class SimulatedTexture:
    def __init__(self): ...
    @property
    def BitmapSize () -> int: ...
    @BitmapSize.setter
    def BitmapSize (value : int): ...
    @property
    def LocalMappingTransform (self) -> Transform: ...
    @property
    def Filename (self) -> str: ...
    @Filename.setter
    def Filename (self, value : str): ...
    @property
    def OriginalFilename (self) -> str: ...
    @property
    def Repeat (self) -> Vector2d: ...
    @Repeat.setter
    def Repeat (self, value : Vector2d): ...
    @property
    def Offset (self) -> Vector2d: ...
    @Offset.setter
    def Offset (self, value : Vector2d): ...
    @property
    def Rotation (self) -> float: ...
    @Rotation.setter
    def Rotation (self, value : float): ...
    @property
    def Repeating (self) -> bool: ...
    @Repeating.setter
    def Repeating (self, value : bool): ...
    @property
    def MappingChannel (self) -> int: ...
    @MappingChannel.setter
    def MappingChannel (self, value : int): ...
    @property
    def ProjectionMode (self) -> ProjectionModes: ...
    @ProjectionMode.setter
    def ProjectionMode (self, value : ProjectionModes): ...
    def SetMappingChannelAndProjectionMode (self, pm : ProjectionModes, mappingChannel : int, emm : EnvironmentMappingModes): ...
    @property
    def HasTransparentColor (self) -> bool: ...
    @HasTransparentColor.setter
    def HasTransparentColor (self, value : bool): ...
    @property
    def TransparentColor (self) -> Color4f: ...
    @TransparentColor.setter
    def TransparentColor (self, value : Color4f): ...
    @property
    def TransparentColorSensitivity (self) -> float: ...
    @TransparentColorSensitivity.setter
    def TransparentColorSensitivity (self, value : float): ...
    @property
    def Filtered (self) -> bool: ...
    @Filtered.setter
    def Filtered (self, value : bool): ...
    def UnitsToMeters (self, units : float) -> float: ...
    def UnitsToMeters (self, doc : RhinoDoc, units : float) -> float: ...
    def MetersToUnits (self, units : float) -> float: ...
    def MetersToUnits (self, doc : RhinoDoc, units : float) -> float: ...
    def Texture (self) -> Texture: ...
    def Dispose (self): ...
    def ConstPointer (self) -> IntPtr: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class UndoRedo:
    def add_UndoRedoChanged (value : EventHandler): ...
    def remove_UndoRedoChanged (value : EventHandler): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class Sun:
    def __init__(self): ...
    def add_Changed (value : EventHandler): ...
    def remove_Changed (value : EventHandler): ...
    def SunDirection (latitude : float, longitude : float, when : DateTime) -> Vector3d: ...
    def Dispose (self): ...
    @property
    def Enabled (self) -> bool: ...
    @Enabled.setter
    def Enabled (self, value : bool): ...
    @property
    def ManualControl (self) -> bool: ...
    @ManualControl.setter
    def ManualControl (self, value : bool): ...
    @property
    def SkylightOn (self) -> bool: ...
    @SkylightOn.setter
    def SkylightOn (self, value : bool): ...
    @property
    def DaylightSaving (self) -> bool: ...
    @DaylightSaving.setter
    def DaylightSaving (self, value : bool): ...
    @property
    def DaylightSavingMinutes (self) -> int: ...
    @DaylightSavingMinutes.setter
    def DaylightSavingMinutes (self, value : int): ...
    @property
    def TimeZone (self) -> float: ...
    @TimeZone.setter
    def TimeZone (self, value : float): ...
    @property
    def North (self) -> float: ...
    @North.setter
    def North (self, value : float): ...
    @property
    def Vector (self) -> Vector3d: ...
    @property
    def Light (self) -> Light: ...
    def SetPosition (self, azimuthDegrees : float, altitudeDegrees : float): ...
    def SetPosition (self, when : DateTime, latitudeDegrees : float, longitudeDegrees : float): ...
    @property
    def Azimuth (self) -> float: ...
    @property
    def Altitude (self) -> float: ...
    @property
    def Latitude (self) -> float: ...
    @property
    def Longitude (self) -> float: ...
    def GetDateTime (self, kind : DateTimeKind) -> DateTime: ...
    def SetDateTime (self, time : DateTime, kind : DateTimeKind): ...
    def ShowDialog (self): ...
    def ColorFromAltitude (altitudeDegrees : float) -> Color: ...
    def AltitudeFromValues (latitude : float, longitude : float, timezoneHours : float, daylightMinutes : int, when : DateTime, hours : float, fast : bool) -> float: ...
    def JulianDay (timezoneHours : float, daylightMinutes : int, when : DateTime, hours : float) -> float: ...
    def TwilightZone () -> float: ...
    def Here () -> Tuple(bool, float, float): ...
    def CopyFrom (self, src : FreeFloatingBase): ...
    def BeginChange (self, cc : ChangeContexts): ...
    def EndChange (self) -> bool: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class Skylight:
    def __init__(self): ...
    def __init__(self, src : Skylight): ...
    def CopyFrom (self, src : FreeFloatingBase): ...
    def add_Changed (value : EventHandler): ...
    def remove_Changed (value : EventHandler): ...
    @property
    def Enabled (self) -> bool: ...
    @Enabled.setter
    def Enabled (self, value : bool): ...
    @property
    def ShadowIntensity (self) -> float: ...
    @ShadowIntensity.setter
    def ShadowIntensity (self, value : float): ...
    @property
    def CustomEnvironmentOn (self) -> bool: ...
    @CustomEnvironmentOn.setter
    def CustomEnvironmentOn (self, value : bool): ...
    @property
    def CustomEnvironment (self) -> Guid: ...
    @CustomEnvironment.setter
    def CustomEnvironment (self, value : Guid): ...
    def BeginChange (self, cc : ChangeContexts): ...
    def EndChange (self) -> bool: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class ImageFileEventArgs:
    @property
    def Event (self) -> ImageFileEvent: ...
    @property
    def FileName (self) -> str: ...
    @property
    def RenderEngine (self) -> str: ...
    @property
    def RenderEngineId (self) -> Guid: ...
    @property
    def SessionId (self) -> Guid: ...
    @property
    def EllapsedTime (self) -> int: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class ImageFileEvent:
    Saved = 0
    Loaded = 1
    Deleted = 2
class ImageFile:
    def add_Saved (value : EventHandler): ...
    def remove_Saved (value : EventHandler): ...
    def add_Loaded (value : EventHandler): ...
    def remove_Loaded (value : EventHandler): ...
    def add_Deleted (value : EventHandler): ...
    def remove_Deleted (value : EventHandler): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderContentManager:
    @property
    def UserRenderContentPath () -> str: ...
    def RestoreRenderContent () -> bool: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class Methods:
    None = 0
    FloydSteinberg = 1
    SimpleNoise = 2
class RenderingSources:
    ActiveViewport = 0
    SpecificViewport = 1
    NamedView = 2
    SnapShot = 3
class ShowContentChooserFlags:
    None = 0
    HideNewTab = 1
    HideExistingTab = 2
class MatchDataResult:
    None = 0
    Some = 1
    All = 2
class ExtraRequirementsSetContexts:
    UI = 0
    Drop = 1
    Program = 2
class ChangeContexts:
    UI = 0
    Drop = 1
    Program = 2
    Ignore = 3
    Tree = 4
    Undo = 5
    FieldInit = 6
    Serialize = 7
class Usage:
    None = 0
    Background = 1
    ReflectionAndRefraction = 2
    Skylighting = 4
    AnyUsage = 7
class ShowContentChooserResults:
    None = 0
    New = 1
    Copy = 2
    Instance = 3
class StandardChildSlots:
    Diffuse = 100
    Transparency = 101
    Bump = 102
    Environment = 103
class BasicMaterialParameterNames:
    def __init__(self): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class PreviewGeometryType:
    Sphere = 0
    Cube = 1
    Cone = 2
    Pyramid = 3
    Torus = 4
    Plane = 5
class PreviewBackgroundType:
    None = 1
    Checkered = 2
class ParametersNames:
    def __init__(self): ...
    @property
    def BaseColor () -> str: ...
    @property
    def BRDF () -> str: ...
    @property
    def Subsurface () -> str: ...
    @property
    def SubsurfaceScatteringColor () -> str: ...
    @property
    def SubsurfaceScatteringRadius () -> str: ...
    @property
    def Specular () -> str: ...
    @property
    def SpecularTint () -> str: ...
    @property
    def Metallic () -> str: ...
    @property
    def Roughness () -> str: ...
    @property
    def Anisotropic () -> str: ...
    @property
    def AnisotropicRotation () -> str: ...
    @property
    def Sheen () -> str: ...
    @property
    def SheenTint () -> str: ...
    @property
    def Clearcoat () -> str: ...
    @property
    def ClearcoatRoughness () -> str: ...
    @property
    def OpacityIor () -> str: ...
    @property
    def Opacity () -> str: ...
    @property
    def OpacityRoughness () -> str: ...
    @property
    def Emission () -> str: ...
    @property
    def AmbientOcclusion () -> str: ...
    @property
    def Smudge () -> str: ...
    @property
    def Displacement () -> str: ...
    @property
    def Normal () -> str: ...
    @property
    def Bump () -> str: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class SceneObject:
    @property
    def Mesh (self) -> Mesh: ...
    @property
    def Material (self) -> RenderMaterial: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RdkTextureSize:
    Size1 = 128
    Size2 = 256
    Size3 = 512
    Size4 = 1024
    Size5 = 2048
class RdkInitialLocation:
    RenderContent = 0
    LastOpenedFolder = 1
    CustomFolder = 2
class DisplayPipelineSettingsChangedEventArgs:
    def __init__(self, dpa : DisplayPipelineAttributes): ...
    @property
    def Attributes (self) -> DisplayPipelineAttributes: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class InitFramebufferEventArgs:
    def __init__(self, dp : DisplayPipeline): ...
    @property
    def Pipeline (self) -> DisplayPipeline: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class DrawMiddlegroundEventArgs:
    def __init__(self, dp : DisplayPipeline): ...
    @property
    def Pipeline (self) -> DisplayPipeline: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class HudMaxPassesChangedEventArgs:
    def __init__(self, mp : int): ...
    @property
    def MaxPasses (self) -> int: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderSuccessCode:
    Completed = 0
    Failed = 1
class StandardChannels:
    None = 0
    Red = 1
    Green = 2
    Blue = 4
    Alpha = 8
    RGBA = 14
    RGB = 15
    DistanceFromCamera = 16
    NormalX = 32
    NormalY = 64
    NormalZ = 128
    LuminanceRed = 256
    LuminanceGreen = 512
    LuminanceBlue = 1024
    BackgroundLuminanceRed = 4096
    BackgroundLuminanceGreen = 8192
    BackgroundLuminanceBlue = 16384
    MaterialIds = 65536
    ObjectIds = 131072
    Wireframe = 262144
class Channel:
    def PixelSize (self) -> int: ...
    def SetValue (self, x : int, y : int, value : Single): ...
    def SetValues (self, rectangle : Rectangle, bufferResolution : Size, colorBuffer : PixelBuffer): ...
    def SetValue (self, x : int, y : int, value : Color4f): ...
    def AddValue (self, x : int, y : int, value : Color4f): ...
    def Dispose (self): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class ImageAdjust:
    @property
    def Gamma (self) -> Single: ...
    @Gamma.setter
    def Gamma (self, value : Single): ...
    @property
    def Dither (self) -> Methods: ...
    @Dither.setter
    def Dither (self, value : Methods): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderReturnCode:
    Ok = 0
    EmptyScene = 1
    Cancel = 2
    NoActiveView = 3
    OnPreCreateWindow = 4
    NoFrameWndPointer = 5
    ErrorCreatingWindow = 6
    ErrorStartingRender = 7
    EnterModalLoop = 8
    ExitModalLoop = 9
    ExitRhino = 10
    InternalError = 11
class BackgroundProjections:
    Planar = 0
    Spherical = 1
    Emap = 2
    Box = 3
    Automatic = 4
    Lightprobe = 5
    Cubemap = 6
    VerticalCrossCubemap = 7
    HorizontalCrossCubemap = 8
class TextureEvaluatorFlags:
    Normal = 0
    DisableFiltering = 1
    DisableLocalMapping = 2
    DisableAdjustment = 4
    DisableProjectionChange = 8
class eLocalMappingType:
    lmt_none = 0
    lmt_2D = 1
    lmt_3D = 2
    lmt_force32bit = 4294967295
class TextureGeneration:
    Allow = 1
    Disallow = 2
class Axis:
    kU = 0
    kV = 1
    kW = 2
class Channel:
    kRed = 0
    kGrn = 1
    kBlu = 2
    kAlp = 3
    kLum = 4
class ProjectionModes:
    MappingChannel = 0
    View = 1
    Wcs = 2
    Emap = 3
    WcsBox = 4
    Screen = 5
class EnvironmentMappingModes:
    Automatic = 0
    Spherical = 1
    Emap = 2
    Box = 3
    Lightprobe = 5
    Cubemap = 6
    VerticalCrossCubemap = 7
    HorizontalCrossCubemap = 8
    Hemispherical = 9
