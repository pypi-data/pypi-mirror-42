from typing import Tuple, Set, Iterable, List

class FactoryBase:
    def Get (self, id : Guid) -> IntPtr: ...
    def Register (plugin : PlugIn) -> Set(Type): ...
    def Register () -> Set(Type): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class IHasCppImplementation:
    @property
    def CppPointer (self) -> IntPtr: ...
class IWindow:
    @property
    def Created (self) -> bool: ...
    @property
    def Shown (self) -> bool: ...
    @Shown.setter
    def Shown (self, value : bool): ...
    @property
    def Enabled (self) -> bool: ...
    @Enabled.setter
    def Enabled (self, value : bool): ...
    @property
    def Caption (self) -> LocalizeStringPair: ...
    @property
    def Parent (self) -> IntPtr: ...
    @Parent.setter
    def Parent (self, value : IntPtr): ...
    @property
    def Window (self) -> IntPtr: ...
    def Move (self, pos : Rectangle, bRepaint : bool, bRepaintBorder : bool): ...
class ICollapsibleSectionHolder:
    def Add (self, section : ICollapsibleSection): ...
    def Remove (self, section : ICollapsibleSection): ...
    @property
    def Sections (self) -> Iterable(ICollapsibleSection): ...
    @property
    def SectionCount (self) -> int: ...
    def SectionAt (self, index : int) -> ICollapsibleSection: ...
    def IsSectionExpanded (self, section : ICollapsibleSection) -> bool: ...
    def ExpandSection (self, section : ICollapsibleSection, expand : bool, ensureVisible : bool): ...
    @BackgroundColor.setter
    def BackgroundColor (self, value : Color): ...
    @EmptyText.setter
    def EmptyText (self, value : str): ...
    def UpdateAllViews (self, flags : int): ...
    @property
    def TopMargin (self) -> int: ...
    @TopMargin.setter
    def TopMargin (self, value : int): ...
    @property
    def BottomMargin (self) -> int: ...
    @BottomMargin.setter
    def BottomMargin (self, value : int): ...
    @property
    def LeftMargin (self) -> int: ...
    @LeftMargin.setter
    def LeftMargin (self, value : int): ...
    @property
    def RightMargin (self) -> int: ...
    @RightMargin.setter
    def RightMargin (self, value : int): ...
    @property
    def ScrollPosition (self) -> int: ...
    @ScrollPosition.setter
    def ScrollPosition (self, value : int): ...
    @SettingsPathSubKey.setter
    def SettingsPathSubKey (self, value : str): ...
class Delegates:
    def __init__(self): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class ICollapsibleSection:
    @property
    def Height (self) -> int: ...
    @property
    def Hidden (self) -> bool: ...
    @property
    def InitiallyExpanded (self) -> bool: ...
    @property
    def Id (self) -> Guid: ...
    @property
    def SettingsTag (self) -> str: ...
    @property
    def Collapsible (self) -> bool: ...
    @property
    def BackgroundColor (self) -> Color: ...
    @BackgroundColor.setter
    def BackgroundColor (self, value : Color): ...
    @property
    def ViewModel (self) -> IRdkViewModel: ...
    @property
    def PlugInId (self) -> Guid: ...
    @property
    def CommandOptionName (self) -> LocalizeStringPair: ...
    def RunScript (self, vm : IRdkViewModel) -> int: ...
    @property
    def ViewModelId (self) -> Guid: ...
class IRdkViewModel:
    def GetData (self, uuidDataType : Guid, bForWrite : bool, bAutoChangeBracket : bool) -> Object: ...
    def Commit (self, uuidDataType : Guid): ...
    def Discard (self, uuidDataType : Guid): ...
class CollapsibleSectionViewModel:
    def __init__(self, section : ICollapsibleSection): ...
    def GetData (self, uuidDataType : Guid, bForWrite : bool, bAutoChangeBracket : bool) -> Object: ...
    def Commit (self, uuidDataType : Guid): ...
    def Discard (self, uuidDataType : Guid): ...
    def UndoHelper (self, description : str) -> UndoRecord: ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class UndoRecord:
    def __init__(self, description : str, viewModel : IRdkViewModel): ...
    def Dispose (self): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class CollapsibleSectionHolderImpl:
    def __init__(self, client : ICollapsibleSectionHolder): ...
    def Dispose (self): ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def Find (cpp : IntPtr) -> ICollapsibleSectionHolder: ...
    def IsSameObject (self, cpp : IntPtr) -> bool: ...
    def NewNativeWrapper (cpp : IntPtr) -> ICollapsibleSectionHolder: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class CollapsibleSectionImpl:
    def __init__(self, section : ICollapsibleSection): ...
    def CreateHostedSection (section : ICollapsibleSection): ...
    def __InternalSetParent (self, parent : IntPtr): ...
    def Dispose (self): ...
    def ReplaceClient (self, client : ICollapsibleSection): ...
    @property
    def CppPointer (self) -> IntPtr: ...
    def Find (cpp : IntPtr) -> ICollapsibleSection: ...
    def NewNativeWrapper (cpp : IntPtr) -> ICollapsibleSection: ...
    def GetSibling (section : ICollapsibleSection, siblingSectionId : Guid) -> ICollapsibleSection: ...
    def GetSiblings (section : ICollapsibleSection) -> Set(ICollapsibleSection): ...
    @property
    def ViewModel (self) -> IRdkViewModel: ...
    @ViewModel.setter
    def ViewModel (self, value : IRdkViewModel): ...
    def IsSameObject (self, cpp : IntPtr) -> bool: ...
    def add_DataChanged (self, value : EventHandler): ...
    def remove_DataChanged (self, value : EventHandler): ...
    def add_ViewModelActivated (self, value : EventHandler): ...
    def remove_ViewModelActivated (self, value : EventHandler): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class InternalRdkViewModelFactory:
    def __init__(self): ...
    def Get (self, id : Guid) -> IntPtr: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class CREATEFROMCPPPROC:
    def __init__(self, object : Object, method : IntPtr): ...
    def Invoke (self, hwndParent : IntPtr) -> IntPtr: ...
    def BeginInvoke (self, hwndParent : IntPtr, callback : AsyncCallback, object : Object) -> IAsyncResult: ...
    def EndInvoke (self, result : IAsyncResult) -> IntPtr: ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def Equals (self, obj : Object) -> bool: ...
    def GetInvocationList (self) -> Set(Delegate): ...
    def GetHashCode (self) -> int: ...
    def DynamicInvoke (self, args : Set(Object)) -> Object: ...
    @property
    def Method (self) -> MethodInfo: ...
    @property
    def Target (self) -> Object: ...
    def Clone (self) -> Object: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class Factory:
    def __init__(self): ...
    def Get (self, id : Guid) -> IntPtr: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class CREATEHOSTFROMCPPPROC:
    def __init__(self, object : Object, method : IntPtr): ...
    def Invoke (self, client : IntPtr) -> IntPtr: ...
    def BeginInvoke (self, client : IntPtr, callback : AsyncCallback, object : Object) -> IAsyncResult: ...
    def EndInvoke (self, result : IAsyncResult) -> IntPtr: ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def Equals (self, obj : Object) -> bool: ...
    def GetInvocationList (self) -> Set(Delegate): ...
    def GetHashCode (self) -> int: ...
    def DynamicInvoke (self, args : Set(Object)) -> Object: ...
    @property
    def Method (self) -> MethodInfo: ...
    @property
    def Target (self) -> Object: ...
    def Clone (self) -> Object: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
