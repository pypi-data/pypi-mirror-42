from typing import Tuple, Set, Iterable, List

class RuntimeEnvironment:
    Unset = 0
    None = 1
    Windows = 2
    Apple = 3
    Android = 4
class ReadFileResult:
    Unset = 0
    Completed = 1
    CompletedWithErrors = 2
    Failed = 3
class UnitSystem:
    None = 0
    Microns = 1
    Millimeters = 2
    Centimeters = 3
    Meters = 4
    Kilometers = 5
    Microinches = 6
    Mils = 7
    Inches = 8
    Feet = 9
    Miles = 10
    CustomUnits = 11
    Angstroms = 12
    Nanometers = 13
    Decimeters = 14
    Dekameters = 15
    Hectometers = 16
    Megameters = 17
    Gigameters = 18
    Yards = 19
    PrinterPoints = 20
    PrinterPicas = 21
    NauticalMiles = 22
    AstronomicalUnits = 23
    LightYears = 24
    Parsecs = 25
    Unset = 255
class AngleUnitSystem:
    None = 0
    Turns = 1
    Radians = 2
    Degrees = 3
    Minutes = 4
    Seconds = 5
    Gradians = 6
    Unset = 255
class LengthValue:
    def Dispose (self): ...
    def Create (s : str, ps : StringParserSettings) -> Tuple(LengthValue, bool): ...
    def Create (length : float, us : UnitSystem, format : StringFormat) -> LengthValue: ...
    def Create (length : float, us : UnitSystem, format : StringFormat, localeId : UInt32) -> LengthValue: ...
    def Length (self) -> float: ...
    def Length (self, units : UnitSystem) -> float: ...
    @property
    def LengthString (self) -> str: ...
    def ChangeLength (self, newLength : float) -> LengthValue: ...
    def ChangeUnitSystem (self, newUnits : UnitSystem) -> LengthValue: ...
    @property
    def ParseSettings (self) -> StringParserSettings: ...
    @property
    def UnitSystem (self) -> UnitSystem: ...
    @property
    def LengthStringFormat (self) -> StringFormat: ...
    @property
    def ContextLocaleId (self) -> UInt32: ...
    @property
    def ContextAngleUnitSystem (self) -> AngleUnitSystem: ...
    def IsUnset (self) -> bool: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class ScaleValue:
    def __init__(self): ...
    def OneToOne () -> ScaleValue: ...
    def Create (s : str, ps : StringParserSettings) -> ScaleValue: ...
    def Create (left : LengthValue, right : LengthValue, format : ScaleStringFormat) -> ScaleValue: ...
    def Dispose (self): ...
    def IsUnset (self) -> bool: ...
    def LeftLengthValue (self) -> LengthValue: ...
    def RightLengthValue (self) -> LengthValue: ...
    @property
    def LeftToRightScale (self) -> float: ...
    @property
    def RightToLeftScale (self) -> float: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RhinoFileWatcherChangeReason:
    Created = 1
    Deleted = 2
    Changed = 4
    Renamed = 5
class RhinoDoc:
    def remove_EndOpenDocumentInitialiViewUpdate (value : EventHandler): ...
    def add_BeginSaveDocument (value : EventHandler): ...
    def remove_BeginSaveDocument (value : EventHandler): ...
    def add_EndSaveDocument (value : EventHandler): ...
    def remove_EndSaveDocument (value : EventHandler): ...
    def add_AddRhinoObject (value : EventHandler): ...
    def remove_AddRhinoObject (value : EventHandler): ...
    def add_DeleteRhinoObject (value : EventHandler): ...
    def remove_DeleteRhinoObject (value : EventHandler): ...
    def add_ReplaceRhinoObject (value : EventHandler): ...
    def remove_ReplaceRhinoObject (value : EventHandler): ...
    def add_UndeleteRhinoObject (value : EventHandler): ...
    def remove_UndeleteRhinoObject (value : EventHandler): ...
    def add_PurgeRhinoObject (value : EventHandler): ...
    def remove_PurgeRhinoObject (value : EventHandler): ...
    def add_SelectObjects (value : EventHandler): ...
    def remove_SelectObjects (value : EventHandler): ...
    def add_DeselectObjects (value : EventHandler): ...
    def remove_DeselectObjects (value : EventHandler): ...
    def add_DeselectAllObjects (value : EventHandler): ...
    def remove_DeselectAllObjects (value : EventHandler): ...
    def add_ModifyObjectAttributes (value : EventHandler): ...
    def remove_ModifyObjectAttributes (value : EventHandler): ...
    def add_BeforeTransformObjects (value : EventHandler): ...
    def remove_BeforeTransformObjects (value : EventHandler): ...
    def add_LayerTableEvent (value : EventHandler): ...
    def remove_LayerTableEvent (value : EventHandler): ...
    def add_DimensionStyleTableEvent (value : EventHandler): ...
    def remove_DimensionStyleTableEvent (value : EventHandler): ...
    def add_InstanceDefinitionTableEvent (value : EventHandler): ...
    def remove_InstanceDefinitionTableEvent (value : EventHandler): ...
    def add_LightTableEvent (value : EventHandler): ...
    def remove_LightTableEvent (value : EventHandler): ...
    def add_MaterialTableEvent (value : EventHandler): ...
    def remove_MaterialTableEvent (value : EventHandler): ...
    def add_GroupTableEvent (value : EventHandler): ...
    def remove_GroupTableEvent (value : EventHandler): ...
    def add_RenderMaterialsTableEvent (value : EventHandler): ...
    def remove_RenderMaterialsTableEvent (value : EventHandler): ...
    def add_RenderEnvironmentTableEvent (value : EventHandler): ...
    def remove_RenderEnvironmentTableEvent (value : EventHandler): ...
    def add_RenderTextureTableEvent (value : EventHandler): ...
    def remove_RenderTextureTableEvent (value : EventHandler): ...
    def add_TextureMappingEvent (value : EventHandler): ...
    def remove_TextureMappingEvent (value : EventHandler): ...
    @ModelSpaceTextScale.setter
    def ModelSpaceTextScale (self, value : float): ...
    @property
    def ModelSpaceAnnotationScalingEnabled (self) -> bool: ...
    @ModelSpaceAnnotationScalingEnabled.setter
    def ModelSpaceAnnotationScalingEnabled (self, value : bool): ...
    @property
    def LayoutSpaceAnnotationScalingEnabled (self) -> bool: ...
    @LayoutSpaceAnnotationScalingEnabled.setter
    def LayoutSpaceAnnotationScalingEnabled (self, value : bool): ...
    @property
    def Worksession (self) -> Worksession: ...
    @property
    def Views (self) -> ViewTable: ...
    @property
    def Objects (self) -> ObjectTable: ...
    @property
    def Manifest (self) -> ManifestTable: ...
    def CreateDefaultAttributes (self) -> ObjectAttributes: ...
    @property
    def Bitmaps (self) -> BitmapTable: ...
    @property
    def Materials (self) -> MaterialTable: ...
    @property
    def Linetypes (self) -> LinetypeTable: ...
    @property
    def Layers (self) -> LayerTable: ...
    @property
    def Groups (self) -> GroupTable: ...
    @property
    def Fonts (self) -> FontTable: ...
    @property
    def DimStyles (self) -> DimStyleTable: ...
    @property
    def Lights (self) -> LightTable: ...
    @property
    def HatchPatterns (self) -> HatchPatternTable: ...
    @property
    def InstanceDefinitions (self) -> InstanceDefinitionTable: ...
    @property
    def NamedConstructionPlanes (self) -> NamedConstructionPlaneTable: ...
    @property
    def NamedViews (self) -> NamedViewTable: ...
    @property
    def Strings (self) -> StringTable: ...
    @property
    def RuntimeData (self) -> RuntimeDocumentDataTable: ...
    @property
    def NamedPositions (self) -> NamedPositionTable: ...
    @property
    def Snapshots (self) -> SnapshotTable: ...
    @property
    def NamedLayerStates (self) -> NamedLayerStateTable: ...
    @property
    def RenderMaterials (self) -> RenderMaterialTable: ...
    @property
    def RenderEnvironments (self) -> RenderEnvironmentTable: ...
    @property
    def RenderTextures (self) -> RenderTextureTable: ...
    @property
    def CurrentEnvironment (self) -> ICurrentEnvironment: ...
    def GetRenderPrimitives (self, forceTriangleMeshes : bool, quietly : bool) -> Iterable(RenderPrimitive): ...
    def GetRenderPrimitives (self, viewport : ViewportInfo, forceTriangleMeshes : bool, quietly : bool) -> Iterable(RenderPrimitive): ...
    def GetRenderPrimitives (self, plugInId : Guid, viewport : ViewportInfo, forceTriangleMeshes : bool, quietly : bool) -> Iterable(RenderPrimitive): ...
    @property
    def GroundPlane (self) -> GroundPlane: ...
    def GetEmbeddedFilesList (self, missingOnly : bool) -> Set(str): ...
    @property
    def IsSendingMail (self) -> bool: ...
    @property
    def TemplateFileUsed (self) -> str: ...
    def ClearUndoRecords (self, purgeDeletedObjects : bool): ...
    def ClearUndoRecords (self, undoSerialNumber : UInt32, purgeDeletedObjects : bool): ...
    def ClearRedoRecords (self): ...
    @property
    def UndoRecordingEnabled (self) -> bool: ...
    @UndoRecordingEnabled.setter
    def UndoRecordingEnabled (self, value : bool): ...
    @property
    def UndoRecordingIsActive (self) -> bool: ...
    def BeginUndoRecord (self, description : str) -> UInt32: ...
    @property
    def NextUndoRecordSerialNumber (self) -> UInt32: ...
    @property
    def CurrentUndoRecordSerialNumber (self) -> UInt32: ...
    def AddCustomUndoEvent (self, description : str, handler : EventHandler) -> bool: ...
    def AddCustomUndoEvent (self, description : str, handler : EventHandler, tag : Object) -> bool: ...
    def EndUndoRecord (self, undoRecordSerialNumber : UInt32) -> bool: ...
    @property
    def UndoActive (self) -> bool: ...
    @property
    def RedoActive (self) -> bool: ...
    def ExtractPreviewImage (path : str) -> Bitmap: ...
    def SupportsRenderPrimitiveList (self, viewport : ViewportInfo, attrs : DisplayPipelineAttributes) -> bool: ...
    def GetRenderPrimitiveList (self, viewport : ViewportInfo, attrs : DisplayPipelineAttributes) -> RenderPrimitiveList: ...
    def TryGetRenderPrimitiveBoundingBox (self, viewport : ViewportInfo, attrs : DisplayPipelineAttributes) -> Tuple(bool, BoundingBox): ...
    @property
    def IsCommandRunning (self) -> bool: ...
    def add_CloseDocument (value : EventHandler): ...
    def remove_CloseDocument (value : EventHandler): ...
    def add_NewDocument (value : EventHandler): ...
    def remove_NewDocument (value : EventHandler): ...
    def add_ActiveDocumentChanged (value : EventHandler): ...
    def remove_ActiveDocumentChanged (value : EventHandler): ...
    def add_DocumentPropertiesChanged (value : EventHandler): ...
    def remove_DocumentPropertiesChanged (value : EventHandler): ...
    def add_BeginOpenDocument (value : EventHandler): ...
    def remove_BeginOpenDocument (value : EventHandler): ...
    def add_EndOpenDocument (value : EventHandler): ...
    def remove_EndOpenDocument (value : EventHandler): ...
    def add_EndOpenDocumentInitialiViewUpdate (value : EventHandler): ...
    def Open (filePath : str) -> Tuple(RhinoDoc, bool): ...
    def FromFilePath (filePath : str) -> RhinoDoc: ...
    def OpenFile (path : str) -> bool: ...
    def ReadFile (path : str, options : FileReadOptions) -> bool: ...
    def WriteFile (self, path : str, options : FileWriteOptions) -> bool: ...
    def Write3dmFile (self, path : str, options : FileWriteOptions) -> bool: ...
    def FindFile (self, filename : str) -> str: ...
    def Create (modelTemplateFileName : str) -> RhinoDoc: ...
    def OpenDocuments () -> Set(RhinoDoc): ...
    @property
    def ActiveDoc () -> RhinoDoc: ...
    def FromId (docId : int) -> RhinoDoc: ...
    def FromRuntimeSerialNumber (serialNumber : UInt32) -> RhinoDoc: ...
    def GetHashCode (self) -> int: ...
    def Equals (self, obj : Object) -> bool: ...
    @property
    def Name (self) -> str: ...
    @property
    def Path (self) -> str: ...
    @property
    def Notes (self) -> str: ...
    @Notes.setter
    def Notes (self, value : str): ...
    @property
    def DateCreated (self) -> DateTime: ...
    @property
    def DateLastEdited (self) -> DateTime: ...
    def GetGumballPlane (self) -> Tuple(bool, Plane): ...
    @property
    def ModelAbsoluteTolerance (self) -> float: ...
    @ModelAbsoluteTolerance.setter
    def ModelAbsoluteTolerance (self, value : float): ...
    @property
    def ModelAngleToleranceRadians (self) -> float: ...
    @ModelAngleToleranceRadians.setter
    def ModelAngleToleranceRadians (self, value : float): ...
    @property
    def ModelAngleToleranceDegrees (self) -> float: ...
    @ModelAngleToleranceDegrees.setter
    def ModelAngleToleranceDegrees (self, value : float): ...
    @property
    def ModelRelativeTolerance (self) -> float: ...
    @ModelRelativeTolerance.setter
    def ModelRelativeTolerance (self, value : float): ...
    @property
    def ModelDistanceDisplayPrecision (self) -> int: ...
    @ModelDistanceDisplayPrecision.setter
    def ModelDistanceDisplayPrecision (self, value : int): ...
    @property
    def PageDistanceDisplayPrecision (self) -> int: ...
    @PageDistanceDisplayPrecision.setter
    def PageDistanceDisplayPrecision (self, value : int): ...
    @property
    def PageAbsoluteTolerance (self) -> float: ...
    @PageAbsoluteTolerance.setter
    def PageAbsoluteTolerance (self, value : float): ...
    @property
    def PageAngleToleranceRadians (self) -> float: ...
    @PageAngleToleranceRadians.setter
    def PageAngleToleranceRadians (self, value : float): ...
    @property
    def PageAngleToleranceDegrees (self) -> float: ...
    @PageAngleToleranceDegrees.setter
    def PageAngleToleranceDegrees (self, value : float): ...
    @property
    def PageRelativeTolerance (self) -> float: ...
    @PageRelativeTolerance.setter
    def PageRelativeTolerance (self, value : float): ...
    @property
    def ModelBasepoint (self) -> Point3d: ...
    @ModelBasepoint.setter
    def ModelBasepoint (self, value : Point3d): ...
    @property
    def Modified (self) -> bool: ...
    @Modified.setter
    def Modified (self, value : bool): ...
    def ReadFileVersion (self) -> int: ...
    @property
    def ModelUnitSystem (self) -> UnitSystem: ...
    @ModelUnitSystem.setter
    def ModelUnitSystem (self, value : UnitSystem): ...
    def GetUnitSystemName (self, modelUnits : bool, capitalize : bool, singular : bool, abbreviate : bool) -> str: ...
    def AdjustModelUnitSystem (self, newUnitSystem : UnitSystem, scale : bool): ...
    @property
    def PageUnitSystem (self) -> UnitSystem: ...
    @PageUnitSystem.setter
    def PageUnitSystem (self, value : UnitSystem): ...
    def AdjustPageUnitSystem (self, newUnitSystem : UnitSystem, scale : bool): ...
    @property
    def DistanceDisplayPrecision (self) -> int: ...
    @property
    def IsReadOnly (self) -> bool: ...
    @property
    def IsLocked (self) -> bool: ...
    @property
    def IsInitializing (self) -> bool: ...
    @property
    def IsCreating (self) -> bool: ...
    @property
    def IsOpening (self) -> bool: ...
    @property
    def IsAvailable (self) -> bool: ...
    @property
    def IsClosing (self) -> bool: ...
    @property
    def DocumentId (self) -> int: ...
    @property
    def RuntimeSerialNumber (self) -> UInt32: ...
    @property
    def EarthAnchorPoint (self) -> EarthAnchorPoint: ...
    @EarthAnchorPoint.setter
    def EarthAnchorPoint (self, value : EarthAnchorPoint): ...
    @property
    def RenderSettings (self) -> RenderSettings: ...
    @RenderSettings.setter
    def RenderSettings (self, value : RenderSettings): ...
    @property
    def AnimationProperties (self) -> AnimationProperties: ...
    @AnimationProperties.setter
    def AnimationProperties (self, value : AnimationProperties): ...
    @property
    def CustomRenderSizes (self) -> List: ...
    @property
    def MeshingParameterStyle (self) -> MeshingParameterStyle: ...
    @MeshingParameterStyle.setter
    def MeshingParameterStyle (self, value : MeshingParameterStyle): ...
    def GetMeshingParameters (self, style : MeshingParameterStyle) -> MeshingParameters: ...
    def GetAnalysisMeshingParameters (self) -> MeshingParameters: ...
    def SetCustomMeshingParameters (self, mp : MeshingParameters): ...
    def GetCurrentMeshingParameters (self) -> MeshingParameters: ...
    @property
    def ModelSpaceHatchScale (self) -> float: ...
    @ModelSpaceHatchScale.setter
    def ModelSpaceHatchScale (self, value : float): ...
    @property
    def ModelSpaceTextScale (self) -> float: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class RhinoDocObserverArgs:
    def __init__(self, doc : RhinoDoc): ...
    @property
    def Doc (self) -> RhinoDoc: ...
    @property
    def RuntimeSerialNumber (self) -> UInt32: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class IRhinoDocObserver:
    def RhinoDocClosed (self, e : RhinoDocObserverArgs): ...
    def ActiveRhinoDocChanged (self, e : RhinoDocObserverArgs): ...
class DocumentEventArgs:
    @property
    def DocumentId (self) -> int: ...
    @property
    def DocumentSerialNumber (self) -> UInt32: ...
    @property
    def Document (self) -> RhinoDoc: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class DocumentOpenEventArgs:
    @property
    def FileName (self) -> str: ...
    @property
    def Merge (self) -> bool: ...
    @property
    def Reference (self) -> bool: ...
    @property
    def DocumentId (self) -> int: ...
    @property
    def DocumentSerialNumber (self) -> UInt32: ...
    @property
    def Document (self) -> RhinoDoc: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class DocumentSaveEventArgs:
    @property
    def FileName (self) -> str: ...
    @property
    def ExportSelected (self) -> bool: ...
    @property
    def DocumentId (self) -> int: ...
    @property
    def DocumentSerialNumber (self) -> UInt32: ...
    @property
    def Document (self) -> RhinoDoc: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RhinoWindow:
    @property
    def Handle (self) -> IntPtr: ...
    def Invoke (self, method : Delegate): ...
    @property
    def InvokeRequired (self) -> bool: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RhinoApp:
    def add_KeyboardEvent (value : KeyboardHookEvent): ...
    def remove_KeyboardEvent (value : KeyboardHookEvent): ...
    def add_Initialized (value : EventHandler): ...
    def remove_Initialized (value : EventHandler): ...
    def add_Closing (value : EventHandler): ...
    def remove_Closing (value : EventHandler): ...
    def add_AppSettingsChanged (value : EventHandler): ...
    def remove_AppSettingsChanged (value : EventHandler): ...
    def add_Idle (value : EventHandler): ...
    def remove_Idle (value : EventHandler): ...
    def add_MainLoop (value : EventHandler): ...
    def remove_MainLoop (value : EventHandler): ...
    def EnableContinuousMainLoop () -> bool: ...
    def DisableContinuousMainLoop (): ...
    def add_RdkNewDocument (value : EventHandler): ...
    def remove_RdkNewDocument (value : EventHandler): ...
    def add_RdkGlobalSettingsChanged (value : EventHandler): ...
    def remove_RdkGlobalSettingsChanged (value : EventHandler): ...
    def add_RdkUpdateAllPreviews (value : EventHandler): ...
    def remove_RdkUpdateAllPreviews (value : EventHandler): ...
    def add_RdkCacheImageChanged (value : EventHandler): ...
    def remove_RdkCacheImageChanged (value : EventHandler): ...
    def add_RendererChanged (value : EventHandler): ...
    def remove_RendererChanged (value : EventHandler): ...
    def add_RdkPlugInUnloading (value : EventHandler): ...
    def remove_RdkPlugInUnloading (value : EventHandler): ...
    @property
    def ToolbarFiles () -> ToolbarFileCollection: ...
    def InFullScreen () -> bool: ...
    @property
    def DefaultUiFont () -> Font: ...
    def RunningOnVMWare () -> bool: ...
    def RunningInRdp () -> bool: ...
    def ParseTextField (formula : str, obj : RhinoObject, topParentObject : RhinoObject) -> str: ...
    @property
    def SdkVersion () -> int: ...
    @property
    def SdkServiceRelease () -> int: ...
    @property
    def ExeVersion () -> int: ...
    @property
    def ExeServiceRelease () -> int: ...
    @property
    def BuildDate () -> DateTime: ...
    @property
    def VersionControlRevision () -> str: ...
    @property
    def Version () -> Version: ...
    @property
    def SerialNumber () -> str: ...
    @property
    def LicenseUserName () -> str: ...
    @property
    def LicenseUserOrganization () -> str: ...
    @property
    def InstallationTypeString () -> str: ...
    @property
    def Name () -> str: ...
    @property
    def NodeType () -> LicenseNode: ...
    @property
    def InstallationType () -> Installation: ...
    @property
    def SchemeName () -> str: ...
    def GetDataDirectory (localUser : bool, forceDirectoryCreation : bool) -> str: ...
    def GetDataDirectory (localUser : bool, forceDirectoryCreation : bool, subDirectory : str) -> str: ...
    def GetExecutableDirectory () -> DirectoryInfo: ...
    @property
    def Rhino2Id () -> Guid: ...
    @property
    def Rhino3Id () -> Guid: ...
    @property
    def Rhino4Id () -> Guid: ...
    @property
    def Rhino5Id () -> Guid: ...
    @property
    def CurrentRhinoId () -> Guid: ...
    @property
    def IsRunningAutomated () -> bool: ...
    @property
    def IsRunningHeadless () -> bool: ...
    @property
    def IsSkinned () -> bool: ...
    def Write (message : str): ...
    @property
    def CommandLineOut () -> CommandLineTextWriter: ...
    def Write (format : str, arg0 : Object): ...
    def Write (format : str, arg0 : Object, arg1 : Object): ...
    def Write (format : str, arg0 : Object, arg1 : Object, arg2 : Object): ...
    def WriteLine (): ...
    def WriteLine (message : str): ...
    def WriteLine (format : str, arg0 : Object): ...
    def WriteLine (format : str, arg0 : Object, arg1 : Object): ...
    def WriteLine (format : str, arg0 : Object, arg1 : Object, arg2 : Object): ...
    def OutputDebugString (str : str): ...
    def SetCommandPromptMessage (prompt : str): ...
    def SetCommandPrompt (prompt : str, promptDefault : str): ...
    def SetCommandPrompt (prompt : str): ...
    @property
    def CommandPrompt () -> str: ...
    @CommandPrompt.setter
    def CommandPrompt (value : str): ...
    @property
    def CommandHistoryWindowText () -> str: ...
    def ClearCommandHistoryWindow (): ...
    def SendKeystrokes (characters : str, appendReturn : bool): ...
    def SetFocusToMainWindow (): ...
    def ReleaseMouseCapture () -> bool: ...
    def Exit (): ...
    def RunScript (script : str, echo : bool) -> bool: ...
    def ExecuteCommand (document : RhinoDoc, commandName : str) -> Result: ...
    def RunScript (script : str, mruDisplayString : str, echo : bool) -> bool: ...
    def RunMenuScript (script : str) -> bool: ...
    def Wait (): ...
    def InvokeOnUiThread (method : Delegate, args : Set(Object)): ...
    def InvokeAndWait (action : Action): ...
    @property
    def InvokeRequired () -> bool: ...
    def MainWindowHandle () -> IntPtr: ...
    def MainWindow () -> IWin32Window: ...
    @property
    def MainApplicationWindow () -> RhinoWindow: ...
    def GetPlugInObject (pluginId : Guid) -> Object: ...
    def GetPlugInObject (plugin : str) -> Object: ...
    def IsInstallationEvaluation (licenseType : Installation) -> bool: ...
    def IsInstallationCommercial (licenseType : Installation) -> bool: ...
    def IsInstallationBeta (licenseType : Installation) -> bool: ...
    @property
    def LicenseExpires () -> bool: ...
    @property
    def IsPreRelease () -> bool: ...
    @property
    def IsLicenseValidated () -> bool: ...
    @property
    def IsCloudZooNode () -> bool: ...
    @property
    def ValidationGracePeriodDaysLeft () -> int: ...
    @property
    def DaysUntilExpiration () -> int: ...
    def AskUserForRhinoLicense (standAlone : bool, parentWindow : Object) -> bool: ...
    def ChangeLicenseKey (pluginId : Guid) -> bool: ...
    def RefreshRhinoLicense () -> bool: ...
    def LoginToCloudZoo () -> bool: ...
    @property
    def LoggedInUserName () -> str: ...
    @property
    def LoggedInUserAvatar () -> Image: ...
    @property
    def UserIsLoggedIn () -> bool: ...
    def add_EscapeKeyPressed (value : EventHandler): ...
    def remove_EscapeKeyPressed (value : EventHandler): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class IndexPair:
    def __init__(self, i : int, j : int): ...
    @property
    def I (self) -> int: ...
    @I.setter
    def I (self, value : int): ...
    @property
    def J (self) -> int: ...
    @J.setter
    def J (self, value : int): ...
    @property
    def Item (self, index : int) -> int: ...
    @Item.setter
    def Item (self, index : int, value : int): ...
    def IndexOf (self, item : int) -> int: ...
    def Contains (self, item : int) -> bool: ...
    def CopyTo (self, array : Set(int), arrayIndex : int): ...
    @property
    def Count (self) -> int: ...
    def GetEnumerator (self) -> IEnumerator: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
class RhinoMath:
    def ToRadians (degrees : float) -> float: ...
    def ToDegrees (radians : float) -> float: ...
    def IsValidDouble (x : float) -> bool: ...
    def IsValidSingle (x : Single) -> bool: ...
    def IntIndexToString (index : int) -> str: ...
    def UnitScale (from_ : UnitSystem, to : UnitSystem) -> float: ...
    def Clamp (value : int, bound1 : int, bound2 : int) -> int: ...
    def Clamp (value : float, bound1 : float, bound2 : float) -> float: ...
    def CRC32 (currentRemainder : UInt32, buffer : Set(Byte)) -> UInt32: ...
    def CRC32 (currentRemainder : UInt32, value : float) -> UInt32: ...
    def CRC32 (currentRemainder : UInt32, value : int) -> UInt32: ...
    def ParseNumber (expression : str) -> float: ...
    def TryParseNumber (expression : str) -> Tuple(bool, float): ...
    def EpsilonEquals (x : float, y : float, epsilon : float) -> bool: ...
    def EpsilonEquals (x : Single, y : Single, epsilon : Single) -> bool: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class AntialiasLevel:
    None = 0
    Draft = 1
    Good = 2
    High = 3
class Symbols:
    @property
    def DegreeSymbol () -> Char: ...
    @property
    def RadiusSymbol () -> Char: ...
    @property
    def DiameterSymbol () -> Char: ...
    @property
    def PlusMinusSymbol () -> Char: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class PersistentSettingsConverter:
    def IsStringList (s : str) -> bool: ...
    def IsStringDictionary (s : str) -> bool: ...
    def TryParseStringList (s : str) -> Tuple(bool, Set(str)): ...
    def ToString (values : Set(str)) -> str: ...
    def TryParseStringDictionary (s : str) -> Tuple(bool, Set(KeyValuePair)): ...
    def ToString (value : Set(KeyValuePair)) -> str: ...
    def TryParseEnum (type : Type, intValueAsString : str) -> Tuple(bool, str): ...
    def TryParseEnum (type : Type, enumValueName : str) -> Tuple(bool, int): ...
    def ToString (value : float) -> str: ...
    def TryParseDouble (s : str) -> Tuple(bool, float): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class PersistentSettingsSavedEventArgs:
    @property
    def SavedByThisRhino (self) -> bool: ...
    @property
    def PlugInSettings (self) -> PersistentSettings: ...
    def CommandSettings (self, englishCommandName : str) -> PersistentSettings: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class PersistentSettingsEventArgs:
    @property
    def Cancel (self) -> bool: ...
    @Cancel.setter
    def Cancel (self, value : bool): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class PersistentSettings:
    def SetColor (self, key : str, value : Color): ...
    def SetPoint3d (self, key : str, value : Point3d): ...
    def SetRectangle (self, key : str, value : Rectangle): ...
    def SetSize (self, key : str, value : Size): ...
    def SetPoint (self, key : str, value : Point): ...
    def SetDefault (self, key : str, value : bool): ...
    def SetDefault (self, key : str, value : Byte): ...
    def SetDefault (self, key : str, value : int): ...
    def SetDefault (self, key : str, value : float): ...
    def SetDefault (self, key : str, value : Char): ...
    def SetDefault (self, key : str, value : str): ...
    def SetDefault (self, key : str, value : Set(KeyValuePair)): ...
    def SetDefault (self, key : str, value : Set(str)): ...
    def SetDefault (self, key : str, value : DateTime): ...
    def SetDefault (self, key : str, value : Color): ...
    def SetDefault (self, key : str, value : Rectangle): ...
    def SetDefault (self, key : str, value : Size): ...
    def SetDefault (self, key : str, value : Point): ...
    def SetDefault (self, key : str, value : Point3d): ...
    def SetDefault (self, key : str, value : Guid): ...
    def SetEnumValue (self, enumValue : T): ...
    def SetEnumValue (self, key : str, value : T): ...
    def TryGetChar (self, key : str) -> Tuple(bool, Char): ...
    def TryGetChar (self, key : str, legacyKeyList : Iterable(str)) -> Tuple(bool, Char): ...
    def GetChar (self, key : str) -> Char: ...
    def GetChar (self, key : str, defaultValue : Char) -> Char: ...
    def GetChar (self, key : str, defaultValue : Char, legacyKeyList : Iterable(str)) -> Char: ...
    def TryGetString (self, key : str) -> Tuple(bool, str): ...
    def TryGetString (self, key : str, legacyKeyList : Iterable(str)) -> Tuple(bool, str): ...
    def GetString (self, key : str) -> str: ...
    def GetString (self, key : str, defaultValue : str) -> str: ...
    def GetString (self, key : str, defaultValue : str, legacyKeyList : Iterable(str)) -> str: ...
    def TryGetStringDictionary (self, key : str) -> Tuple(bool, Set(KeyValuePair)): ...
    def TryGetStringDictionary (self, key : str, legacyKeyList : Iterable(str)) -> Tuple(bool, Set(KeyValuePair)): ...
    def GetStringDictionary (self, key : str) -> Set(KeyValuePair): ...
    def GetStringDictionary (self, key : str, defaultValue : Set(KeyValuePair)) -> Set(KeyValuePair): ...
    def GetStringDictionary (self, key : str, defaultValue : Set(KeyValuePair), legacyKeyList : Iterable(str)) -> Set(KeyValuePair): ...
    def TryGetStringList (self, key : str) -> Tuple(bool, Set(str)): ...
    def TryGetStringList (self, key : str, legacyKeyList : Iterable(str)) -> Tuple(bool, Set(str)): ...
    def GetStringList (self, key : str) -> Set(str): ...
    def GetStringList (self, key : str, defaultValue : Set(str)) -> Set(str): ...
    def GetStringList (self, key : str, defaultValue : Set(str), legacyKeyList : Iterable(str)) -> Set(str): ...
    def TryGetDate (self, key : str) -> Tuple(bool, DateTime): ...
    def TryGetDate (self, key : str, legacyKeyList : Iterable(str)) -> Tuple(bool, DateTime): ...
    def GetDate (self, key : str) -> DateTime: ...
    def GetDate (self, key : str, defaultValue : DateTime) -> DateTime: ...
    def GetDate (self, key : str, defaultValue : DateTime, legacyKeyList : Iterable(str)) -> DateTime: ...
    def TryGetColor (self, key : str) -> Tuple(bool, Color): ...
    def TryGetColor (self, key : str, legacyKeyList : Iterable(str)) -> Tuple(bool, Color): ...
    def GetColor (self, key : str) -> Color: ...
    def GetColor (self, key : str, defaultValue : Color) -> Color: ...
    def GetColor (self, key : str, defaultValue : Color, legacyKeyList : Iterable(str)) -> Color: ...
    def GetGuid (self, key : str) -> Guid: ...
    def GetGuid (self, key : str, defaultValue : Guid) -> Guid: ...
    def GetGuid (self, key : str, defaultValue : Guid, legacyKeyList : Iterable(str)) -> Guid: ...
    def TryGetPoint (self, key : str) -> Tuple(bool, Point): ...
    def TryGetPoint (self, key : str, legacyKeyList : Iterable(str)) -> Tuple(bool, Point): ...
    def GetPoint (self, key : str) -> Point: ...
    def GetPoint (self, key : str, defaultValue : Point) -> Point: ...
    def GetPoint (self, key : str, defaultValue : Point, legacyKeyList : Iterable(str)) -> Point: ...
    def TryGetPoint3d (self, key : str) -> Tuple(bool, Point3d): ...
    def TryGetPoint3d (self, key : str, legacyKeyList : Iterable(str)) -> Tuple(bool, Point3d): ...
    def GetPoint3d (self, key : str) -> Point3d: ...
    def GetPoint3d (self, key : str, defaultValue : Point3d) -> Point3d: ...
    def GetPoint3d (self, key : str, defaultValue : Point3d, legacyKeyList : Iterable(str)) -> Point3d: ...
    def TryGetSize (self, key : str) -> Tuple(bool, Size): ...
    def TryGetSize (self, key : str, legacyKeyList : Iterable(str)) -> Tuple(bool, Size): ...
    def GetSize (self, key : str) -> Size: ...
    def GetSize (self, key : str, defaultValue : Size) -> Size: ...
    def GetSize (self, key : str, defaultValue : Size, legacyKeyList : Iterable(str)) -> Size: ...
    def TryGetRectangle (self, key : str) -> Tuple(bool, Rectangle): ...
    def TryGetRectangle (self, key : str, legacyKeyList : Iterable(str)) -> Tuple(bool, Rectangle): ...
    def GetRectangle (self, key : str) -> Rectangle: ...
    def GetRectangle (self, key : str, defaultValue : Rectangle) -> Rectangle: ...
    def GetRectangle (self, key : str, defaultValue : Rectangle, legacyKeyList : Iterable(str)) -> Rectangle: ...
    def TryGetDefault (self, key : str) -> Tuple(bool, bool): ...
    def TryGetDefault (self, key : str) -> Tuple(bool, Byte): ...
    def TryGetDefault (self, key : str) -> Tuple(bool, int): ...
    def TryGetDefault (self, key : str) -> Tuple(bool, float): ...
    def TryGetDefault (self, key : str) -> Tuple(bool, Char): ...
    def TryGetDefault (self, key : str) -> Tuple(bool, str): ...
    def TryGetDefault (self, key : str) -> Tuple(bool, Set(str)): ...
    def TryGetDefault (self, key : str) -> Tuple(bool, DateTime): ...
    def TryGetDefault (self, key : str) -> Tuple(bool, Color): ...
    def TryGetDefault (self, key : str) -> Tuple(bool, Point3d): ...
    def TryGetDefault (self, key : str) -> Tuple(bool, Size): ...
    def TryGetDefault (self, key : str) -> Tuple(bool, Rectangle): ...
    def GetEnumValue (self, defaultValue : T) -> T: ...
    def GetEnumValue (self, key : str, defaultValue : T) -> T: ...
    def GetEnumValue (self, key : str) -> T: ...
    def TryGetEnumValue (self, key : str) -> Tuple(bool, T): ...
    def SetGuid (self, key : str, value : Guid): ...
    def SetBool (self, key : str, value : bool): ...
    def SetByte (self, key : str, value : Byte): ...
    def SetInteger (self, key : str, value : int): ...
    def SetUnsignedInteger (self, key : str, value : UInt32): ...
    def SetDouble (self, key : str, value : float): ...
    def SetChar (self, key : str, value : Char): ...
    def SetString (self, key : str, value : str): ...
    @property
    def StringListRootKey () -> str: ...
    def SetStringList (self, key : str, value : Set(str)): ...
    def SetStringDictionary (self, key : str, value : Set(KeyValuePair)): ...
    def DeleteItem (self, key : str): ...
    def SetDate (self, key : str, value : DateTime): ...
    @property
    def HiddenFromUserInterface (self) -> bool: ...
    @HiddenFromUserInterface.setter
    def HiddenFromUserInterface (self, value : bool): ...
    def GetChild (self, key : str) -> PersistentSettings: ...
    def TryGetChild (self, key : str) -> Tuple(bool, PersistentSettings): ...
    @property
    def Keys (self) -> ICollection: ...
    @property
    def ChildKeys (self) -> ICollection: ...
    def TryGetSettingType (self, key : str) -> Tuple(bool, Type): ...
    def GetSettingType (self, key : str) -> Type: ...
    def TryGetSettingIsReadOnly (self, key : str) -> Tuple(bool, bool): ...
    def GetSettingIsReadOnly (self, key : str) -> bool: ...
    def TryGetSettingIsHiddenFromUserInterface (self, key : str) -> Tuple(bool, bool): ...
    def TryGetSettingIsHiddenFromUserInterface (self, key : str, legacyKeyList : Iterable(str)) -> Tuple(bool, bool): ...
    def GetSettingIsHiddenFromUserInterface (self, key : str) -> bool: ...
    def GetSettingIsHiddenFromUserInterface (self, key : str, legacyKeyList : Iterable(str)) -> bool: ...
    def HideSettingFromUserInterface (self, key : str): ...
    def AddChild (self, key : str) -> PersistentSettings: ...
    def DeleteChild (self, key : str): ...
    def FromPlugInId (pluginId : Guid) -> PersistentSettings: ...
    def RegisterSettingsValidator (self, key : str, validator : EventHandler): ...
    def GetValidator (self, key : str) -> EventHandler: ...
    def ContainsChangedValues (self) -> bool: ...
    def ClearChangedFlag (self): ...
    def ContainsModifiedValues (self, allUserSettings : PersistentSettings) -> bool: ...
    def TryGetGuid (self, key : str) -> Tuple(bool, Guid): ...
    def TryGetGuid (self, key : str, legacyKeyList : Iterable(str)) -> Tuple(bool, Guid): ...
    def TryGetBool (self, key : str) -> Tuple(bool, bool): ...
    def TryGetBool (self, key : str, legacyKeyList : Iterable(str)) -> Tuple(bool, bool): ...
    def GetBool (self, key : str) -> bool: ...
    def GetBool (self, key : str, defaultValue : bool) -> bool: ...
    def GetBool (self, key : str, defaultValue : bool, legacyKeyList : Iterable(str)) -> bool: ...
    def TryGetByte (self, key : str) -> Tuple(bool, Byte): ...
    def TryGetByte (self, key : str, legacyKeyList : Iterable(str)) -> Tuple(bool, Byte): ...
    def GetByte (self, key : str) -> Byte: ...
    def GetByte (self, key : str, defaultValue : Byte) -> Byte: ...
    def GetByte (self, key : str, defaultValue : Byte, legacyKeyList : Iterable(str)) -> Byte: ...
    def TryGetInteger (self, key : str) -> Tuple(bool, int): ...
    def TryGetInteger (self, key : str, legacyKeyList : Iterable(str)) -> Tuple(bool, int): ...
    def GetInteger (self, key : str) -> int: ...
    def GetInteger (self, key : str, defaultValue : int) -> int: ...
    def GetInteger (self, key : str, defaultValue : int, bound : int, boundIsLower : bool) -> int: ...
    def GetInteger (self, key : str, defaultValue : int, lowerBound : int, upperBound : int) -> int: ...
    def GetInteger (self, key : str, defaultValue : int, legacyKeyList : Iterable(str)) -> int: ...
    def TryGetUnsignedInteger (self, key : str) -> Tuple(bool, UInt32): ...
    def TryGetUnsignedInteger (self, key : str, legacyKeyList : Iterable(str)) -> Tuple(bool, UInt32): ...
    def GetUnsignedInteger (self, key : str) -> UInt32: ...
    def GetUnsignedInteger (self, key : str, defaultValue : UInt32) -> UInt32: ...
    def GetUnsignedInteger (self, key : str, defaultValue : UInt32, legacyKeyList : Iterable(str)) -> UInt32: ...
    def TryGetDouble (self, key : str) -> Tuple(bool, float): ...
    def TryGetDouble (self, key : str, legacyKeyList : Iterable(str)) -> Tuple(bool, float): ...
    def GetDouble (self, key : str) -> float: ...
    def GetDouble (self, key : str, defaultValue : float) -> float: ...
    def GetDouble (self, key : str, defaultValue : float, legacyKeyList : Iterable(str)) -> float: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class StringFormat:
    ExactDecimal = 0
    ExactProperFraction = 1
    ExactImproperFraction = 2
    CleanDecimal = 3
    CleanProperFraction = 4
    CleanImproperFraction = 5
class ScaleStringFormat:
    None = 0
    RatioFormat = 1
    EquationFormat = 2
    FractionFormat = 3
    Unset = 255
class RenderContentTableEventType:
    Loaded = 0
    Clearing = 1
    Cleared = 2
    MaterialAssignmentChanged = 3
class RenderContentTableEventArgs:
    @property
    def Document (self) -> RhinoDoc: ...
    @property
    def EventType (self) -> RenderContentTableEventType: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class RenderMaterialAssignmentChangedEventArgs:
    @property
    def IsLayer (self) -> bool: ...
    @property
    def IsObject (self) -> bool: ...
    @property
    def LayerId (self) -> Guid: ...
    @property
    def ObjectId (self) -> Guid: ...
    @property
    def OldRenderMaterial (self) -> Guid: ...
    @property
    def NewRenderMaterial (self) -> Guid: ...
    @property
    def Document (self) -> RhinoDoc: ...
    @property
    def EventType (self) -> RenderContentTableEventType: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class TextureMappingEventType:
    Added = 0
    Deleted = 1
    Undeleted = 2
    Modified = 3
class TextureMappingEventArgs:
    @property
    def Document (self) -> RhinoDoc: ...
    @property
    def EventType (self) -> TextureMappingEventType: ...
    @property
    def OldMapping (self) -> TextureMapping: ...
    @property
    def NewMapping (self) -> TextureMapping: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class CommandLineTextWriter:
    def __init__(self): ...
    @property
    def Encoding (self) -> Encoding: ...
    def Write (self, value : str): ...
    def Write (self, value : Char): ...
    def Write (self, buffer : Set(Char), index : int, count : int): ...
    def write (self, str : str): ...
    @property
    def FormatProvider (self) -> IFormatProvider: ...
    def Close (self): ...
    def Dispose (self): ...
    def Flush (self): ...
    @property
    def NewLine (self) -> str: ...
    @NewLine.setter
    def NewLine (self, value : str): ...
    def Write (self, buffer : Set(Char)): ...
    def Write (self, value : bool): ...
    def Write (self, value : int): ...
    def Write (self, value : UInt32): ...
    def Write (self, value : Int64): ...
    def Write (self, value : UInt64): ...
    def Write (self, value : Single): ...
    def Write (self, value : float): ...
    def Write (self, value : Decimal): ...
    def Write (self, value : Object): ...
    def Write (self, format : str, arg0 : Object): ...
    def Write (self, format : str, arg0 : Object, arg1 : Object): ...
    def Write (self, format : str, arg0 : Object, arg1 : Object, arg2 : Object): ...
    def Write (self, format : str, arg : Set(Object)): ...
    def WriteLine (self): ...
    def WriteLine (self, value : Char): ...
    def WriteLine (self, buffer : Set(Char)): ...
    def WriteLine (self, buffer : Set(Char), index : int, count : int): ...
    def WriteLine (self, value : bool): ...
    def WriteLine (self, value : int): ...
    def WriteLine (self, value : UInt32): ...
    def WriteLine (self, value : Int64): ...
    def WriteLine (self, value : UInt64): ...
    def WriteLine (self, value : Single): ...
    def WriteLine (self, value : float): ...
    def WriteLine (self, value : Decimal): ...
    def WriteLine (self, value : str): ...
    def WriteLine (self, value : Object): ...
    def WriteLine (self, format : str, arg0 : Object): ...
    def WriteLine (self, format : str, arg0 : Object, arg1 : Object): ...
    def WriteLine (self, format : str, arg0 : Object, arg1 : Object, arg2 : Object): ...
    def WriteLine (self, format : str, arg : Set(Object)): ...
    def WriteAsync (self, value : Char) -> Task: ...
    def WriteAsync (self, value : str) -> Task: ...
    def WriteAsync (self, buffer : Set(Char)) -> Task: ...
    def WriteAsync (self, buffer : Set(Char), index : int, count : int) -> Task: ...
    def WriteLineAsync (self, value : Char) -> Task: ...
    def WriteLineAsync (self, value : str) -> Task: ...
    def WriteLineAsync (self, buffer : Set(Char)) -> Task: ...
    def WriteLineAsync (self, buffer : Set(Char), index : int, count : int) -> Task: ...
    def WriteLineAsync (self) -> Task: ...
    def FlushAsync (self) -> Task: ...
    def GetLifetimeService (self) -> Object: ...
    def InitializeLifetimeService (self) -> Object: ...
    def CreateObjRef (self, requestedType : Type) -> ObjRef: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class KeyboardHookEvent:
    def __init__(self, object : Object, method : IntPtr): ...
    def Invoke (self, key : int): ...
    def BeginInvoke (self, key : int, callback : AsyncCallback, object : Object) -> IAsyncResult: ...
    def EndInvoke (self, result : IAsyncResult): ...
    def GetObjectData (self, info : SerializationInfo, context : StreamingContext): ...
    def Equals (self, obj : Object) -> bool: ...
    def GetInvocationList (self) -> Set(Delegate): ...
    def GetHashCode (self) -> int: ...
    def DynamicInvoke (self, args : Set(Object)) -> Object: ...
    @property
    def Method (self) -> MethodInfo: ...
    @property
    def Target (self) -> Object: ...
    def Clone (self) -> Object: ...
    def ToString (self) -> str: ...
    def GetType (self) -> Type: ...
