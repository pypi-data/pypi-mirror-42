from typing import Tuple, Set, Iterable, List

class IUserInterfaceSection:
    def UserInterfaceDisplayData (self, userInterfaceSection : UserInterfaceSection, renderContentList : Set(RenderContent)): ...
    def OnUserInterfaceSectionExpanding (self, userInterfaceSection : UserInterfaceSection, expanding : bool): ...
    @property
    def Hidden (self) -> bool: ...
class UserInterfaceSection:
    @property
    def RenderContent (self) -> RenderContent: ...
    @property
    def Window (self) -> Object: ...
    def FromWindow (window : Object) -> UserInterfaceSection: ...
    def GetContentList (self) -> Set(RenderContent): ...
    def Show (self, visible : bool): ...
    def Expand (self, expand : bool): ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
class WorldMapDayNight:
    def __init__(self): ...
    def Dispose (self): ...
    def Map (self) -> Image: ...
    def MakeMapBitmap (self): ...
    def HasMapForCurrentSettings (self) -> bool: ...
    def SetDayNightDisplay (self, bOn : bool): ...
    def SetEnabled (self, bEnabled : bool): ...
    def SetTimeInfo (self, dt : DateTime, timezone : float, daylightSavingMinutes : int, bDaylightSavingsOn : bool): ...
    def LocationToMap (self, latlong : Point2d) -> Point: ...
    def MapToLocation (self, mapPoint : Point) -> Point2d: ...
    def ToString (self) -> str: ...
    def Equals (self, obj : Object) -> bool: ...
    def GetHashCode (self) -> int: ...
    def GetType (self) -> Type: ...
