Metadata-Version: 2.1
Name: medlemssys
Version: 0.12.0
Summary: Membership register for norwegian youth organizations
Home-page: https://github.com/odinho/medlemssys
Author: Odin HÃ¸rthe Omdal
Author-email: odin.omdal@gmail.com
License: AGPLv3+
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: End Users/Desktop
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2.7
Classifier: Topic :: Database :: Front-Ends
Classifier: Topic :: Office/Business
Requires-Dist: Django (<1.11,>=1.10)
Requires-Dist: logan
Requires-Dist: whitenoise
Requires-Dist: django-model-utils
Requires-Dist: pytz
Requires-Dist: reportlab
Requires-Dist: python-dateutil
Requires-Dist: djangorestframework (>=3.0)
Requires-Dist: django-reversion (>=2.0)
Requires-Dist: django-reversion-compare (>=0.8)
Provides-Extra: production
Requires-Dist: django-gunicorn ; extra == 'production'
Requires-Dist: gunicorn ; extra == 'production'
Requires-Dist: psycopg2 ; extra == 'production'
Requires-Dist: raven ; extra == 'production'

Medlemssys
==========

Medlemssys is a membership register.  Primarily written for norwegian youth
organizations, but can and is used by other kinds of organizations.

It doesn't do anything very advanced, but provides a way to list the members,
export to CSV, can read OCR-files, send emails and some more.

Installation
------------

Doing a simple install, you can install "medlemssys" for a test version, or
"medlemssys[production]" to get a few required extras for a real setup::

    pip install medlemssys[production]

You'll use the `medlemssys` command for all commands.  It's a small wrapper
around the django-admin command.  The first thing you'll want to do is to
create a settings file::

    medlemssys init

This will give you a `medlemssys_conf.py` file.  Have a look at it, and change
what you need.  You should load in the data to the database and create yourself
a user::

    medlemssys migrate
    medlemssys createsuperuser

If you chose the production setup, you can run gunicorn using a handy wrapper::

    medlemssys gunicorn --bind 0.0.0.0:8000

You can of course also try the django development server to just test your
register::

    medlemssys runserver 0.0.0.0:8000



