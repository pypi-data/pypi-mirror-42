Metadata-Version: 1.1
Name: eazyserver
Version: 0.1.1
Summary: A simple python web framework for creating RESTful and JSON-RPC services
Home-page: https://github.com/ashutoshdtu/eazyserver
Author: Ashutosh Mishra
Author-email: ashutoshdtu@gmail.com
License: MIT license
Description: ==========
        eazyserver
        ==========
        
        
        .. image:: https://img.shields.io/pypi/v/eazyserver.svg
                :target: https://pypi.python.org/pypi/eazyserver
        
        .. image:: https://img.shields.io/travis/ashutoshdtu/eazyserver.svg
                :target: https://travis-ci.org/ashutoshdtu/eazyserver
        
        .. image:: https://readthedocs.org/projects/eazyserver/badge/?version=latest
                :target: https://eazyserver.readthedocs.io/en/latest/?badge=latest
                :alt: Documentation Status
        
        .. image:: https://pyup.io/repos/github/ashutoshdtu/eazyserver/shield.svg
             :target: https://pyup.io/repos/github/ashutoshdtu/eazyserver/
             :alt: Updates
        
        
        A simple python web framework for creating RESTful and JSON-RPC services
        
        
        * Free software: MIT license
        * Documentation: https://eazyserver.readthedocs.io.
        
        
        Features
        --------
        
        * TODO
        
        Credits
        -------
        
        This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.
        
        .. _Cookiecutter: https://github.com/audreyr/cookiecutter
        .. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage
        
        
        =======
        Credits
        =======
        
        Development Lead
        ----------------
        
        * Ashutosh Mishra <ashutoshdtu@gmail.com>
        
        Contributors
        ------------
        
        None yet. Why not be the first?
        
        
        =======
        History
        =======
        
        0.1.0 (2019-02-18)
        ------------------
        
        * First release on PyPI.
        
        
        .. highlight:: shell
        
        ============
        Contributing
        ============
        
        Contributions are welcome, and they are greatly appreciated! Every little bit
        helps, and credit will always be given.
        
        You can contribute in many ways:
        
        Types of Contributions
        ----------------------
        
        Report Bugs
        ~~~~~~~~~~~
        
        Report bugs at https://github.com/ashutoshdtu/eazyserver/issues.
        
        If you are reporting a bug, please include:
        
        * Your operating system name and version.
        * Any details about your local setup that might be helpful in troubleshooting.
        * Detailed steps to reproduce the bug.
        
        Fix Bugs
        ~~~~~~~~
        
        Look through the GitHub issues for bugs. Anything tagged with "bug" and "help
        wanted" is open to whoever wants to implement it.
        
        Implement Features
        ~~~~~~~~~~~~~~~~~~
        
        Look through the GitHub issues for features. Anything tagged with "enhancement"
        and "help wanted" is open to whoever wants to implement it.
        
        Write Documentation
        ~~~~~~~~~~~~~~~~~~~
        
        eazyserver could always use more documentation, whether as part of the
        official eazyserver docs, in docstrings, or even on the web in blog posts,
        articles, and such.
        
        Submit Feedback
        ~~~~~~~~~~~~~~~
        
        The best way to send feedback is to file an issue at https://github.com/ashutoshdtu/eazyserver/issues.
        
        If you are proposing a feature:
        
        * Explain in detail how it would work.
        * Keep the scope as narrow as possible, to make it easier to implement.
        * Remember that this is a volunteer-driven project, and that contributions
          are welcome :)
        
        Get Started!
        ------------
        
        Ready to contribute? Here's how to set up `eazyserver` for local development.
        
        1. Fork the `eazyserver` repo on GitHub.
        2. Clone your fork locally::
        
            $ git clone git@github.com:your_name_here/eazyserver.git
        
        3. Install your local copy into a virtualenv. Assuming you have virtualenvwrapper installed, this is how you set up your fork for local development::
        
            $ mkvirtualenv eazyserver
            $ cd eazyserver/
            $ python setup.py develop
        
        4. Create a branch for local development::
        
            $ git checkout -b name-of-your-bugfix-or-feature
        
           Now you can make your changes locally.
        
        5. When you're done making changes, check that your changes pass flake8 and the
           tests, including testing other Python versions with tox::
        
            $ flake8 eazyserver tests
            $ python setup.py test or py.test
            $ tox
        
           To get flake8 and tox, just pip install them into your virtualenv.
        
        6. Commit your changes and push your branch to GitHub::
        
            $ git add .
            $ git commit -m "Your detailed description of your changes."
            $ git push origin name-of-your-bugfix-or-feature
        
        7. Submit a pull request through the GitHub website.
        
        Pull Request Guidelines
        -----------------------
        
        Before you submit a pull request, check that it meets these guidelines:
        
        1. The pull request should include tests.
        2. If the pull request adds functionality, the docs should be updated. Put
           your new functionality into a function with a docstring, and add the
           feature to the list in README.rst.
        3. The pull request should work for Python 2.7, 3.4, 3.5 and 3.6, and for PyPy. Check
           https://travis-ci.org/ashutoshdtu/eazyserver/pull_requests
           and make sure that the tests pass for all supported Python versions.
        
        Tips
        ----
        
        To run a subset of tests::
        
        
            $ python -m unittest tests.test_eazyserver
        
        Deploying
        ---------
        
        A reminder for the maintainers on how to deploy.
        Make sure all your changes are committed (including an entry in HISTORY.rst).
        Then run::
        
        $ bumpversion patch # possible: major / minor / patch
        $ git push
        $ git push --tags
        
        Travis will then deploy to PyPI if tests pass.
        
Keywords: eazyserver
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
