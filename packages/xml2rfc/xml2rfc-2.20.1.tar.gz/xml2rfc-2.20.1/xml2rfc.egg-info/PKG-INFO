Metadata-Version: 1.2
Name: xml2rfc
Version: 2.20.1
Summary: Xml2rfc generates RFCs and IETF drafts from document source in XML according to the IETF xml2rfc v2 and v3 vocabularies.
Home-page: https://tools.ietf.org/tools/xml2rfc/trac/
Author: Henrik Levkowetz, Josh Bothun
Author-email: tools-discuss@ietf.org
Maintainer: Henrik Levkowetz
Maintainer-email: henrik@levkowetz.com
License: Simplified BSD Licence
Download-URL: https://pypi.python.org/pypi/xml2rfc
Description: Introduction
        ============
        
        The IETF_ uses a specific format for the standards and other documents it
        publishes as RFCs_, and for the draft documents which are produced when
        developing documents for publications.  There exists a number of different
        tools to facilitate the formatting of drafts and RFCs according to the
        existing rules, and this tool, **xml2rfc**, is one of them.  It takes as input
        an xml file which contains the text and meta-information about author names
        etc., and transforms it into suitably formatted output.  The input xml file
        should follow the grammars in RFC7749_ (for v2 documents) or RFC7991_ (for 
        v3 documents). Note that the grammar for v3 is still being refined, and 
        changes will eventually be captured in the `bis draft for 7991`_. 
        Changes not yet captured can be seen in the xml2rfc source `v3.rng`_.
        
        **xml2rfc** provides a variety of output formats. See the command line
        help for a full list of formats. It also provides conversion from v2 to
        v3, and can run the preptool_ on its input.
        
        .. _IETF: https://www.ietf.org/
        .. _RFCs: https://www.rfc-editor.org/
        .. _RFC7749: https://tools.ietf.org/html/rfc7749
        .. _RFC7991: https://tools.ietf.org/html/rfc7991
        .. _bis draft for 7991: https://tools.ietf.org/html/draft-iab-rfc7991bis
        .. _v3.rng: https://trac.tools.ietf.org/tools/xml2rfc/trac/browser/trunk/cli/xml2rfc/data/v3.rng
        .. _preptool: https://tools.ietf.org/html/rfc7998
        
        Installation
        ============
        
        Installation of the python package is done as usual with 'pip install xml2rfc',
        using appropriate switches and/or sudo.
        
        Installation of support libraries for the PDF-formatter
        -------------------------------------------------------
        
        In order to generate PDFs, xml2rfc uses the WeasyPrint module, which
        depends on external libaries that must be installed as native packages
        on your platform, separately from the xml2rfc install.
        
        First, install the Cairo, Pango, and GDK-PixBuf library files on your
        system.  See installation instructions on the WeasyPrint Docs:
        
            https://weasyprint.readthedocs.io/en/stable/install.html
        
        (Python 3 is not needed if your system Python is 2.7, though).
        
        (On some OS X systems with System Integrity Protection active, you may
        need to create a symlink from your home directory to the library installation
        directory (often /opt/local/lib):
        
            ln -s /opt/local/lib ~/lib
        
        in order for weasyprint to find the installed cairo and pango libraries.
        Whether this is needed or not depends on whether you used macports or homebrew
        to install cairo and pango, and the homebrew / macport version.)
        
        Next, install the pycairo and weasyprint python modules using pip.
        Depending on your system, you may need to use 'sudo' or install in
        user-specific directories, using the --user switch.  On OS X in
        particular, you may also need to install a newer version of setuptools
        using --user before weasyprint can be installed.  If you install with 
        the --user switch, you may need to also set PYTHONPATH, e.g.,
        
            PYTHONPATH=/Users/henrik/Library/Python/2.7/lib/python/site-packages
        
        for Python 2.7.
        
        The basic pip commands (modify as needed according to the text above)
        are:
        
            pip install 'pycairo>=1.18' 'weasyprint<=0.42.3'
        
        With these installed and available to xml2rfc, the --pdf switch will be
        enabled.
        
        For PDF output, you also need to install the Noto font set.  Download the full
        set from https://noto-website-2.storage.googleapis.com/pkgs/Noto-unhinted.zip,
        and install as appropriate for your platform.
        
        Usage
        =====
        
        xml2rfc accepts a single XML document as input and outputs to one or more conversion formats.
        
        **Basic Usage**: ``xml2rfc SOURCE [options] FORMATS...``
        
        Run ``xml2rfc --help`` for a full listing of command-line options.
        
        
        Changelog
        =========
        
        
        Version 2.20.1 (27 Feb 2019)
        ------------------------------------------------
        
        
          * Handle initials==Null return value from short_author_name_parts().  
            Fixes issue #397
        
        
        
        
        
        
        
        Version 2.20.0 (26 Feb 2019)
        ------------------------------------------------
        
        
          This release changes the rendering of <xref> elements with text content by
          v3 formatters, and reintroduces <xref format="none"> under v3 in order to
          properly cover the combinatorial space of rendering of <xref> with and
          without text content.  It fixes a number of issues, including a somewhat
          unexpected issue with namespace normalization, and improves the rendering
          output in some edge cases.  More details from the commit log:
        
          * Removed namespace cleanup and normalisation during the v2v3 conversion, as
            it can have negative effects for inlined <svg> when the SVG namespace is
            specified in multiple places.
        
          * Changed handling of reference//author entries with fullname but without
            initials and surname in order to derive those the same way for references
            as it's done in other places.
        
          * Dropped support for Py34.  Support is now Py27 (untill end 2019), and
            Python 3.5 - 3.7.
        
          * Tweaked the CSS for bcp14 keyword elements.
        
          * Fixed a problem where a temporary valuable name stomped on a 
            method-wide name.
        
          * Fixed a problem where <xref> "relative" attributes were treated as 
            fragment identifiers instead of as relative URL paths.
        
          * Improved the placeholder text emitted by the v3 text renderer for 
            artwork without ascii-art.
        
          * Removed stripping of the now (again) functional <xref> format value "none"
            from the v2v3 converter.
        
          * Tweaked the rendering of <xref> having both derivedContent (section
            information, for instance) and text content, to generate hyperlinks to the
            xref target for both of them.  Simplified the html renderer by eliminating
            extra code for <relref>, now covered by the generic <xref> code.
        
          * Fixed a problem with a missing hash character between path and fragment 
            identifiers in derivedLink generation.
        
          * Added a conversion of <relref> elements to the generic <xref> form to 
            preptool.  Tweaked a debug print statement.
        
          * Added An SVG diagram of the processing flow for v2 and v3 documents, used
            by xml2rfc3.rst, to doc/
        
          * Added an rST-formatted Introduction to xml2rfc version 3 to doc/
        
        
        
        
        
        
        
        Version 2.19.1 (16 Feb 2019)
        ------------------------------------------------
        
        
          This is a small bugfix release.  From the commit log:
        
          * Removed some linux-specific code.
        
          * Fixed a problem with the handling of comments and PIs inside text 
            blocks.
        
        
        
        
        
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python
Classifier: Topic :: Text Processing
Classifier: Topic :: Text Processing :: Markup :: XML
Classifier: License :: OSI Approved :: BSD License
