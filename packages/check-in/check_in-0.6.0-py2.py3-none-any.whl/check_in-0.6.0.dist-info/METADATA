Metadata-Version: 2.1
Name: check-in
Version: 0.6.0
Summary: CLI for publishing check runs info via GitHub Checks API
Home-page: https://github.com/webknjaz/check-in
Author: Sviatoslav Sydorenko
Author-email: wk+github-open-source@sydorenko.org.ua
License: MIT
Project-URL: CI: Travis, https://travis-ci.com/webknjaz/check-in
Project-URL: GitHub: repo, https://github.com/webknjaz/check-in
Project-URL: GitHub: issues, https://github.com/webknjaz/check-in/issues
Keywords: CLI,tool,API,client,GitHub,Checks API,CI
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Testing
Requires-Python: >=3.6
Requires-Dist: attrs
Requires-Dist: click
Requires-Dist: envparse
Requires-Dist: pygithub[integrations]

.. image:: https://img.shields.io/pypi/v/check-in.svg
   :target: https://pypi.org/p/check-in

.. image:: https://travis-ci.com/webknjaz/check-in.svg?branch=master
   :align: right
   :target: http://travis-ci.com/webknjaz/check-in

check-in
========

It's a CLI tool for sending external commit examination info to GitHub
using Checks API on behalf of a GitHub App (bot context).


Defaults
--------
You can specify some default CLI option values via env vars. The tool also
supports dotenv concept. See example in ``.env.example``.


Missing parts
-------------
``check-in`` does some inputs validation, but it's not perfect. For example,
datetime args are strings accepted as is. This is likely to change in future,
but don't rely on it now.


