Metadata-Version: 2.1
Name: birdbrain
Version: 0.1.0
Summary: Tools for using the songbird brain atlas
Home-page: https://github.com/timsainb/birdbrain
Author: Tim Sainburg
License: BSD-3
Description: birdbrain
        ==============================
        
        Tim Sainburg
        
        Work in progress.
        
        This is a small library for viewing the songbird brain atlas' at https://www.uantwerpen.be/en/rg/bioimaging-lab/research/mri-atlases/starling-brain-atlas/ 
        
        
        - TODO
          - fix colormap error where adjacent nuclei will be labelled with the same color (e.g. NCM and field L)
          - update package to work with other atlas'
          - generate STL files from brain images
          - pip installable
          - binder notebooks
          - proposed updated y-sinus differs from actual updated y-sinus - this appears to have to do with laterality flipping...
        
        
        Project Organization
        ------------
        
            ├── LICENSE
            ├── Makefile           <- Makefile with commands like `make data` or `make train`
            ├── README.md          <- The top-level README for developers using this project.
            ├── data
            │   ├── external       <- Data from third party sources.
            │   ├── interim        <- Intermediate data that has been transformed.
            │   ├── processed      <- The final, canonical data sets for modeling.
            │   └── raw            <- The original, immutable data dump.
            │
            ├── docs               <- A default Sphinx project; see sphinx-doc.org for details
            │
            ├── models             <- Trained and serialized models, model predictions, or model summaries
            │
            ├── notebooks          <- Jupyter notebooks. Naming convention is a number (for ordering),
            │                         the creator's initials, and a short `-` delimited description, e.g.
            │                         `1.0-jqp-initial-data-exploration`.
            │
            ├── references         <- Data dictionaries, manuals, and all other explanatory materials.
            │
            ├── reports            <- Generated analysis as HTML, PDF, LaTeX, etc.
            │   └── figures        <- Generated graphics and figures to be used in reporting
            │
            ├── requirements.txt   <- The requirements file for reproducing the analysis environment, e.g.
            │                         generated with `pip freeze > requirements.txt`
            │
            ├── setup.py           <- makes project pip installable (pip install -e .) so src can be imported
            ├── src                <- Source code for use in this project.
            │   ├── __init__.py    <- Makes src a Python module
            │   │
            │   ├── data           <- Scripts to download or generate data
            │   │   └── make_dataset.py
            │   │
            │   ├── features       <- Scripts to turn raw data into features for modeling
            │   │   └── build_features.py
            │   │
            │   ├── models         <- Scripts to train models and then use trained models to make
            │   │   │                 predictions
            │   │   ├── predict_model.py
            │   │   └── train_model.py
            │   │
            │   └── visualization  <- Scripts to create exploratory and results oriented visualizations
            │       └── visualize.py
            │
            └── tox.ini            <- tox file with settings for running tox; see tox.testrun.org
        
        
        --------
        
        <p><small>Project based on the <a target="_blank" href="https://drivendata.github.io/cookiecutter-data-science/">cookiecutter data science project template</a>. #cookiecutterdatascience</small></p>
        
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
