# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class MicrosoftPartnerSdkContractsV1CountryValidationRules(Model):
    """Describes the address formatting rules for a country/region.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :param iso2_code: Gets or sets the ISO2 code.
    :type iso2_code: str
    :param default_culture: Gets or sets the default culture.
    :type default_culture: str
    :param is_state_required: Gets or sets a value indicating whether the
     state/province is required.
    :type is_state_required: bool
    :param supported_states_list: Gets or sets a list of states/provinces for
     the country/region.
    :type supported_states_list: list[str]
    :param supported_languages_list: Gets or sets a list of supported
     languages.
    :type supported_languages_list: list[str]
    :param supported_cultures_list: Gets or sets a list of supported cultures.
    :type supported_cultures_list: list[str]
    :param is_postal_code_required: Gets or sets a value indicating whether a
     postal code is required or not.
    :type is_postal_code_required: bool
    :param postal_code_regex: Gets or sets a regular expression that defines
     the ZIP/postal code.
    :type postal_code_regex: str
    :param is_city_required: Gets or sets a value indicating whether a city is
     required or not.
    :type is_city_required: bool
    :param is_vat_id_supported: Gets or sets a value indicating whether a VAT
     ID is required or not.
    :type is_vat_id_supported: bool
    :param tax_id_format: Gets or sets the tax ID format.
    :type tax_id_format: str
    :param tax_id_sample: Gets or sets the tax ID sample.
    :type tax_id_sample: str
    :param vat_id_regex: Gets or sets the tax ID regular expression.
    :type vat_id_regex: str
    :param phone_number_regex: Gets or sets the phone number regular
     expression.
    :type phone_number_regex: str
    :param is_tax_id_supported: Gets or sets a value indicating whether a tax
     ID is supported or not. Note that this is different than IsVatIdSupported.
    :type is_tax_id_supported: bool
    :param is_tax_id_optional: Gets or sets a value indicating whether a tax
     ID is optional or not.
    :type is_tax_id_optional: bool
    :param country_calling_codes_list: Gets or sets the calling codes
     supported in the country/region.
    :type country_calling_codes_list: list[str]
    :ivar attributes: Gets the attributes.
    :vartype attributes:
     ~microsoft.store.partnercenterservices.models.MicrosoftPartnerSdkContractsV1CommonResourceAttributes
    """

    _validation = {
        'attributes': {'readonly': True},
    }

    _attribute_map = {
        'iso2_code': {'key': 'iso2Code', 'type': 'str'},
        'default_culture': {'key': 'defaultCulture', 'type': 'str'},
        'is_state_required': {'key': 'isStateRequired', 'type': 'bool'},
        'supported_states_list': {'key': 'supportedStatesList', 'type': '[str]'},
        'supported_languages_list': {'key': 'supportedLanguagesList', 'type': '[str]'},
        'supported_cultures_list': {'key': 'supportedCulturesList', 'type': '[str]'},
        'is_postal_code_required': {'key': 'isPostalCodeRequired', 'type': 'bool'},
        'postal_code_regex': {'key': 'postalCodeRegex', 'type': 'str'},
        'is_city_required': {'key': 'isCityRequired', 'type': 'bool'},
        'is_vat_id_supported': {'key': 'isVatIdSupported', 'type': 'bool'},
        'tax_id_format': {'key': 'taxIdFormat', 'type': 'str'},
        'tax_id_sample': {'key': 'taxIdSample', 'type': 'str'},
        'vat_id_regex': {'key': 'vatIdRegex', 'type': 'str'},
        'phone_number_regex': {'key': 'phoneNumberRegex', 'type': 'str'},
        'is_tax_id_supported': {'key': 'isTaxIdSupported', 'type': 'bool'},
        'is_tax_id_optional': {'key': 'isTaxIdOptional', 'type': 'bool'},
        'country_calling_codes_list': {'key': 'countryCallingCodesList', 'type': '[str]'},
        'attributes': {'key': 'attributes', 'type': 'MicrosoftPartnerSdkContractsV1CommonResourceAttributes'},
    }

    def __init__(self, iso2_code=None, default_culture=None, is_state_required=None, supported_states_list=None, supported_languages_list=None, supported_cultures_list=None, is_postal_code_required=None, postal_code_regex=None, is_city_required=None, is_vat_id_supported=None, tax_id_format=None, tax_id_sample=None, vat_id_regex=None, phone_number_regex=None, is_tax_id_supported=None, is_tax_id_optional=None, country_calling_codes_list=None):
        super(MicrosoftPartnerSdkContractsV1CountryValidationRules, self).__init__()
        self.iso2_code = iso2_code
        self.default_culture = default_culture
        self.is_state_required = is_state_required
        self.supported_states_list = supported_states_list
        self.supported_languages_list = supported_languages_list
        self.supported_cultures_list = supported_cultures_list
        self.is_postal_code_required = is_postal_code_required
        self.postal_code_regex = postal_code_regex
        self.is_city_required = is_city_required
        self.is_vat_id_supported = is_vat_id_supported
        self.tax_id_format = tax_id_format
        self.tax_id_sample = tax_id_sample
        self.vat_id_regex = vat_id_regex
        self.phone_number_regex = phone_number_regex
        self.is_tax_id_supported = is_tax_id_supported
        self.is_tax_id_optional = is_tax_id_optional
        self.country_calling_codes_list = country_calling_codes_list
        self.attributes = None
