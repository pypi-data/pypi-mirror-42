'''
Created on 09.01.2019

@author: LK
'''

if __name__ == '__main__':
    pass

import PyTrinamic
from PyTrinamic.connections.serial_tmcl_interface import serial_tmcl_interface
from PyTrinamic.evalboards.TMC4671_eval import TMC4671_eval
from PyTrinamic.ic.TMC4671.TMC4671_register import TMC4671_register
from PyTrinamic.ic.TMC4671.TMC4671_mask_shift import TMC4671_mask_shift

PyTrinamic.showInfo()
PyTrinamic.showAvailableComPorts()

myInterface = serial_tmcl_interface('COM5')
tmc4671_eval = TMC4671_eval(myInterface)
tmc4671_eval.showChipInfo()

tmc4671_reg = TMC4671_register()
tmc4671_ms = TMC4671_mask_shift()

print("CHIPINFO_DATA: ")
print(myInterface.readMC(tmc4671_reg.CHIPINFO_DATA).value)
print("CHIPINFO_ADDR: ")
print(myInterface.readMC(tmc4671_reg.CHIPINFO_ADDR).value)
print("ADC_RAW_DATA: ")
print(myInterface.readMC(tmc4671_reg.ADC_RAW_DATA).value)
print("ADC_RAW_ADDR: ")
print(myInterface.readMC(tmc4671_reg.ADC_RAW_ADDR).value)
print("dsADC_MCFG_B_MCFG_A: ")
print(myInterface.readMC(tmc4671_reg.dsADC_MCFG_B_MCFG_A).value)
print("dsADC_MCLK_A: ")
print(myInterface.readMC(tmc4671_reg.dsADC_MCLK_A).value)
print("dsADC_MCLK_B: ")
print(myInterface.readMC(tmc4671_reg.dsADC_MCLK_B).value)
print("dsADC_MDEC_B_MDEC_A: ")
print(myInterface.readMC(tmc4671_reg.dsADC_MDEC_B_MDEC_A).value)
print("ADC_I1_SCALE_OFFSET: ")
print(myInterface.readMC(tmc4671_reg.ADC_I1_SCALE_OFFSET).value)
print("ADC_I0_SCALE_OFFSET: ")
print(myInterface.readMC(tmc4671_reg.ADC_I0_SCALE_OFFSET).value)
print("ADC_I_SELECT: ")
print(myInterface.readMC(tmc4671_reg.ADC_I_SELECT).value)
print("ADC_I1_I0_EXT: ")
print(myInterface.readMC(tmc4671_reg.ADC_I1_I0_EXT).value)
print("DS_ANALOG_INPUT_STAGE_CFG: ")
print(myInterface.readMC(tmc4671_reg.DS_ANALOG_INPUT_STAGE_CFG).value)
print("AENC_0_SCALE_OFFSET: ")
print(myInterface.readMC(tmc4671_reg.AENC_0_SCALE_OFFSET).value)
print("AENC_1_SCALE_OFFSET: ")
print(myInterface.readMC(tmc4671_reg.AENC_1_SCALE_OFFSET).value)
print("AENC_2_SCALE_OFFSET: ")
print(myInterface.readMC(tmc4671_reg.AENC_2_SCALE_OFFSET).value)
print("AENC_SELECT: ")
print(myInterface.readMC(tmc4671_reg.AENC_SELECT).value)
print("ADC_IWY_IUX: ")
print(myInterface.readMC(tmc4671_reg.ADC_IWY_IUX).value)
print("ADC_IV: ")
print(myInterface.readMC(tmc4671_reg.ADC_IV).value)
print("AENC_WY_UX: ")
print(myInterface.readMC(tmc4671_reg.AENC_WY_UX).value)
print("AENC_VN: ")
print(myInterface.readMC(tmc4671_reg.AENC_VN).value)
print("PWM_POLARITIES: ")
print(myInterface.readMC(tmc4671_reg.PWM_POLARITIES).value)
print("PWM_MAXCNT: ")
print(myInterface.readMC(tmc4671_reg.PWM_MAXCNT).value)
print("PWM_BBM_H_BBM_L: ")
print(myInterface.readMC(tmc4671_reg.PWM_BBM_H_BBM_L).value)
print("PWM_SV_CHOP: ")
print(myInterface.readMC(tmc4671_reg.PWM_SV_CHOP).value)
print("MOTOR_TYPE_N_POLE_PAIRS: ")
print(myInterface.readMC(tmc4671_reg.MOTOR_TYPE_N_POLE_PAIRS).value)
print("PHI_E_EXT: ")
print(myInterface.readMC(tmc4671_reg.PHI_E_EXT).value)
print("PHI_M_EXT: ")
print(myInterface.readMC(tmc4671_reg.PHI_M_EXT).value)
print("POSITION_EXT: ")
print(myInterface.readMC(tmc4671_reg.POSITION_EXT).value)
print("OPENLOOP_MODE: ")
print(myInterface.readMC(tmc4671_reg.OPENLOOP_MODE).value)
print("OPENLOOP_ACCELERATION: ")
print(myInterface.readMC(tmc4671_reg.OPENLOOP_ACCELERATION).value)
print("OPENLOOP_VELOCITY_TARGET: ")
print(myInterface.readMC(tmc4671_reg.OPENLOOP_VELOCITY_TARGET).value)
print("OPENLOOP_VELOCITY_ACTUAL: ")
print(myInterface.readMC(tmc4671_reg.OPENLOOP_VELOCITY_ACTUAL).value)
print("OPENLOOP_PHI: ")
print(myInterface.readMC(tmc4671_reg.OPENLOOP_PHI).value)
print("UQ_UD_EXT: ")
print(myInterface.readMC(tmc4671_reg.UQ_UD_EXT).value)
print("ABN_DECODER_MODE: ")
print(myInterface.readMC(tmc4671_reg.ABN_DECODER_MODE).value)
print("ABN_DECODER_PPR: ")
print(myInterface.readMC(tmc4671_reg.ABN_DECODER_PPR).value)
print("ABN_DECODER_COUNT: ")
print(myInterface.readMC(tmc4671_reg.ABN_DECODER_COUNT).value)
print("ABN_DECODER_COUNT_N: ")
print(myInterface.readMC(tmc4671_reg.ABN_DECODER_COUNT_N).value)
print("ABN_DECODER_PHI_E_PHI_M_OFFSET: ")
print(myInterface.readMC(tmc4671_reg.ABN_DECODER_PHI_E_PHI_M_OFFSET).value)
print("ABN_DECODER_PHI_E_PHI_M: ")
print(myInterface.readMC(tmc4671_reg.ABN_DECODER_PHI_E_PHI_M).value)
print("ABN_2_DECODER_MODE: ")
print(myInterface.readMC(tmc4671_reg.ABN_2_DECODER_MODE).value)
print("ABN_2_DECODER_PPR: ")
print(myInterface.readMC(tmc4671_reg.ABN_2_DECODER_PPR).value)
print("ABN_2_DECODER_COUNT: ")
print(myInterface.readMC(tmc4671_reg.ABN_2_DECODER_COUNT).value)
print("ABN_2_DECODER_COUNT_N: ")
print(myInterface.readMC(tmc4671_reg.ABN_2_DECODER_COUNT_N).value)
print("ABN_2_DECODER_PHI_M_OFFSET: ")
print(myInterface.readMC(tmc4671_reg.ABN_2_DECODER_PHI_M_OFFSET).value)
print("ABN_2_DECODER_PHI_M: ")
print(myInterface.readMC(tmc4671_reg.ABN_2_DECODER_PHI_M).value)
print("HALL_MODE: ")
print(myInterface.readMC(tmc4671_reg.HALL_MODE).value)
print("HALL_POSITION_060_000: ")
print(myInterface.readMC(tmc4671_reg.HALL_POSITION_060_000).value)
print("HALL_POSITION_180_120: ")
print(myInterface.readMC(tmc4671_reg.HALL_POSITION_180_120).value)
print("HALL_POSITION_300_240: ")
print(myInterface.readMC(tmc4671_reg.HALL_POSITION_300_240).value)
print("HALL_PHI_E_PHI_M_OFFSET: ")
print(myInterface.readMC(tmc4671_reg.HALL_PHI_E_PHI_M_OFFSET).value)
print("HALL_DPHI_MAX: ")
print(myInterface.readMC(tmc4671_reg.HALL_DPHI_MAX).value)
print("HALL_PHI_E_INTERPOLATED_PHI_E: ")
print(myInterface.readMC(tmc4671_reg.HALL_PHI_E_INTERPOLATED_PHI_E).value)
print("HALL_PHI_M: ")
print(myInterface.readMC(tmc4671_reg.HALL_PHI_M).value)
print("AENC_DECODER_MODE: ")
print(myInterface.readMC(tmc4671_reg.AENC_DECODER_MODE).value)
print("AENC_DECODER_N_MASK_N_THRESHOLD: ")
print(myInterface.readMC(tmc4671_reg.AENC_DECODER_N_MASK_N_THRESHOLD).value)
print("AENC_DECODER_PHI_A_RAW: ")
print(myInterface.readMC(tmc4671_reg.AENC_DECODER_PHI_A_RAW).value)
print("AENC_DECODER_PHI_A_OFFSET: ")
print(myInterface.readMC(tmc4671_reg.AENC_DECODER_PHI_A_OFFSET).value)
print("AENC_DECODER_PHI_A: ")
print(myInterface.readMC(tmc4671_reg.AENC_DECODER_PHI_A).value)
print("AENC_DECODER_PPR: ")
print(myInterface.readMC(tmc4671_reg.AENC_DECODER_PPR).value)
print("AENC_DECODER_COUNT: ")
print(myInterface.readMC(tmc4671_reg.AENC_DECODER_COUNT).value)
print("AENC_DECODER_COUNT_N: ")
print(myInterface.readMC(tmc4671_reg.AENC_DECODER_COUNT_N).value)
print("AENC_DECODER_PHI_E_PHI_M_OFFSET: ")
print(myInterface.readMC(tmc4671_reg.AENC_DECODER_PHI_E_PHI_M_OFFSET).value)
print("AENC_DECODER_PHI_E_PHI_M: ")
print(myInterface.readMC(tmc4671_reg.AENC_DECODER_PHI_E_PHI_M).value)
print("AENC_DECODER_POSITION: ")
print(myInterface.readMC(tmc4671_reg.AENC_DECODER_POSITION).value)
print("PIDIN_TORQUE_TARGET_FLUX_TARGET: ")
print(myInterface.readMC(tmc4671_reg.PIDIN_TORQUE_TARGET_FLUX_TARGET).value)
print("PIDIN_VELOCITY_TARGET: ")
print(myInterface.readMC(tmc4671_reg.PIDIN_VELOCITY_TARGET).value)
print("PIDIN_POSITION_TARGET: ")
print(myInterface.readMC(tmc4671_reg.PIDIN_POSITION_TARGET).value)
print("CONFIG_DATA: ")
print(myInterface.readMC(tmc4671_reg.CONFIG_DATA).value)
print("CONFIG_ADDR: ")
print(myInterface.readMC(tmc4671_reg.CONFIG_ADDR).value)
print("VELOCITY_SELECTION: ")
print(myInterface.readMC(tmc4671_reg.VELOCITY_SELECTION).value)
print("POSITION_SELECTION: ")
print(myInterface.readMC(tmc4671_reg.POSITION_SELECTION).value)
print("PHI_E_SELECTION: ")
print(myInterface.readMC(tmc4671_reg.PHI_E_SELECTION).value)
print("PHI_E: ")
print(myInterface.readMC(tmc4671_reg.PHI_E).value)
print("PID_FLUX_P_FLUX_I: ")
print(myInterface.readMC(tmc4671_reg.PID_FLUX_P_FLUX_I).value)
print("PID_TORQUE_P_TORQUE_I: ")
print(myInterface.readMC(tmc4671_reg.PID_TORQUE_P_TORQUE_I).value)
print("PID_VELOCITY_P_VELOCITY_I: ")
print(myInterface.readMC(tmc4671_reg.PID_VELOCITY_P_VELOCITY_I).value)
print("PID_POSITION_P_POSITION_I: ")
print(myInterface.readMC(tmc4671_reg.PID_POSITION_P_POSITION_I).value)
print("PID_TORQUE_FLUX_TARGET_DDT_LIMITS: ")
print(myInterface.readMC(tmc4671_reg.PID_TORQUE_FLUX_TARGET_DDT_LIMITS).value)
print("PIDOUT_UQ_UD_LIMITS: ")
print(myInterface.readMC(tmc4671_reg.PIDOUT_UQ_UD_LIMITS).value)
print("PID_TORQUE_FLUX_LIMITS: ")
print(myInterface.readMC(tmc4671_reg.PID_TORQUE_FLUX_LIMITS).value)
print("PID_ACCELERATION_LIMIT: ")
print(myInterface.readMC(tmc4671_reg.PID_ACCELERATION_LIMIT).value)
print("PID_VELOCITY_LIMIT: ")
print(myInterface.readMC(tmc4671_reg.PID_VELOCITY_LIMIT).value)
print("PID_POSITION_LIMIT_LOW: ")
print(myInterface.readMC(tmc4671_reg.PID_POSITION_LIMIT_LOW).value)
print("POSITION_LIMIT_HIGH: ")
print(myInterface.readMC(tmc4671_reg.POSITION_LIMIT_HIGH).value)
print("MODE_RAMP_MODE_MOTION: ")
print(myInterface.readMC(tmc4671_reg.MODE_RAMP_MODE_MOTION).value)
print("PID_TORQUE_FLUX_TARGET: ")
print(myInterface.readMC(tmc4671_reg.PID_TORQUE_FLUX_TARGET).value)
print("PID_TORQUE_FLUX_OFFSET: ")
print(myInterface.readMC(tmc4671_reg.PID_TORQUE_FLUX_OFFSET).value)
print("PID_VELOCITY_TARGET: ")
print(myInterface.readMC(tmc4671_reg.PID_VELOCITY_TARGET).value)
print("PID_VELOCITY_OFFSET: ")
print(myInterface.readMC(tmc4671_reg.PID_VELOCITY_OFFSET).value)
print("PID_POSITION_TARGET: ")
print(myInterface.readMC(tmc4671_reg.PID_POSITION_TARGET).value)
print("PID_TORQUE_FLUX_ACTUAL: ")
print(myInterface.readMC(tmc4671_reg.PID_TORQUE_FLUX_ACTUAL).value)
print("PID_VELOCITY_ACTUAL: ")
print(myInterface.readMC(tmc4671_reg.PID_VELOCITY_ACTUAL).value)
print("PID_POSITION_ACTUAL: ")
print(myInterface.readMC(tmc4671_reg.PID_POSITION_ACTUAL).value)
print("PID_ERROR_DATA: ")
print(myInterface.readMC(tmc4671_reg.PID_ERROR_DATA).value)
print("PID_ERROR_ADDR: ")
print(myInterface.readMC(tmc4671_reg.PID_ERROR_ADDR).value)
print("INTERIM_DATA: ")
print(myInterface.readMC(tmc4671_reg.INTERIM_DATA).value)
print("INTERIM_ADDR: ")
print(myInterface.readMC(tmc4671_reg.INTERIM_ADDR).value)
print("WATCHDOG_CFG: ")
print(myInterface.readMC(tmc4671_reg.WATCHDOG_CFG).value)
print("ADC_VM_LIMITS: ")
print(myInterface.readMC(tmc4671_reg.ADC_VM_LIMITS).value)
print("INPUTS_RAW: ")
print(myInterface.readMC(tmc4671_reg.INPUTS_RAW).value)
print("OUTPUTS_RAW: ")
print(myInterface.readMC(tmc4671_reg.OUTPUTS_RAW).value)
print("STEP_WIDTH: ")
print(myInterface.readMC(tmc4671_reg.STEP_WIDTH).value)
print("UART_BPS: ")
print(myInterface.readMC(tmc4671_reg.UART_BPS).value)
print("UART_ADDRS: ")
print(myInterface.readMC(tmc4671_reg.UART_ADDRS).value)
print("GPIO_dsADCI_CONFIG: ")
print(myInterface.readMC(tmc4671_reg.GPIO_dsADCI_CONFIG).value)
print("STATUS_FLAGS: ")
print(myInterface.readMC(tmc4671_reg.STATUS_FLAGS).value)
print("STATUS_MASK: ")
print(myInterface.readMC(tmc4671_reg.STATUS_MASK).value)

" unpower "
print("unpowered...")
myInterface.writeMC(tmc4671_reg.UQ_UD_EXT, 0)

myInterface.close()