Metadata-Version: 1.1
Name: ssh-docker
Version: 1.2.2
Summary: A small convenience command to interactively deal with containers running remotely.
Home-page: UNKNOWN
Author: Simon Coulton
Author-email: simon@bespohk.com
License: Copyright (c) 2018-2019 Bespohk, and is maintained by multiple
contributors including:

	- Simon Coulton <simon@bespohk.com>

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

Description: sshdocker
        =========
        
        An interactive shell for remotely connecting to docker containers over SSH.
        
        .. image:: assets/howitworks.gif
        
        This was primarily built to help when dealing with the names given to containers in ECS, but can be used anywhere.
        
        Installation
        ------------
        
        ::
        
            $ pip install ssh-docker
        
        Usage
        -----
        
        ::
        
            $ ssh-docker <hostname>
        
        This will open up an interactive shell (similar to how Supervisor works) allowing you to directly query / perform actions on the containers within the host.
        
        You can then list all containers running on the host via the following:
        
        ::
        
            > list
        
        Connecting to a container is as simple as using the ``connect`` command.
        
        ::
        
            > connect
        
        This will list out all of the available containers on the host, which you can then choose to connect to a specific one by entering the number of the container.
        
        If you already know the name of the container you can also specify that in the command.
        
        ::
        
            > connect name_of_container
        
        By default it will attempt to run the bash shell when connecting, you can change this on a per run basis (or globally via the SSH_DOCKER_SHELL environment variable) if required:
        
        ::
        
            > connect name_of_container /bin/ash
        
        Connecting to a container will also print out the ssh command required to connect so you can share it with people who are not running ssh-docker.
        
        Running arbitrary docker commands
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        You may want to run any of the available Docker commands on the server you're connected to. You can do this via the ``docker`` command:
        
        ::
        
            > docker [command]
        
        Additional Tips
        ---------------
        
        Hostname autocompletion
        ~~~~~~~~~~~~~~~~~~~~~~~
        
        If the first attempt to connect to a hostname fails, it will attempt to find similar hostnames from your ssh config and suggest them to you.
        
        Autocomplete
        ~~~~~~~~~~~~
        
        If you'd like to enable autocomplete in ZSH, you can add the following to your ``~/.zshrc`` file:
        
        ::
        
            eval "$(_SSH_DOCKER_COMPLETE=source_zsh ssh-docker)"
        
        By entering ``ssh-docker [TAB]`` you will be able to cycle through all hostnames in your SSH config file.
        
Keywords: docker,python3,ssh,cli
Platform: Python 3.7
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.7
