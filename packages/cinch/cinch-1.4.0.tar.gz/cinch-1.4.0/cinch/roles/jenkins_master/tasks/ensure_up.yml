- name: check for running in a container
  set_fact:
    _listening_port: "{{ https_enabled | ternary(8443, 8080) }}"
  when: ansible_connection == 'docker'
  tags:
    - jenkins_check_mode

- name: discover valid hostname for containers
  set_fact:
    _jenkins_host: 'localhost'
  when: ansible_connection == 'docker' or ansible_connection == 'local'
  tags:
    - jenkins_check_mode

- name: discover valid hostname
  set_fact:
    _jenkins_host: "{{ ansible_host | default(inventory_hostname | default('localhost')) }}"
  when: ansible_connection != 'docker' and ansible_connection != 'local'
  tags:
    - jenkins_check_mode

- name: construct Jenkins URL
  set_fact:
    _jenkins_url: "http{{ https_enabled | ternary('s', '') }}://{{ _jenkins_host }}"
  tags:
    - jenkins_check_mode

- name: modify Jenkins URL for non-standard ports
  set_fact:
    _jenkins_url: "{{ _jenkins_url }}:{{ _listening_port }}"
  when: _listening_port is defined
  tags:
    - jenkins_check_mode

- name: wait for Jenkins to start up
  become: false
  uri:
    url: "{{ _jenkins_url }}"
    status_code: 200,401
    timeout: 5
    validate_certs: false
  register: jenkins_status
  retries: 30
  delay: 15
  until: >-
    'status' in jenkins_status and
    (jenkins_status['status'] == 200 or jenkins_status['status'] == 401)

# Newer Jenkins versions require the -remoting flag to allow the Jenkins CLI to
# be available in the way that we use it currently. The 'X-Jenkins' response
# header gives us the current version.
# https://jenkins.io/doc/book/managing/cli/#remoting-connection-mode
- name: check Jenkins version for -remoting flag
  set_fact:
    jenkins_cli_remoting: "{{ jenkins_status.x_jenkins is version_compare('2.46.2', '>=') }}"

- name: copy jenkins-jar file to readable place
  become: true
  copy:
    src: "{{ jenkins_cli_jar_src }}"
    dest: "{{ jenkins_cli_jar }}"
    remote_src: true
    owner: "{{ jenkins_cli_shell_user }}"
    mode: 0600

- name: get user api key
  jenkins_user_api:
    user: "{{ jenkins_admin.nickname }}"
    remoting: "{{ jenkins_cli_remoting }}"
    cli_jar: "{{ jenkins_cli_jar }}"
  register: jenkins_admin_api_key
  become: true
  become_user: "{{ jenkins_cli_shell_user }}"
  retries: "{{ jenkins_user_api_retries }}"
  delay: 6
  until: jenkins_admin_api_key.api_key

- name: delete jenkins-cli file
  become: true
  file:
    dest: "{{ jenkins_cli_jar }}"
    state: absent

- name: save API key
  set_fact:
    admin_api_key: "{{ jenkins_admin_api_key.api_key }}"
