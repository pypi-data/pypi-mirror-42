{"remainingRequest":"/home/leonardo/proyectos/dashboard/incubator-superset/superset/assets/node_modules/thread-loader/dist/cjs.js??ref--5-1!/home/leonardo/proyectos/dashboard/incubator-superset/superset/assets/node_modules/ts-loader/index.js??ref--5-2!/home/leonardo/proyectos/dashboard/incubator-superset/superset/assets/src/featureFlags.ts","dependencies":[{"path":"/home/leonardo/proyectos/dashboard/incubator-superset/superset/assets/src/featureFlags.ts","mtime":1547932799233},{"path":"/home/leonardo/proyectos/dashboard/incubator-superset/superset/assets/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/leonardo/proyectos/dashboard/incubator-superset/superset/assets/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/leonardo/proyectos/dashboard/incubator-superset/superset/assets/node_modules/ts-loader/index.js","mtime":1543302582000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// We can codegen the enum definition based on a list of supported flags that we\n// check into source control. We're hardcoding the supported flags for now.\nvar FeatureFlag;\n(function (FeatureFlag) {\n    FeatureFlag[\"SCOPED_FILTER\"] = \"SCOPED_FILTER\";\n})(FeatureFlag = exports.FeatureFlag || (exports.FeatureFlag = {}));\nfunction initFeatureFlags(featureFlags) {\n    window.featureFlags = featureFlags || {};\n}\nexports.initFeatureFlags = initFeatureFlags;\nfunction isFeatureEnabled(feature) {\n    return !!window.featureFlags[feature];\n}\nexports.isFeatureEnabled = isFeatureEnabled;\n",{"version":3,"file":"/home/leonardo/proyectos/dashboard/incubator-superset/superset/assets/src/featureFlags.ts","sourceRoot":"","sources":["/home/leonardo/proyectos/dashboard/incubator-superset/superset/assets/src/featureFlags.ts"],"names":[],"mappings":";;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,IAAY,WAEX;AAFD,WAAY,WAAW;IACrB,8CAA+B,CAAA;AACjC,CAAC,EAFW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAEtB;AAYD,SAAgB,gBAAgB,CAAC,YAA4B;IAC3D,MAAM,CAAC,YAAY,GAAG,YAAY,IAAI,EAAE,CAAC;AAC3C,CAAC;AAFD,4CAEC;AAED,SAAgB,gBAAgB,CAAC,OAAoB;IACnD,OAAO,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AACxC,CAAC;AAFD,4CAEC","sourcesContent":["// We can codegen the enum definition based on a list of supported flags that we\n// check into source control. We're hardcoding the supported flags for now.\nexport enum FeatureFlag {\n  SCOPED_FILTER = 'SCOPED_FILTER',\n}\n\nexport type FeatureFlagMap = {\n  [key in FeatureFlag]?: boolean;\n};\n\ndeclare global {\n  interface Window {\n    featureFlags: FeatureFlagMap;\n  }\n}\n\nexport function initFeatureFlags(featureFlags: FeatureFlagMap) {\n  window.featureFlags = featureFlags || {};\n}\n\nexport function isFeatureEnabled(feature: FeatureFlag) {\n  return !!window.featureFlags[feature];\n}\n"]}]}