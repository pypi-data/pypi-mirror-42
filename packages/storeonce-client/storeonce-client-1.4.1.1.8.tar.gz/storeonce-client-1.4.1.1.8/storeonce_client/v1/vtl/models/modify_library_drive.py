# coding: utf-8

"""
    (C) Copyright 2018-2019 Hewlett Packard Enterprise Development LP

    VTL

    unused  # noqa: E501

    Component version: 3.1.8-SNAPSHOT
"""


import pprint
import re  # noqa: F401

import six


class ModifyLibraryDrive(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'num_drives': 'int'
    }

    attribute_map = {
        'num_drives': 'numDrives'
    }

    def __init__(self, num_drives=None):  # noqa: E501
        """ModifyLibraryDrive - a model defined in Swagger"""  # noqa: E501

        self._num_drives = None
        self.discriminator = None

        if num_drives is not None:
            self.num_drives = num_drives

    @property
    def num_drives(self):
        """Gets the num_drives of this ModifyLibraryDrive.  # noqa: E501

        Number of drives in the library. If modified to less than original value, drives will be removed in reverse order. If modified to more than original value, drives will be added, using appropriate defaults for the library  # noqa: E501

        :return: The num_drives of this ModifyLibraryDrive.  # noqa: E501
        :rtype: int
        """
        return self._num_drives

    @num_drives.setter
    def num_drives(self, num_drives):
        """Sets the num_drives of this ModifyLibraryDrive.

        Number of drives in the library. If modified to less than original value, drives will be removed in reverse order. If modified to more than original value, drives will be added, using appropriate defaults for the library  # noqa: E501

        :param num_drives: The num_drives of this ModifyLibraryDrive.  # noqa: E501
        :type: int
        """

        self._num_drives = num_drives

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ModifyLibraryDrive, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ModifyLibraryDrive):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
