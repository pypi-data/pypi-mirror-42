# coding: utf-8

"""
    (C) Copyright 2018-2019 Hewlett Packard Enterprise Development LP

    Reporting

    unused  # noqa: E501

    Component version: 2.0.13-SNAPSHOT
"""


import pprint
import re  # noqa: F401

import six


class TargetDevices(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'appliance_uuid': 'str',
        'vtl_library_ids': 'list[int]',
        'nas_share_ids': 'list[int]',
        'cat_store_ids': 'list[int]'
    }

    attribute_map = {
        'appliance_uuid': 'applianceUuid',
        'vtl_library_ids': 'vtlLibraryIds',
        'nas_share_ids': 'nasShareIds',
        'cat_store_ids': 'catStoreIds'
    }

    def __init__(self, appliance_uuid=None, vtl_library_ids=None, nas_share_ids=None, cat_store_ids=None):  # noqa: E501
        """TargetDevices - a model defined in Swagger"""  # noqa: E501

        self._appliance_uuid = None
        self._vtl_library_ids = None
        self._nas_share_ids = None
        self._cat_store_ids = None
        self.discriminator = None

        if appliance_uuid is not None:
            self.appliance_uuid = appliance_uuid
        if vtl_library_ids is not None:
            self.vtl_library_ids = vtl_library_ids
        if nas_share_ids is not None:
            self.nas_share_ids = nas_share_ids
        if cat_store_ids is not None:
            self.cat_store_ids = cat_store_ids

    @property
    def appliance_uuid(self):
        """Gets the appliance_uuid of this TargetDevices.  # noqa: E501

        UUID of the Appliance  # noqa: E501

        :return: The appliance_uuid of this TargetDevices.  # noqa: E501
        :rtype: str
        """
        return self._appliance_uuid

    @appliance_uuid.setter
    def appliance_uuid(self, appliance_uuid):
        """Sets the appliance_uuid of this TargetDevices.

        UUID of the Appliance  # noqa: E501

        :param appliance_uuid: The appliance_uuid of this TargetDevices.  # noqa: E501
        :type: str
        """

        self._appliance_uuid = appliance_uuid

    @property
    def vtl_library_ids(self):
        """Gets the vtl_library_ids of this TargetDevices.  # noqa: E501

        List of VTL Library IDs  # noqa: E501

        :return: The vtl_library_ids of this TargetDevices.  # noqa: E501
        :rtype: list[int]
        """
        return self._vtl_library_ids

    @vtl_library_ids.setter
    def vtl_library_ids(self, vtl_library_ids):
        """Sets the vtl_library_ids of this TargetDevices.

        List of VTL Library IDs  # noqa: E501

        :param vtl_library_ids: The vtl_library_ids of this TargetDevices.  # noqa: E501
        :type: list[int]
        """

        self._vtl_library_ids = vtl_library_ids

    @property
    def nas_share_ids(self):
        """Gets the nas_share_ids of this TargetDevices.  # noqa: E501

        List of NAS Share IDs  # noqa: E501

        :return: The nas_share_ids of this TargetDevices.  # noqa: E501
        :rtype: list[int]
        """
        return self._nas_share_ids

    @nas_share_ids.setter
    def nas_share_ids(self, nas_share_ids):
        """Sets the nas_share_ids of this TargetDevices.

        List of NAS Share IDs  # noqa: E501

        :param nas_share_ids: The nas_share_ids of this TargetDevices.  # noqa: E501
        :type: list[int]
        """

        self._nas_share_ids = nas_share_ids

    @property
    def cat_store_ids(self):
        """Gets the cat_store_ids of this TargetDevices.  # noqa: E501

        List of CAT Store IDs  # noqa: E501

        :return: The cat_store_ids of this TargetDevices.  # noqa: E501
        :rtype: list[int]
        """
        return self._cat_store_ids

    @cat_store_ids.setter
    def cat_store_ids(self, cat_store_ids):
        """Sets the cat_store_ids of this TargetDevices.

        List of CAT Store IDs  # noqa: E501

        :param cat_store_ids: The cat_store_ids of this TargetDevices.  # noqa: E501
        :type: list[int]
        """

        self._cat_store_ids = cat_store_ids

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(TargetDevices, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TargetDevices):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
