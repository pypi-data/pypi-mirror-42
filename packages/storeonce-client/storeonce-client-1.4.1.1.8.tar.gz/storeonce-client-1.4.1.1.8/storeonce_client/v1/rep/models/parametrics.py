# coding: utf-8

"""
    (C) Copyright 2018-2019 Hewlett Packard Enterprise Development LP

    Replication

    unused  # noqa: E501

    Component version: 3.3.11-SNAPSHOT
"""


import pprint
import re  # noqa: F401

import six


class Parametrics(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'average_received_bandwidth': 'int',
        'average_received_throughput': 'int',
        'average_transmitted_bandwidth': 'int',
        'average_transmitted_throughput': 'int',
        'average_target_sessions': 'int',
        'average_source_sessions': 'int',
        'peak_target_sessions': 'int',
        'peak_source_sessions': 'int',
        'timestamp': 'str'
    }

    attribute_map = {
        'average_received_bandwidth': 'averageReceivedBandwidth',
        'average_received_throughput': 'averageReceivedThroughput',
        'average_transmitted_bandwidth': 'averageTransmittedBandwidth',
        'average_transmitted_throughput': 'averageTransmittedThroughput',
        'average_target_sessions': 'averageTargetSessions',
        'average_source_sessions': 'averageSourceSessions',
        'peak_target_sessions': 'peakTargetSessions',
        'peak_source_sessions': 'peakSourceSessions',
        'timestamp': 'timestamp'
    }

    def __init__(self, average_received_bandwidth=None, average_received_throughput=None, average_transmitted_bandwidth=None, average_transmitted_throughput=None, average_target_sessions=None, average_source_sessions=None, peak_target_sessions=None, peak_source_sessions=None, timestamp=None):  # noqa: E501
        """Parametrics - a model defined in Swagger"""  # noqa: E501

        self._average_received_bandwidth = None
        self._average_received_throughput = None
        self._average_transmitted_bandwidth = None
        self._average_transmitted_throughput = None
        self._average_target_sessions = None
        self._average_source_sessions = None
        self._peak_target_sessions = None
        self._peak_source_sessions = None
        self._timestamp = None
        self.discriminator = None

        if average_received_bandwidth is not None:
            self.average_received_bandwidth = average_received_bandwidth
        if average_received_throughput is not None:
            self.average_received_throughput = average_received_throughput
        if average_transmitted_bandwidth is not None:
            self.average_transmitted_bandwidth = average_transmitted_bandwidth
        if average_transmitted_throughput is not None:
            self.average_transmitted_throughput = average_transmitted_throughput
        if average_target_sessions is not None:
            self.average_target_sessions = average_target_sessions
        if average_source_sessions is not None:
            self.average_source_sessions = average_source_sessions
        if peak_target_sessions is not None:
            self.peak_target_sessions = peak_target_sessions
        if peak_source_sessions is not None:
            self.peak_source_sessions = peak_source_sessions
        if timestamp is not None:
            self.timestamp = timestamp

    @property
    def average_received_bandwidth(self):
        """Gets the average_received_bandwidth of this Parametrics.  # noqa: E501

        Average copy job receive bandwidth utilization in Bytes per second.  # noqa: E501

        :return: The average_received_bandwidth of this Parametrics.  # noqa: E501
        :rtype: int
        """
        return self._average_received_bandwidth

    @average_received_bandwidth.setter
    def average_received_bandwidth(self, average_received_bandwidth):
        """Sets the average_received_bandwidth of this Parametrics.

        Average copy job receive bandwidth utilization in Bytes per second.  # noqa: E501

        :param average_received_bandwidth: The average_received_bandwidth of this Parametrics.  # noqa: E501
        :type: int
        """

        self._average_received_bandwidth = average_received_bandwidth

    @property
    def average_received_throughput(self):
        """Gets the average_received_throughput of this Parametrics.  # noqa: E501

        Average copy job receive throughput in Bytes per second.  # noqa: E501

        :return: The average_received_throughput of this Parametrics.  # noqa: E501
        :rtype: int
        """
        return self._average_received_throughput

    @average_received_throughput.setter
    def average_received_throughput(self, average_received_throughput):
        """Sets the average_received_throughput of this Parametrics.

        Average copy job receive throughput in Bytes per second.  # noqa: E501

        :param average_received_throughput: The average_received_throughput of this Parametrics.  # noqa: E501
        :type: int
        """

        self._average_received_throughput = average_received_throughput

    @property
    def average_transmitted_bandwidth(self):
        """Gets the average_transmitted_bandwidth of this Parametrics.  # noqa: E501

        Average copy job transmit bandwidth utilization in Bytes per second.  # noqa: E501

        :return: The average_transmitted_bandwidth of this Parametrics.  # noqa: E501
        :rtype: int
        """
        return self._average_transmitted_bandwidth

    @average_transmitted_bandwidth.setter
    def average_transmitted_bandwidth(self, average_transmitted_bandwidth):
        """Sets the average_transmitted_bandwidth of this Parametrics.

        Average copy job transmit bandwidth utilization in Bytes per second.  # noqa: E501

        :param average_transmitted_bandwidth: The average_transmitted_bandwidth of this Parametrics.  # noqa: E501
        :type: int
        """

        self._average_transmitted_bandwidth = average_transmitted_bandwidth

    @property
    def average_transmitted_throughput(self):
        """Gets the average_transmitted_throughput of this Parametrics.  # noqa: E501

        Average copy job transmit throughput in Bytes per second.  # noqa: E501

        :return: The average_transmitted_throughput of this Parametrics.  # noqa: E501
        :rtype: int
        """
        return self._average_transmitted_throughput

    @average_transmitted_throughput.setter
    def average_transmitted_throughput(self, average_transmitted_throughput):
        """Sets the average_transmitted_throughput of this Parametrics.

        Average copy job transmit throughput in Bytes per second.  # noqa: E501

        :param average_transmitted_throughput: The average_transmitted_throughput of this Parametrics.  # noqa: E501
        :type: int
        """

        self._average_transmitted_throughput = average_transmitted_throughput

    @property
    def average_target_sessions(self):
        """Gets the average_target_sessions of this Parametrics.  # noqa: E501

        Average target replication job session count.  # noqa: E501

        :return: The average_target_sessions of this Parametrics.  # noqa: E501
        :rtype: int
        """
        return self._average_target_sessions

    @average_target_sessions.setter
    def average_target_sessions(self, average_target_sessions):
        """Sets the average_target_sessions of this Parametrics.

        Average target replication job session count.  # noqa: E501

        :param average_target_sessions: The average_target_sessions of this Parametrics.  # noqa: E501
        :type: int
        """

        self._average_target_sessions = average_target_sessions

    @property
    def average_source_sessions(self):
        """Gets the average_source_sessions of this Parametrics.  # noqa: E501

        Average source replication job session count.  # noqa: E501

        :return: The average_source_sessions of this Parametrics.  # noqa: E501
        :rtype: int
        """
        return self._average_source_sessions

    @average_source_sessions.setter
    def average_source_sessions(self, average_source_sessions):
        """Sets the average_source_sessions of this Parametrics.

        Average source replication job session count.  # noqa: E501

        :param average_source_sessions: The average_source_sessions of this Parametrics.  # noqa: E501
        :type: int
        """

        self._average_source_sessions = average_source_sessions

    @property
    def peak_target_sessions(self):
        """Gets the peak_target_sessions of this Parametrics.  # noqa: E501

        Peak target replication job session count.  # noqa: E501

        :return: The peak_target_sessions of this Parametrics.  # noqa: E501
        :rtype: int
        """
        return self._peak_target_sessions

    @peak_target_sessions.setter
    def peak_target_sessions(self, peak_target_sessions):
        """Sets the peak_target_sessions of this Parametrics.

        Peak target replication job session count.  # noqa: E501

        :param peak_target_sessions: The peak_target_sessions of this Parametrics.  # noqa: E501
        :type: int
        """

        self._peak_target_sessions = peak_target_sessions

    @property
    def peak_source_sessions(self):
        """Gets the peak_source_sessions of this Parametrics.  # noqa: E501

        Peak source replication job session count.  # noqa: E501

        :return: The peak_source_sessions of this Parametrics.  # noqa: E501
        :rtype: int
        """
        return self._peak_source_sessions

    @peak_source_sessions.setter
    def peak_source_sessions(self, peak_source_sessions):
        """Sets the peak_source_sessions of this Parametrics.

        Peak source replication job session count.  # noqa: E501

        :param peak_source_sessions: The peak_source_sessions of this Parametrics.  # noqa: E501
        :type: int
        """

        self._peak_source_sessions = peak_source_sessions

    @property
    def timestamp(self):
        """Gets the timestamp of this Parametrics.  # noqa: E501

        UTC time for the metric.  # noqa: E501

        :return: The timestamp of this Parametrics.  # noqa: E501
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this Parametrics.

        UTC time for the metric.  # noqa: E501

        :param timestamp: The timestamp of this Parametrics.  # noqa: E501
        :type: str
        """

        self._timestamp = timestamp

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Parametrics, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Parametrics):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
