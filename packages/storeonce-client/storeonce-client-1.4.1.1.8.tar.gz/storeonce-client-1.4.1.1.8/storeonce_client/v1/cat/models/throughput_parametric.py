# coding: utf-8

"""
    (C) Copyright 2018-2019 Hewlett Packard Enterprise Development LP

    Catalyst

    unused  # noqa: E501

    Component version: 10.3.15-SNAPSHOT
"""


import pprint
import re  # noqa: F401

import six


class ThroughputParametric(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'timestamp': 'str',
        'average_inbound_copyjob_sessions': 'int',
        'average_outbound_copyjob_sessions': 'int',
        'peak_inbound_copyjob_sessions': 'int',
        'peak_outbound_copyjob_sessions': 'int',
        'inbound_copyjob_network_throughput': 'int',
        'inbound_copyjob_logical_throughput': 'int',
        'outbound_copyjob_network_throughput': 'int',
        'outbound_copyjob_logical_throughput': 'int',
        'inbound_datajob_network_throughput': 'int',
        'inbound_datajob_logical_throughput': 'int',
        'average_data_job_sessions': 'int',
        'peak_data_job_sessions': 'int',
        'outbound_datajob_network_throughput': 'int',
        'outbound_datajob_logical_throughput': 'int',
        'bandwidth_limit_enabled': 'bool',
        'bandwidth_limit_bytes': 'int',
        'blackout_enabled': 'bool',
        'outbound_cloud_network_throughput': 'int',
        'inbound_cloud_network_throughput': 'int',
        'outbound_cloud_network_limit': 'int',
        'outbound_cloud_network_limit_enabled': 'bool',
        'inbound_cloud_network_limit': 'int',
        'inbound_cloud_network_limit_enabled': 'bool'
    }

    attribute_map = {
        'timestamp': 'timestamp',
        'average_inbound_copyjob_sessions': 'averageInboundCopyjobSessions',
        'average_outbound_copyjob_sessions': 'averageOutboundCopyjobSessions',
        'peak_inbound_copyjob_sessions': 'peakInboundCopyjobSessions',
        'peak_outbound_copyjob_sessions': 'peakOutboundCopyjobSessions',
        'inbound_copyjob_network_throughput': 'inboundCopyjobNetworkThroughput',
        'inbound_copyjob_logical_throughput': 'inboundCopyjobLogicalThroughput',
        'outbound_copyjob_network_throughput': 'outboundCopyjobNetworkThroughput',
        'outbound_copyjob_logical_throughput': 'outboundCopyjobLogicalThroughput',
        'inbound_datajob_network_throughput': 'inboundDatajobNetworkThroughput',
        'inbound_datajob_logical_throughput': 'inboundDatajobLogicalThroughput',
        'average_data_job_sessions': 'averageDataJobSessions',
        'peak_data_job_sessions': 'peakDataJobSessions',
        'outbound_datajob_network_throughput': 'outboundDatajobNetworkThroughput',
        'outbound_datajob_logical_throughput': 'outboundDatajobLogicalThroughput',
        'bandwidth_limit_enabled': 'bandwidthLimitEnabled',
        'bandwidth_limit_bytes': 'bandwidthLimitBytes',
        'blackout_enabled': 'blackoutEnabled',
        'outbound_cloud_network_throughput': 'outboundCloudNetworkThroughput',
        'inbound_cloud_network_throughput': 'inboundCloudNetworkThroughput',
        'outbound_cloud_network_limit': 'outboundCloudNetworkLimit',
        'outbound_cloud_network_limit_enabled': 'outboundCloudNetworkLimitEnabled',
        'inbound_cloud_network_limit': 'inboundCloudNetworkLimit',
        'inbound_cloud_network_limit_enabled': 'inboundCloudNetworkLimitEnabled'
    }

    def __init__(self, timestamp=None, average_inbound_copyjob_sessions=None, average_outbound_copyjob_sessions=None, peak_inbound_copyjob_sessions=None, peak_outbound_copyjob_sessions=None, inbound_copyjob_network_throughput=None, inbound_copyjob_logical_throughput=None, outbound_copyjob_network_throughput=None, outbound_copyjob_logical_throughput=None, inbound_datajob_network_throughput=None, inbound_datajob_logical_throughput=None, average_data_job_sessions=None, peak_data_job_sessions=None, outbound_datajob_network_throughput=None, outbound_datajob_logical_throughput=None, bandwidth_limit_enabled=False, bandwidth_limit_bytes=None, blackout_enabled=False, outbound_cloud_network_throughput=None, inbound_cloud_network_throughput=None, outbound_cloud_network_limit=None, outbound_cloud_network_limit_enabled=False, inbound_cloud_network_limit=None, inbound_cloud_network_limit_enabled=False):  # noqa: E501
        """ThroughputParametric - a model defined in Swagger"""  # noqa: E501

        self._timestamp = None
        self._average_inbound_copyjob_sessions = None
        self._average_outbound_copyjob_sessions = None
        self._peak_inbound_copyjob_sessions = None
        self._peak_outbound_copyjob_sessions = None
        self._inbound_copyjob_network_throughput = None
        self._inbound_copyjob_logical_throughput = None
        self._outbound_copyjob_network_throughput = None
        self._outbound_copyjob_logical_throughput = None
        self._inbound_datajob_network_throughput = None
        self._inbound_datajob_logical_throughput = None
        self._average_data_job_sessions = None
        self._peak_data_job_sessions = None
        self._outbound_datajob_network_throughput = None
        self._outbound_datajob_logical_throughput = None
        self._bandwidth_limit_enabled = None
        self._bandwidth_limit_bytes = None
        self._blackout_enabled = None
        self._outbound_cloud_network_throughput = None
        self._inbound_cloud_network_throughput = None
        self._outbound_cloud_network_limit = None
        self._outbound_cloud_network_limit_enabled = None
        self._inbound_cloud_network_limit = None
        self._inbound_cloud_network_limit_enabled = None
        self.discriminator = None

        if timestamp is not None:
            self.timestamp = timestamp
        if average_inbound_copyjob_sessions is not None:
            self.average_inbound_copyjob_sessions = average_inbound_copyjob_sessions
        if average_outbound_copyjob_sessions is not None:
            self.average_outbound_copyjob_sessions = average_outbound_copyjob_sessions
        if peak_inbound_copyjob_sessions is not None:
            self.peak_inbound_copyjob_sessions = peak_inbound_copyjob_sessions
        if peak_outbound_copyjob_sessions is not None:
            self.peak_outbound_copyjob_sessions = peak_outbound_copyjob_sessions
        if inbound_copyjob_network_throughput is not None:
            self.inbound_copyjob_network_throughput = inbound_copyjob_network_throughput
        if inbound_copyjob_logical_throughput is not None:
            self.inbound_copyjob_logical_throughput = inbound_copyjob_logical_throughput
        if outbound_copyjob_network_throughput is not None:
            self.outbound_copyjob_network_throughput = outbound_copyjob_network_throughput
        if outbound_copyjob_logical_throughput is not None:
            self.outbound_copyjob_logical_throughput = outbound_copyjob_logical_throughput
        if inbound_datajob_network_throughput is not None:
            self.inbound_datajob_network_throughput = inbound_datajob_network_throughput
        if inbound_datajob_logical_throughput is not None:
            self.inbound_datajob_logical_throughput = inbound_datajob_logical_throughput
        if average_data_job_sessions is not None:
            self.average_data_job_sessions = average_data_job_sessions
        if peak_data_job_sessions is not None:
            self.peak_data_job_sessions = peak_data_job_sessions
        if outbound_datajob_network_throughput is not None:
            self.outbound_datajob_network_throughput = outbound_datajob_network_throughput
        if outbound_datajob_logical_throughput is not None:
            self.outbound_datajob_logical_throughput = outbound_datajob_logical_throughput
        if bandwidth_limit_enabled is not None:
            self.bandwidth_limit_enabled = bandwidth_limit_enabled
        if bandwidth_limit_bytes is not None:
            self.bandwidth_limit_bytes = bandwidth_limit_bytes
        if blackout_enabled is not None:
            self.blackout_enabled = blackout_enabled
        if outbound_cloud_network_throughput is not None:
            self.outbound_cloud_network_throughput = outbound_cloud_network_throughput
        if inbound_cloud_network_throughput is not None:
            self.inbound_cloud_network_throughput = inbound_cloud_network_throughput
        if outbound_cloud_network_limit is not None:
            self.outbound_cloud_network_limit = outbound_cloud_network_limit
        if outbound_cloud_network_limit_enabled is not None:
            self.outbound_cloud_network_limit_enabled = outbound_cloud_network_limit_enabled
        if inbound_cloud_network_limit is not None:
            self.inbound_cloud_network_limit = inbound_cloud_network_limit
        if inbound_cloud_network_limit_enabled is not None:
            self.inbound_cloud_network_limit_enabled = inbound_cloud_network_limit_enabled

    @property
    def timestamp(self):
        """Gets the timestamp of this ThroughputParametric.  # noqa: E501

        UTC time for the metric.  # noqa: E501

        :return: The timestamp of this ThroughputParametric.  # noqa: E501
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this ThroughputParametric.

        UTC time for the metric.  # noqa: E501

        :param timestamp: The timestamp of this ThroughputParametric.  # noqa: E501
        :type: str
        """

        self._timestamp = timestamp

    @property
    def average_inbound_copyjob_sessions(self):
        """Gets the average_inbound_copyjob_sessions of this ThroughputParametric.  # noqa: E501

        Average inbound copy job session count  # noqa: E501

        :return: The average_inbound_copyjob_sessions of this ThroughputParametric.  # noqa: E501
        :rtype: int
        """
        return self._average_inbound_copyjob_sessions

    @average_inbound_copyjob_sessions.setter
    def average_inbound_copyjob_sessions(self, average_inbound_copyjob_sessions):
        """Sets the average_inbound_copyjob_sessions of this ThroughputParametric.

        Average inbound copy job session count  # noqa: E501

        :param average_inbound_copyjob_sessions: The average_inbound_copyjob_sessions of this ThroughputParametric.  # noqa: E501
        :type: int
        """

        self._average_inbound_copyjob_sessions = average_inbound_copyjob_sessions

    @property
    def average_outbound_copyjob_sessions(self):
        """Gets the average_outbound_copyjob_sessions of this ThroughputParametric.  # noqa: E501

        Average outbound copy job session count  # noqa: E501

        :return: The average_outbound_copyjob_sessions of this ThroughputParametric.  # noqa: E501
        :rtype: int
        """
        return self._average_outbound_copyjob_sessions

    @average_outbound_copyjob_sessions.setter
    def average_outbound_copyjob_sessions(self, average_outbound_copyjob_sessions):
        """Sets the average_outbound_copyjob_sessions of this ThroughputParametric.

        Average outbound copy job session count  # noqa: E501

        :param average_outbound_copyjob_sessions: The average_outbound_copyjob_sessions of this ThroughputParametric.  # noqa: E501
        :type: int
        """

        self._average_outbound_copyjob_sessions = average_outbound_copyjob_sessions

    @property
    def peak_inbound_copyjob_sessions(self):
        """Gets the peak_inbound_copyjob_sessions of this ThroughputParametric.  # noqa: E501

        Peak inbound copy job session count  # noqa: E501

        :return: The peak_inbound_copyjob_sessions of this ThroughputParametric.  # noqa: E501
        :rtype: int
        """
        return self._peak_inbound_copyjob_sessions

    @peak_inbound_copyjob_sessions.setter
    def peak_inbound_copyjob_sessions(self, peak_inbound_copyjob_sessions):
        """Sets the peak_inbound_copyjob_sessions of this ThroughputParametric.

        Peak inbound copy job session count  # noqa: E501

        :param peak_inbound_copyjob_sessions: The peak_inbound_copyjob_sessions of this ThroughputParametric.  # noqa: E501
        :type: int
        """

        self._peak_inbound_copyjob_sessions = peak_inbound_copyjob_sessions

    @property
    def peak_outbound_copyjob_sessions(self):
        """Gets the peak_outbound_copyjob_sessions of this ThroughputParametric.  # noqa: E501

        Peak outbound copy job session count  # noqa: E501

        :return: The peak_outbound_copyjob_sessions of this ThroughputParametric.  # noqa: E501
        :rtype: int
        """
        return self._peak_outbound_copyjob_sessions

    @peak_outbound_copyjob_sessions.setter
    def peak_outbound_copyjob_sessions(self, peak_outbound_copyjob_sessions):
        """Sets the peak_outbound_copyjob_sessions of this ThroughputParametric.

        Peak outbound copy job session count  # noqa: E501

        :param peak_outbound_copyjob_sessions: The peak_outbound_copyjob_sessions of this ThroughputParametric.  # noqa: E501
        :type: int
        """

        self._peak_outbound_copyjob_sessions = peak_outbound_copyjob_sessions

    @property
    def inbound_copyjob_network_throughput(self):
        """Gets the inbound_copyjob_network_throughput of this ThroughputParametric.  # noqa: E501

        Average copy job receive network throughput in Bytes per second  # noqa: E501

        :return: The inbound_copyjob_network_throughput of this ThroughputParametric.  # noqa: E501
        :rtype: int
        """
        return self._inbound_copyjob_network_throughput

    @inbound_copyjob_network_throughput.setter
    def inbound_copyjob_network_throughput(self, inbound_copyjob_network_throughput):
        """Sets the inbound_copyjob_network_throughput of this ThroughputParametric.

        Average copy job receive network throughput in Bytes per second  # noqa: E501

        :param inbound_copyjob_network_throughput: The inbound_copyjob_network_throughput of this ThroughputParametric.  # noqa: E501
        :type: int
        """

        self._inbound_copyjob_network_throughput = inbound_copyjob_network_throughput

    @property
    def inbound_copyjob_logical_throughput(self):
        """Gets the inbound_copyjob_logical_throughput of this ThroughputParametric.  # noqa: E501

        Average copy job receive throughput in Bytes per second  # noqa: E501

        :return: The inbound_copyjob_logical_throughput of this ThroughputParametric.  # noqa: E501
        :rtype: int
        """
        return self._inbound_copyjob_logical_throughput

    @inbound_copyjob_logical_throughput.setter
    def inbound_copyjob_logical_throughput(self, inbound_copyjob_logical_throughput):
        """Sets the inbound_copyjob_logical_throughput of this ThroughputParametric.

        Average copy job receive throughput in Bytes per second  # noqa: E501

        :param inbound_copyjob_logical_throughput: The inbound_copyjob_logical_throughput of this ThroughputParametric.  # noqa: E501
        :type: int
        """

        self._inbound_copyjob_logical_throughput = inbound_copyjob_logical_throughput

    @property
    def outbound_copyjob_network_throughput(self):
        """Gets the outbound_copyjob_network_throughput of this ThroughputParametric.  # noqa: E501

        Average copy job transmit network throughput in Bytes per second  # noqa: E501

        :return: The outbound_copyjob_network_throughput of this ThroughputParametric.  # noqa: E501
        :rtype: int
        """
        return self._outbound_copyjob_network_throughput

    @outbound_copyjob_network_throughput.setter
    def outbound_copyjob_network_throughput(self, outbound_copyjob_network_throughput):
        """Sets the outbound_copyjob_network_throughput of this ThroughputParametric.

        Average copy job transmit network throughput in Bytes per second  # noqa: E501

        :param outbound_copyjob_network_throughput: The outbound_copyjob_network_throughput of this ThroughputParametric.  # noqa: E501
        :type: int
        """

        self._outbound_copyjob_network_throughput = outbound_copyjob_network_throughput

    @property
    def outbound_copyjob_logical_throughput(self):
        """Gets the outbound_copyjob_logical_throughput of this ThroughputParametric.  # noqa: E501

        Average copy job transmit throughput in Bytes per second  # noqa: E501

        :return: The outbound_copyjob_logical_throughput of this ThroughputParametric.  # noqa: E501
        :rtype: int
        """
        return self._outbound_copyjob_logical_throughput

    @outbound_copyjob_logical_throughput.setter
    def outbound_copyjob_logical_throughput(self, outbound_copyjob_logical_throughput):
        """Sets the outbound_copyjob_logical_throughput of this ThroughputParametric.

        Average copy job transmit throughput in Bytes per second  # noqa: E501

        :param outbound_copyjob_logical_throughput: The outbound_copyjob_logical_throughput of this ThroughputParametric.  # noqa: E501
        :type: int
        """

        self._outbound_copyjob_logical_throughput = outbound_copyjob_logical_throughput

    @property
    def inbound_datajob_network_throughput(self):
        """Gets the inbound_datajob_network_throughput of this ThroughputParametric.  # noqa: E501

        Average data job receive network throughput in Bytes per second  # noqa: E501

        :return: The inbound_datajob_network_throughput of this ThroughputParametric.  # noqa: E501
        :rtype: int
        """
        return self._inbound_datajob_network_throughput

    @inbound_datajob_network_throughput.setter
    def inbound_datajob_network_throughput(self, inbound_datajob_network_throughput):
        """Sets the inbound_datajob_network_throughput of this ThroughputParametric.

        Average data job receive network throughput in Bytes per second  # noqa: E501

        :param inbound_datajob_network_throughput: The inbound_datajob_network_throughput of this ThroughputParametric.  # noqa: E501
        :type: int
        """

        self._inbound_datajob_network_throughput = inbound_datajob_network_throughput

    @property
    def inbound_datajob_logical_throughput(self):
        """Gets the inbound_datajob_logical_throughput of this ThroughputParametric.  # noqa: E501

        Average data job receive throughput in Bytes per second  # noqa: E501

        :return: The inbound_datajob_logical_throughput of this ThroughputParametric.  # noqa: E501
        :rtype: int
        """
        return self._inbound_datajob_logical_throughput

    @inbound_datajob_logical_throughput.setter
    def inbound_datajob_logical_throughput(self, inbound_datajob_logical_throughput):
        """Sets the inbound_datajob_logical_throughput of this ThroughputParametric.

        Average data job receive throughput in Bytes per second  # noqa: E501

        :param inbound_datajob_logical_throughput: The inbound_datajob_logical_throughput of this ThroughputParametric.  # noqa: E501
        :type: int
        """

        self._inbound_datajob_logical_throughput = inbound_datajob_logical_throughput

    @property
    def average_data_job_sessions(self):
        """Gets the average_data_job_sessions of this ThroughputParametric.  # noqa: E501

        Average data job session count  # noqa: E501

        :return: The average_data_job_sessions of this ThroughputParametric.  # noqa: E501
        :rtype: int
        """
        return self._average_data_job_sessions

    @average_data_job_sessions.setter
    def average_data_job_sessions(self, average_data_job_sessions):
        """Sets the average_data_job_sessions of this ThroughputParametric.

        Average data job session count  # noqa: E501

        :param average_data_job_sessions: The average_data_job_sessions of this ThroughputParametric.  # noqa: E501
        :type: int
        """

        self._average_data_job_sessions = average_data_job_sessions

    @property
    def peak_data_job_sessions(self):
        """Gets the peak_data_job_sessions of this ThroughputParametric.  # noqa: E501

        Peak data job session count  # noqa: E501

        :return: The peak_data_job_sessions of this ThroughputParametric.  # noqa: E501
        :rtype: int
        """
        return self._peak_data_job_sessions

    @peak_data_job_sessions.setter
    def peak_data_job_sessions(self, peak_data_job_sessions):
        """Sets the peak_data_job_sessions of this ThroughputParametric.

        Peak data job session count  # noqa: E501

        :param peak_data_job_sessions: The peak_data_job_sessions of this ThroughputParametric.  # noqa: E501
        :type: int
        """

        self._peak_data_job_sessions = peak_data_job_sessions

    @property
    def outbound_datajob_network_throughput(self):
        """Gets the outbound_datajob_network_throughput of this ThroughputParametric.  # noqa: E501

        Average data job transmit network throughput in Bytes per second  # noqa: E501

        :return: The outbound_datajob_network_throughput of this ThroughputParametric.  # noqa: E501
        :rtype: int
        """
        return self._outbound_datajob_network_throughput

    @outbound_datajob_network_throughput.setter
    def outbound_datajob_network_throughput(self, outbound_datajob_network_throughput):
        """Sets the outbound_datajob_network_throughput of this ThroughputParametric.

        Average data job transmit network throughput in Bytes per second  # noqa: E501

        :param outbound_datajob_network_throughput: The outbound_datajob_network_throughput of this ThroughputParametric.  # noqa: E501
        :type: int
        """

        self._outbound_datajob_network_throughput = outbound_datajob_network_throughput

    @property
    def outbound_datajob_logical_throughput(self):
        """Gets the outbound_datajob_logical_throughput of this ThroughputParametric.  # noqa: E501

        Average data job transmit throughput in Bytes per second  # noqa: E501

        :return: The outbound_datajob_logical_throughput of this ThroughputParametric.  # noqa: E501
        :rtype: int
        """
        return self._outbound_datajob_logical_throughput

    @outbound_datajob_logical_throughput.setter
    def outbound_datajob_logical_throughput(self, outbound_datajob_logical_throughput):
        """Sets the outbound_datajob_logical_throughput of this ThroughputParametric.

        Average data job transmit throughput in Bytes per second  # noqa: E501

        :param outbound_datajob_logical_throughput: The outbound_datajob_logical_throughput of this ThroughputParametric.  # noqa: E501
        :type: int
        """

        self._outbound_datajob_logical_throughput = outbound_datajob_logical_throughput

    @property
    def bandwidth_limit_enabled(self):
        """Gets the bandwidth_limit_enabled of this ThroughputParametric.  # noqa: E501

        Was bandwidth limit was active during this sample  # noqa: E501

        :return: The bandwidth_limit_enabled of this ThroughputParametric.  # noqa: E501
        :rtype: bool
        """
        return self._bandwidth_limit_enabled

    @bandwidth_limit_enabled.setter
    def bandwidth_limit_enabled(self, bandwidth_limit_enabled):
        """Sets the bandwidth_limit_enabled of this ThroughputParametric.

        Was bandwidth limit was active during this sample  # noqa: E501

        :param bandwidth_limit_enabled: The bandwidth_limit_enabled of this ThroughputParametric.  # noqa: E501
        :type: bool
        """

        self._bandwidth_limit_enabled = bandwidth_limit_enabled

    @property
    def bandwidth_limit_bytes(self):
        """Gets the bandwidth_limit_bytes of this ThroughputParametric.  # noqa: E501

        The bandwidth limit set during this sample  # noqa: E501

        :return: The bandwidth_limit_bytes of this ThroughputParametric.  # noqa: E501
        :rtype: int
        """
        return self._bandwidth_limit_bytes

    @bandwidth_limit_bytes.setter
    def bandwidth_limit_bytes(self, bandwidth_limit_bytes):
        """Sets the bandwidth_limit_bytes of this ThroughputParametric.

        The bandwidth limit set during this sample  # noqa: E501

        :param bandwidth_limit_bytes: The bandwidth_limit_bytes of this ThroughputParametric.  # noqa: E501
        :type: int
        """

        self._bandwidth_limit_bytes = bandwidth_limit_bytes

    @property
    def blackout_enabled(self):
        """Gets the blackout_enabled of this ThroughputParametric.  # noqa: E501

        Was blackout active during this sample  # noqa: E501

        :return: The blackout_enabled of this ThroughputParametric.  # noqa: E501
        :rtype: bool
        """
        return self._blackout_enabled

    @blackout_enabled.setter
    def blackout_enabled(self, blackout_enabled):
        """Sets the blackout_enabled of this ThroughputParametric.

        Was blackout active during this sample  # noqa: E501

        :param blackout_enabled: The blackout_enabled of this ThroughputParametric.  # noqa: E501
        :type: bool
        """

        self._blackout_enabled = blackout_enabled

    @property
    def outbound_cloud_network_throughput(self):
        """Gets the outbound_cloud_network_throughput of this ThroughputParametric.  # noqa: E501

        Average network throughput of local to cloud in Bytes per second  # noqa: E501

        :return: The outbound_cloud_network_throughput of this ThroughputParametric.  # noqa: E501
        :rtype: int
        """
        return self._outbound_cloud_network_throughput

    @outbound_cloud_network_throughput.setter
    def outbound_cloud_network_throughput(self, outbound_cloud_network_throughput):
        """Sets the outbound_cloud_network_throughput of this ThroughputParametric.

        Average network throughput of local to cloud in Bytes per second  # noqa: E501

        :param outbound_cloud_network_throughput: The outbound_cloud_network_throughput of this ThroughputParametric.  # noqa: E501
        :type: int
        """

        self._outbound_cloud_network_throughput = outbound_cloud_network_throughput

    @property
    def inbound_cloud_network_throughput(self):
        """Gets the inbound_cloud_network_throughput of this ThroughputParametric.  # noqa: E501

        Average network throughput of cloud to local in Bytes per second  # noqa: E501

        :return: The inbound_cloud_network_throughput of this ThroughputParametric.  # noqa: E501
        :rtype: int
        """
        return self._inbound_cloud_network_throughput

    @inbound_cloud_network_throughput.setter
    def inbound_cloud_network_throughput(self, inbound_cloud_network_throughput):
        """Sets the inbound_cloud_network_throughput of this ThroughputParametric.

        Average network throughput of cloud to local in Bytes per second  # noqa: E501

        :param inbound_cloud_network_throughput: The inbound_cloud_network_throughput of this ThroughputParametric.  # noqa: E501
        :type: int
        """

        self._inbound_cloud_network_throughput = inbound_cloud_network_throughput

    @property
    def outbound_cloud_network_limit(self):
        """Gets the outbound_cloud_network_limit of this ThroughputParametric.  # noqa: E501

        The outbound cloud network limit set during this sample  # noqa: E501

        :return: The outbound_cloud_network_limit of this ThroughputParametric.  # noqa: E501
        :rtype: int
        """
        return self._outbound_cloud_network_limit

    @outbound_cloud_network_limit.setter
    def outbound_cloud_network_limit(self, outbound_cloud_network_limit):
        """Sets the outbound_cloud_network_limit of this ThroughputParametric.

        The outbound cloud network limit set during this sample  # noqa: E501

        :param outbound_cloud_network_limit: The outbound_cloud_network_limit of this ThroughputParametric.  # noqa: E501
        :type: int
        """

        self._outbound_cloud_network_limit = outbound_cloud_network_limit

    @property
    def outbound_cloud_network_limit_enabled(self):
        """Gets the outbound_cloud_network_limit_enabled of this ThroughputParametric.  # noqa: E501

        The outbound cloud network limit enabled set during this sample  # noqa: E501

        :return: The outbound_cloud_network_limit_enabled of this ThroughputParametric.  # noqa: E501
        :rtype: bool
        """
        return self._outbound_cloud_network_limit_enabled

    @outbound_cloud_network_limit_enabled.setter
    def outbound_cloud_network_limit_enabled(self, outbound_cloud_network_limit_enabled):
        """Sets the outbound_cloud_network_limit_enabled of this ThroughputParametric.

        The outbound cloud network limit enabled set during this sample  # noqa: E501

        :param outbound_cloud_network_limit_enabled: The outbound_cloud_network_limit_enabled of this ThroughputParametric.  # noqa: E501
        :type: bool
        """

        self._outbound_cloud_network_limit_enabled = outbound_cloud_network_limit_enabled

    @property
    def inbound_cloud_network_limit(self):
        """Gets the inbound_cloud_network_limit of this ThroughputParametric.  # noqa: E501

        The inbound cloud network limit set during this sample  # noqa: E501

        :return: The inbound_cloud_network_limit of this ThroughputParametric.  # noqa: E501
        :rtype: int
        """
        return self._inbound_cloud_network_limit

    @inbound_cloud_network_limit.setter
    def inbound_cloud_network_limit(self, inbound_cloud_network_limit):
        """Sets the inbound_cloud_network_limit of this ThroughputParametric.

        The inbound cloud network limit set during this sample  # noqa: E501

        :param inbound_cloud_network_limit: The inbound_cloud_network_limit of this ThroughputParametric.  # noqa: E501
        :type: int
        """

        self._inbound_cloud_network_limit = inbound_cloud_network_limit

    @property
    def inbound_cloud_network_limit_enabled(self):
        """Gets the inbound_cloud_network_limit_enabled of this ThroughputParametric.  # noqa: E501

        The inbound cloud network limit enabled set during this sample  # noqa: E501

        :return: The inbound_cloud_network_limit_enabled of this ThroughputParametric.  # noqa: E501
        :rtype: bool
        """
        return self._inbound_cloud_network_limit_enabled

    @inbound_cloud_network_limit_enabled.setter
    def inbound_cloud_network_limit_enabled(self, inbound_cloud_network_limit_enabled):
        """Sets the inbound_cloud_network_limit_enabled of this ThroughputParametric.

        The inbound cloud network limit enabled set during this sample  # noqa: E501

        :param inbound_cloud_network_limit_enabled: The inbound_cloud_network_limit_enabled of this ThroughputParametric.  # noqa: E501
        :type: bool
        """

        self._inbound_cloud_network_limit_enabled = inbound_cloud_network_limit_enabled

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ThroughputParametric, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ThroughputParametric):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
