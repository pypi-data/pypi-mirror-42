# coding: utf-8

"""
    (C) Copyright 2018-2019 Hewlett Packard Enterprise Development LP

    Catalyst

    unused  # noqa: E501

    Component version: 10.3.15-SNAPSHOT
"""


import pprint
import re  # noqa: F401

import six


class StoreItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'name': 'str',
        'created_date': 'datetime',
        'item_state': 'int',
        'item_state_string': 'str',
        'user_bytes': 'int',
        'meta_modified_date': 'datetime',
        'meta_data_size_bytes': 'int',
        'data_modified_date': 'datetime',
        'last_modified_date': 'datetime',
        'meta_data': 'str',
        'tag_list': 'str',
        'storage_mode': 'int',
        'storage_mode_string': 'str',
        'fixed_block_size_bytes': 'int',
        'version': 'int'
    }

    attribute_map = {
        'id': 'id',
        'name': 'name',
        'created_date': 'createdDate',
        'item_state': 'itemState',
        'item_state_string': 'itemStateString',
        'user_bytes': 'userBytes',
        'meta_modified_date': 'metaModifiedDate',
        'meta_data_size_bytes': 'metaDataSizeBytes',
        'data_modified_date': 'dataModifiedDate',
        'last_modified_date': 'lastModifiedDate',
        'meta_data': 'metaData',
        'tag_list': 'tagList',
        'storage_mode': 'storageMode',
        'storage_mode_string': 'storageModeString',
        'fixed_block_size_bytes': 'fixedBlockSizeBytes',
        'version': 'version'
    }

    def __init__(self, id=None, name=None, created_date=None, item_state=None, item_state_string=None, user_bytes=None, meta_modified_date=None, meta_data_size_bytes=None, data_modified_date=None, last_modified_date=None, meta_data=None, tag_list=None, storage_mode=None, storage_mode_string=None, fixed_block_size_bytes=None, version=None):  # noqa: E501
        """StoreItem - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._name = None
        self._created_date = None
        self._item_state = None
        self._item_state_string = None
        self._user_bytes = None
        self._meta_modified_date = None
        self._meta_data_size_bytes = None
        self._data_modified_date = None
        self._last_modified_date = None
        self._meta_data = None
        self._tag_list = None
        self._storage_mode = None
        self._storage_mode_string = None
        self._fixed_block_size_bytes = None
        self._version = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if created_date is not None:
            self.created_date = created_date
        if item_state is not None:
            self.item_state = item_state
        if item_state_string is not None:
            self.item_state_string = item_state_string
        if user_bytes is not None:
            self.user_bytes = user_bytes
        if meta_modified_date is not None:
            self.meta_modified_date = meta_modified_date
        if meta_data_size_bytes is not None:
            self.meta_data_size_bytes = meta_data_size_bytes
        if data_modified_date is not None:
            self.data_modified_date = data_modified_date
        if last_modified_date is not None:
            self.last_modified_date = last_modified_date
        if meta_data is not None:
            self.meta_data = meta_data
        if tag_list is not None:
            self.tag_list = tag_list
        if storage_mode is not None:
            self.storage_mode = storage_mode
        if storage_mode_string is not None:
            self.storage_mode_string = storage_mode_string
        if fixed_block_size_bytes is not None:
            self.fixed_block_size_bytes = fixed_block_size_bytes
        if version is not None:
            self.version = version

    @property
    def id(self):
        """Gets the id of this StoreItem.  # noqa: E501

        Item ID  # noqa: E501

        :return: The id of this StoreItem.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this StoreItem.

        Item ID  # noqa: E501

        :param id: The id of this StoreItem.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this StoreItem.  # noqa: E501

        Name given to this item  # noqa: E501

        :return: The name of this StoreItem.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StoreItem.

        Name given to this item  # noqa: E501

        :param name: The name of this StoreItem.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def created_date(self):
        """Gets the created_date of this StoreItem.  # noqa: E501

        Date the item was created  # noqa: E501

        :return: The created_date of this StoreItem.  # noqa: E501
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this StoreItem.

        Date the item was created  # noqa: E501

        :param created_date: The created_date of this StoreItem.  # noqa: E501
        :type: datetime
        """

        self._created_date = created_date

    @property
    def item_state(self):
        """Gets the item_state of this StoreItem.  # noqa: E501

        Current status of the item  # noqa: E501

        :return: The item_state of this StoreItem.  # noqa: E501
        :rtype: int
        """
        return self._item_state

    @item_state.setter
    def item_state(self, item_state):
        """Sets the item_state of this StoreItem.

        Current status of the item  # noqa: E501

        :param item_state: The item_state of this StoreItem.  # noqa: E501
        :type: int
        """

        self._item_state = item_state

    @property
    def item_state_string(self):
        """Gets the item_state_string of this StoreItem.  # noqa: E501

        Localised string representation of the status of the item  # noqa: E501

        :return: The item_state_string of this StoreItem.  # noqa: E501
        :rtype: str
        """
        return self._item_state_string

    @item_state_string.setter
    def item_state_string(self, item_state_string):
        """Sets the item_state_string of this StoreItem.

        Localised string representation of the status of the item  # noqa: E501

        :param item_state_string: The item_state_string of this StoreItem.  # noqa: E501
        :type: str
        """

        self._item_state_string = item_state_string

    @property
    def user_bytes(self):
        """Gets the user_bytes of this StoreItem.  # noqa: E501

        Size of the item in bytes including sparse regions  # noqa: E501

        :return: The user_bytes of this StoreItem.  # noqa: E501
        :rtype: int
        """
        return self._user_bytes

    @user_bytes.setter
    def user_bytes(self, user_bytes):
        """Sets the user_bytes of this StoreItem.

        Size of the item in bytes including sparse regions  # noqa: E501

        :param user_bytes: The user_bytes of this StoreItem.  # noqa: E501
        :type: int
        """

        self._user_bytes = user_bytes

    @property
    def meta_modified_date(self):
        """Gets the meta_modified_date of this StoreItem.  # noqa: E501

        Date the metadata was last modified  # noqa: E501

        :return: The meta_modified_date of this StoreItem.  # noqa: E501
        :rtype: datetime
        """
        return self._meta_modified_date

    @meta_modified_date.setter
    def meta_modified_date(self, meta_modified_date):
        """Sets the meta_modified_date of this StoreItem.

        Date the metadata was last modified  # noqa: E501

        :param meta_modified_date: The meta_modified_date of this StoreItem.  # noqa: E501
        :type: datetime
        """

        self._meta_modified_date = meta_modified_date

    @property
    def meta_data_size_bytes(self):
        """Gets the meta_data_size_bytes of this StoreItem.  # noqa: E501

        Decoded size of the metadata  # noqa: E501

        :return: The meta_data_size_bytes of this StoreItem.  # noqa: E501
        :rtype: int
        """
        return self._meta_data_size_bytes

    @meta_data_size_bytes.setter
    def meta_data_size_bytes(self, meta_data_size_bytes):
        """Sets the meta_data_size_bytes of this StoreItem.

        Decoded size of the metadata  # noqa: E501

        :param meta_data_size_bytes: The meta_data_size_bytes of this StoreItem.  # noqa: E501
        :type: int
        """

        self._meta_data_size_bytes = meta_data_size_bytes

    @property
    def data_modified_date(self):
        """Gets the data_modified_date of this StoreItem.  # noqa: E501

        Date the item data was last modified  # noqa: E501

        :return: The data_modified_date of this StoreItem.  # noqa: E501
        :rtype: datetime
        """
        return self._data_modified_date

    @data_modified_date.setter
    def data_modified_date(self, data_modified_date):
        """Sets the data_modified_date of this StoreItem.

        Date the item data was last modified  # noqa: E501

        :param data_modified_date: The data_modified_date of this StoreItem.  # noqa: E501
        :type: datetime
        """

        self._data_modified_date = data_modified_date

    @property
    def last_modified_date(self):
        """Gets the last_modified_date of this StoreItem.  # noqa: E501

        Date the item data or item meta was last modified  # noqa: E501

        :return: The last_modified_date of this StoreItem.  # noqa: E501
        :rtype: datetime
        """
        return self._last_modified_date

    @last_modified_date.setter
    def last_modified_date(self, last_modified_date):
        """Sets the last_modified_date of this StoreItem.

        Date the item data or item meta was last modified  # noqa: E501

        :param last_modified_date: The last_modified_date of this StoreItem.  # noqa: E501
        :type: datetime
        """

        self._last_modified_date = last_modified_date

    @property
    def meta_data(self):
        """Gets the meta_data of this StoreItem.  # noqa: E501

        Optional ISV metadata  # noqa: E501

        :return: The meta_data of this StoreItem.  # noqa: E501
        :rtype: str
        """
        return self._meta_data

    @meta_data.setter
    def meta_data(self, meta_data):
        """Sets the meta_data of this StoreItem.

        Optional ISV metadata  # noqa: E501

        :param meta_data: The meta_data of this StoreItem.  # noqa: E501
        :type: str
        """

        self._meta_data = meta_data

    @property
    def tag_list(self):
        """Gets the tag_list of this StoreItem.  # noqa: E501

        Space seperated list of item tags  # noqa: E501

        :return: The tag_list of this StoreItem.  # noqa: E501
        :rtype: str
        """
        return self._tag_list

    @tag_list.setter
    def tag_list(self, tag_list):
        """Sets the tag_list of this StoreItem.

        Space seperated list of item tags  # noqa: E501

        :param tag_list: The tag_list of this StoreItem.  # noqa: E501
        :type: str
        """

        self._tag_list = tag_list

    @property
    def storage_mode(self):
        """Gets the storage_mode of this StoreItem.  # noqa: E501

        Storage mode of the item  # noqa: E501

        :return: The storage_mode of this StoreItem.  # noqa: E501
        :rtype: int
        """
        return self._storage_mode

    @storage_mode.setter
    def storage_mode(self, storage_mode):
        """Sets the storage_mode of this StoreItem.

        Storage mode of the item  # noqa: E501

        :param storage_mode: The storage_mode of this StoreItem.  # noqa: E501
        :type: int
        """

        self._storage_mode = storage_mode

    @property
    def storage_mode_string(self):
        """Gets the storage_mode_string of this StoreItem.  # noqa: E501

        Localised string representation of the storage mode of the item  # noqa: E501

        :return: The storage_mode_string of this StoreItem.  # noqa: E501
        :rtype: str
        """
        return self._storage_mode_string

    @storage_mode_string.setter
    def storage_mode_string(self, storage_mode_string):
        """Sets the storage_mode_string of this StoreItem.

        Localised string representation of the storage mode of the item  # noqa: E501

        :param storage_mode_string: The storage_mode_string of this StoreItem.  # noqa: E501
        :type: str
        """

        self._storage_mode_string = storage_mode_string

    @property
    def fixed_block_size_bytes(self):
        """Gets the fixed_block_size_bytes of this StoreItem.  # noqa: E501

         The size, in bytes, of the fixed block dedupe  # noqa: E501

        :return: The fixed_block_size_bytes of this StoreItem.  # noqa: E501
        :rtype: int
        """
        return self._fixed_block_size_bytes

    @fixed_block_size_bytes.setter
    def fixed_block_size_bytes(self, fixed_block_size_bytes):
        """Sets the fixed_block_size_bytes of this StoreItem.

         The size, in bytes, of the fixed block dedupe  # noqa: E501

        :param fixed_block_size_bytes: The fixed_block_size_bytes of this StoreItem.  # noqa: E501
        :type: int
        """

        self._fixed_block_size_bytes = fixed_block_size_bytes

    @property
    def version(self):
        """Gets the version of this StoreItem.  # noqa: E501

        Version of the item  # noqa: E501

        :return: The version of this StoreItem.  # noqa: E501
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this StoreItem.

        Version of the item  # noqa: E501

        :param version: The version of this StoreItem.  # noqa: E501
        :type: int
        """

        self._version = version

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(StoreItem, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, StoreItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
