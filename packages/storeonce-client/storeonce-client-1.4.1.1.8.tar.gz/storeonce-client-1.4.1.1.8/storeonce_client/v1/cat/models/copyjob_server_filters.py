# coding: utf-8

"""
    (C) Copyright 2018-2019 Hewlett Packard Enterprise Development LP

    Catalyst

    unused  # noqa: E501

    Component version: 10.3.15-SNAPSHOT
"""


import pprint
import re  # noqa: F401

import six


class CopyjobServerFilters(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'server_address_filter': 'str',
        'server_address_filter_exact_match': 'bool',
        'store_name_filter': 'str',
        'store_name_filter_exact_match': 'bool',
        'item_name_filter': 'str',
        'item_name_filter_exact_match': 'bool'
    }

    attribute_map = {
        'server_address_filter': 'serverAddressFilter',
        'server_address_filter_exact_match': 'serverAddressFilterExactMatch',
        'store_name_filter': 'storeNameFilter',
        'store_name_filter_exact_match': 'storeNameFilterExactMatch',
        'item_name_filter': 'itemNameFilter',
        'item_name_filter_exact_match': 'itemNameFilterExactMatch'
    }

    def __init__(self, server_address_filter=None, server_address_filter_exact_match=False, store_name_filter=None, store_name_filter_exact_match=False, item_name_filter=None, item_name_filter_exact_match=False):  # noqa: E501
        """CopyjobServerFilters - a model defined in Swagger"""  # noqa: E501

        self._server_address_filter = None
        self._server_address_filter_exact_match = None
        self._store_name_filter = None
        self._store_name_filter_exact_match = None
        self._item_name_filter = None
        self._item_name_filter_exact_match = None
        self.discriminator = None

        if server_address_filter is not None:
            self.server_address_filter = server_address_filter
        if server_address_filter_exact_match is not None:
            self.server_address_filter_exact_match = server_address_filter_exact_match
        if store_name_filter is not None:
            self.store_name_filter = store_name_filter
        if store_name_filter_exact_match is not None:
            self.store_name_filter_exact_match = store_name_filter_exact_match
        if item_name_filter is not None:
            self.item_name_filter = item_name_filter
        if item_name_filter_exact_match is not None:
            self.item_name_filter_exact_match = item_name_filter_exact_match

    @property
    def server_address_filter(self):
        """Gets the server_address_filter of this CopyjobServerFilters.  # noqa: E501

        Server address search pattern  # noqa: E501

        :return: The server_address_filter of this CopyjobServerFilters.  # noqa: E501
        :rtype: str
        """
        return self._server_address_filter

    @server_address_filter.setter
    def server_address_filter(self, server_address_filter):
        """Sets the server_address_filter of this CopyjobServerFilters.

        Server address search pattern  # noqa: E501

        :param server_address_filter: The server_address_filter of this CopyjobServerFilters.  # noqa: E501
        :type: str
        """

        self._server_address_filter = server_address_filter

    @property
    def server_address_filter_exact_match(self):
        """Gets the server_address_filter_exact_match of this CopyjobServerFilters.  # noqa: E501

        True if this filter uses exact server address matching  # noqa: E501

        :return: The server_address_filter_exact_match of this CopyjobServerFilters.  # noqa: E501
        :rtype: bool
        """
        return self._server_address_filter_exact_match

    @server_address_filter_exact_match.setter
    def server_address_filter_exact_match(self, server_address_filter_exact_match):
        """Sets the server_address_filter_exact_match of this CopyjobServerFilters.

        True if this filter uses exact server address matching  # noqa: E501

        :param server_address_filter_exact_match: The server_address_filter_exact_match of this CopyjobServerFilters.  # noqa: E501
        :type: bool
        """

        self._server_address_filter_exact_match = server_address_filter_exact_match

    @property
    def store_name_filter(self):
        """Gets the store_name_filter of this CopyjobServerFilters.  # noqa: E501

        Store name search pattern  # noqa: E501

        :return: The store_name_filter of this CopyjobServerFilters.  # noqa: E501
        :rtype: str
        """
        return self._store_name_filter

    @store_name_filter.setter
    def store_name_filter(self, store_name_filter):
        """Sets the store_name_filter of this CopyjobServerFilters.

        Store name search pattern  # noqa: E501

        :param store_name_filter: The store_name_filter of this CopyjobServerFilters.  # noqa: E501
        :type: str
        """

        self._store_name_filter = store_name_filter

    @property
    def store_name_filter_exact_match(self):
        """Gets the store_name_filter_exact_match of this CopyjobServerFilters.  # noqa: E501

        True if this filter uses exact store name matching  # noqa: E501

        :return: The store_name_filter_exact_match of this CopyjobServerFilters.  # noqa: E501
        :rtype: bool
        """
        return self._store_name_filter_exact_match

    @store_name_filter_exact_match.setter
    def store_name_filter_exact_match(self, store_name_filter_exact_match):
        """Sets the store_name_filter_exact_match of this CopyjobServerFilters.

        True if this filter uses exact store name matching  # noqa: E501

        :param store_name_filter_exact_match: The store_name_filter_exact_match of this CopyjobServerFilters.  # noqa: E501
        :type: bool
        """

        self._store_name_filter_exact_match = store_name_filter_exact_match

    @property
    def item_name_filter(self):
        """Gets the item_name_filter of this CopyjobServerFilters.  # noqa: E501

        Item name search pattern  # noqa: E501

        :return: The item_name_filter of this CopyjobServerFilters.  # noqa: E501
        :rtype: str
        """
        return self._item_name_filter

    @item_name_filter.setter
    def item_name_filter(self, item_name_filter):
        """Sets the item_name_filter of this CopyjobServerFilters.

        Item name search pattern  # noqa: E501

        :param item_name_filter: The item_name_filter of this CopyjobServerFilters.  # noqa: E501
        :type: str
        """

        self._item_name_filter = item_name_filter

    @property
    def item_name_filter_exact_match(self):
        """Gets the item_name_filter_exact_match of this CopyjobServerFilters.  # noqa: E501

        True if this filter uses exact item name matching  # noqa: E501

        :return: The item_name_filter_exact_match of this CopyjobServerFilters.  # noqa: E501
        :rtype: bool
        """
        return self._item_name_filter_exact_match

    @item_name_filter_exact_match.setter
    def item_name_filter_exact_match(self, item_name_filter_exact_match):
        """Sets the item_name_filter_exact_match of this CopyjobServerFilters.

        True if this filter uses exact item name matching  # noqa: E501

        :param item_name_filter_exact_match: The item_name_filter_exact_match of this CopyjobServerFilters.  # noqa: E501
        :type: bool
        """

        self._item_name_filter_exact_match = item_name_filter_exact_match

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CopyjobServerFilters, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CopyjobServerFilters):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
