# coding: utf-8

"""
    (C) Copyright 2018-2019 Hewlett Packard Enterprise Development LP

    Catalyst

    unused  # noqa: E501

    Component version: 10.3.15-SNAPSHOT
"""


import pprint
import re  # noqa: F401

import six


class StoreUsageSummary(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'vendor': 'str',
        'num_items': 'int',
        'num_datajobs_started': 'int',
        'num_inbound_copyjobs_started': 'int',
        'num_outbound_copyjobs_started': 'int',
        'user_bytes': 'int',
        'tcp_ip': 'DataAndCopyJobsBytes',
        'fc': 'DataAndCopyJobsBytes'
    }

    attribute_map = {
        'vendor': 'vendor',
        'num_items': 'numItems',
        'num_datajobs_started': 'numDatajobsStarted',
        'num_inbound_copyjobs_started': 'numInboundCopyjobsStarted',
        'num_outbound_copyjobs_started': 'numOutboundCopyjobsStarted',
        'user_bytes': 'userBytes',
        'tcp_ip': 'tcpIp',
        'fc': 'fc'
    }

    def __init__(self, vendor=None, num_items=None, num_datajobs_started=None, num_inbound_copyjobs_started=None, num_outbound_copyjobs_started=None, user_bytes=None, tcp_ip=None, fc=None):  # noqa: E501
        """StoreUsageSummary - a model defined in Swagger"""  # noqa: E501

        self._vendor = None
        self._num_items = None
        self._num_datajobs_started = None
        self._num_inbound_copyjobs_started = None
        self._num_outbound_copyjobs_started = None
        self._user_bytes = None
        self._tcp_ip = None
        self._fc = None
        self.discriminator = None

        if vendor is not None:
            self.vendor = vendor
        if num_items is not None:
            self.num_items = num_items
        if num_datajobs_started is not None:
            self.num_datajobs_started = num_datajobs_started
        if num_inbound_copyjobs_started is not None:
            self.num_inbound_copyjobs_started = num_inbound_copyjobs_started
        if num_outbound_copyjobs_started is not None:
            self.num_outbound_copyjobs_started = num_outbound_copyjobs_started
        if user_bytes is not None:
            self.user_bytes = user_bytes
        if tcp_ip is not None:
            self.tcp_ip = tcp_ip
        if fc is not None:
            self.fc = fc

    @property
    def vendor(self):
        """Gets the vendor of this StoreUsageSummary.  # noqa: E501

        The name of the vendor  # noqa: E501

        :return: The vendor of this StoreUsageSummary.  # noqa: E501
        :rtype: str
        """
        return self._vendor

    @vendor.setter
    def vendor(self, vendor):
        """Sets the vendor of this StoreUsageSummary.

        The name of the vendor  # noqa: E501

        :param vendor: The vendor of this StoreUsageSummary.  # noqa: E501
        :type: str
        """

        self._vendor = vendor

    @property
    def num_items(self):
        """Gets the num_items of this StoreUsageSummary.  # noqa: E501

        The number of items that have been created and haven't been deleted  # noqa: E501

        :return: The num_items of this StoreUsageSummary.  # noqa: E501
        :rtype: int
        """
        return self._num_items

    @num_items.setter
    def num_items(self, num_items):
        """Sets the num_items of this StoreUsageSummary.

        The number of items that have been created and haven't been deleted  # noqa: E501

        :param num_items: The num_items of this StoreUsageSummary.  # noqa: E501
        :type: int
        """

        self._num_items = num_items

    @property
    def num_datajobs_started(self):
        """Gets the num_datajobs_started of this StoreUsageSummary.  # noqa: E501

        The number of Datajobs that have been started  # noqa: E501

        :return: The num_datajobs_started of this StoreUsageSummary.  # noqa: E501
        :rtype: int
        """
        return self._num_datajobs_started

    @num_datajobs_started.setter
    def num_datajobs_started(self, num_datajobs_started):
        """Sets the num_datajobs_started of this StoreUsageSummary.

        The number of Datajobs that have been started  # noqa: E501

        :param num_datajobs_started: The num_datajobs_started of this StoreUsageSummary.  # noqa: E501
        :type: int
        """

        self._num_datajobs_started = num_datajobs_started

    @property
    def num_inbound_copyjobs_started(self):
        """Gets the num_inbound_copyjobs_started of this StoreUsageSummary.  # noqa: E501

        The number of Inbound Copyjobs that have been started  # noqa: E501

        :return: The num_inbound_copyjobs_started of this StoreUsageSummary.  # noqa: E501
        :rtype: int
        """
        return self._num_inbound_copyjobs_started

    @num_inbound_copyjobs_started.setter
    def num_inbound_copyjobs_started(self, num_inbound_copyjobs_started):
        """Sets the num_inbound_copyjobs_started of this StoreUsageSummary.

        The number of Inbound Copyjobs that have been started  # noqa: E501

        :param num_inbound_copyjobs_started: The num_inbound_copyjobs_started of this StoreUsageSummary.  # noqa: E501
        :type: int
        """

        self._num_inbound_copyjobs_started = num_inbound_copyjobs_started

    @property
    def num_outbound_copyjobs_started(self):
        """Gets the num_outbound_copyjobs_started of this StoreUsageSummary.  # noqa: E501

        The number of Outbound Copyjobs that have been started  # noqa: E501

        :return: The num_outbound_copyjobs_started of this StoreUsageSummary.  # noqa: E501
        :rtype: int
        """
        return self._num_outbound_copyjobs_started

    @num_outbound_copyjobs_started.setter
    def num_outbound_copyjobs_started(self, num_outbound_copyjobs_started):
        """Sets the num_outbound_copyjobs_started of this StoreUsageSummary.

        The number of Outbound Copyjobs that have been started  # noqa: E501

        :param num_outbound_copyjobs_started: The num_outbound_copyjobs_started of this StoreUsageSummary.  # noqa: E501
        :type: int
        """

        self._num_outbound_copyjobs_started = num_outbound_copyjobs_started

    @property
    def user_bytes(self):
        """Gets the user_bytes of this StoreUsageSummary.  # noqa: E501

        The total size of the user data that has been  stored (before dedupe)  # noqa: E501

        :return: The user_bytes of this StoreUsageSummary.  # noqa: E501
        :rtype: int
        """
        return self._user_bytes

    @user_bytes.setter
    def user_bytes(self, user_bytes):
        """Sets the user_bytes of this StoreUsageSummary.

        The total size of the user data that has been  stored (before dedupe)  # noqa: E501

        :param user_bytes: The user_bytes of this StoreUsageSummary.  # noqa: E501
        :type: int
        """

        self._user_bytes = user_bytes

    @property
    def tcp_ip(self):
        """Gets the tcp_ip of this StoreUsageSummary.  # noqa: E501

        TCP IP data transfer statistics  # noqa: E501

        :return: The tcp_ip of this StoreUsageSummary.  # noqa: E501
        :rtype: DataAndCopyJobsBytes
        """
        return self._tcp_ip

    @tcp_ip.setter
    def tcp_ip(self, tcp_ip):
        """Sets the tcp_ip of this StoreUsageSummary.

        TCP IP data transfer statistics  # noqa: E501

        :param tcp_ip: The tcp_ip of this StoreUsageSummary.  # noqa: E501
        :type: DataAndCopyJobsBytes
        """

        self._tcp_ip = tcp_ip

    @property
    def fc(self):
        """Gets the fc of this StoreUsageSummary.  # noqa: E501

        FC data transfer statistics  # noqa: E501

        :return: The fc of this StoreUsageSummary.  # noqa: E501
        :rtype: DataAndCopyJobsBytes
        """
        return self._fc

    @fc.setter
    def fc(self, fc):
        """Sets the fc of this StoreUsageSummary.

        FC data transfer statistics  # noqa: E501

        :param fc: The fc of this StoreUsageSummary.  # noqa: E501
        :type: DataAndCopyJobsBytes
        """

        self._fc = fc

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(StoreUsageSummary, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, StoreUsageSummary):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
