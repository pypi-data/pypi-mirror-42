# coding: utf-8

"""
    (C) Copyright 2018-2019 Hewlett Packard Enterprise Development LP

    Catalyst

    unused  # noqa: E501

    Component version: 10.3.15-SNAPSHOT
"""


import pprint
import re  # noqa: F401

import six


class CloudStoreDiagnostics(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'timestamp': 'str',
        'status': 'int',
        'status_string': 'str',
        'status_information': 'str',
        'valid_proxy_status': 'int',
        'valid_proxy_status_string': 'str',
        'valid_host_status': 'int',
        'valid_host_status_string': 'str',
        'valid_credentials_status': 'int',
        'valid_credentials_status_string': 'str',
        'trusted_encryption_certificate_status': 'int',
        'trusted_encryption_certificate_status_string': 'str',
        'put_object_status': 'int',
        'put_object_status_string': 'str',
        'get_object_status': 'int',
        'get_object_status_string': 'str',
        'get_objects_status': 'int',
        'get_objects_status_string': 'str',
        'delete_object_status': 'int',
        'delete_object_status_string': 'str',
        'connection_latency_status': 'int',
        'connection_latency_status_string': 'str',
        'connection_latency': 'int',
        'upload_test_write100_status': 'int',
        'upload_test_write100_status_string': 'str',
        'upload_test_write100_throughput': 'int',
        'upload_test_write0_status': 'int',
        'upload_test_write0_status_string': 'str',
        'upload_test_write0_throughput': 'int',
        'upload_test_write1_status': 'int',
        'upload_test_write1_status_string': 'str',
        'upload_test_write1_throughput': 'int',
        'upload_test_write5_status': 'int',
        'upload_test_write5_status_string': 'str',
        'upload_test_write5_throughput': 'int',
        'upload_test_write10_status': 'int',
        'upload_test_write10_status_string': 'str',
        'upload_test_write10_throughput': 'int',
        'download_test_read100_status': 'int',
        'download_test_read100_status_string': 'str',
        'download_test_read100_throughput': 'int',
        'download_test_read0_status': 'int',
        'download_test_read0_status_string': 'str',
        'download_test_read0_throughput': 'int',
        'download_test_read1_status': 'int',
        'download_test_read1_status_string': 'str',
        'download_test_read1_throughput': 'int',
        'download_test_read5_status': 'int',
        'download_test_read5_status_string': 'str',
        'download_test_read5_throughput': 'int',
        'download_test_read10_status': 'int',
        'download_test_read10_status_string': 'str',
        'download_test_read10_throughput': 'int'
    }

    attribute_map = {
        'id': 'id',
        'timestamp': 'timestamp',
        'status': 'status',
        'status_string': 'statusString',
        'status_information': 'statusInformation',
        'valid_proxy_status': 'validProxyStatus',
        'valid_proxy_status_string': 'validProxyStatusString',
        'valid_host_status': 'validHostStatus',
        'valid_host_status_string': 'validHostStatusString',
        'valid_credentials_status': 'validCredentialsStatus',
        'valid_credentials_status_string': 'validCredentialsStatusString',
        'trusted_encryption_certificate_status': 'trustedEncryptionCertificateStatus',
        'trusted_encryption_certificate_status_string': 'trustedEncryptionCertificateStatusString',
        'put_object_status': 'putObjectStatus',
        'put_object_status_string': 'putObjectStatusString',
        'get_object_status': 'getObjectStatus',
        'get_object_status_string': 'getObjectStatusString',
        'get_objects_status': 'getObjectsStatus',
        'get_objects_status_string': 'getObjectsStatusString',
        'delete_object_status': 'deleteObjectStatus',
        'delete_object_status_string': 'deleteObjectStatusString',
        'connection_latency_status': 'connectionLatencyStatus',
        'connection_latency_status_string': 'connectionLatencyStatusString',
        'connection_latency': 'connectionLatency',
        'upload_test_write100_status': 'uploadTestWrite100Status',
        'upload_test_write100_status_string': 'uploadTestWrite100StatusString',
        'upload_test_write100_throughput': 'uploadTestWrite100Throughput',
        'upload_test_write0_status': 'uploadTestWrite0Status',
        'upload_test_write0_status_string': 'uploadTestWrite0StatusString',
        'upload_test_write0_throughput': 'uploadTestWrite0Throughput',
        'upload_test_write1_status': 'uploadTestWrite1Status',
        'upload_test_write1_status_string': 'uploadTestWrite1StatusString',
        'upload_test_write1_throughput': 'uploadTestWrite1Throughput',
        'upload_test_write5_status': 'uploadTestWrite5Status',
        'upload_test_write5_status_string': 'uploadTestWrite5StatusString',
        'upload_test_write5_throughput': 'uploadTestWrite5Throughput',
        'upload_test_write10_status': 'uploadTestWrite10Status',
        'upload_test_write10_status_string': 'uploadTestWrite10StatusString',
        'upload_test_write10_throughput': 'uploadTestWrite10Throughput',
        'download_test_read100_status': 'downloadTestRead100Status',
        'download_test_read100_status_string': 'downloadTestRead100StatusString',
        'download_test_read100_throughput': 'downloadTestRead100Throughput',
        'download_test_read0_status': 'downloadTestRead0Status',
        'download_test_read0_status_string': 'downloadTestRead0StatusString',
        'download_test_read0_throughput': 'downloadTestRead0Throughput',
        'download_test_read1_status': 'downloadTestRead1Status',
        'download_test_read1_status_string': 'downloadTestRead1StatusString',
        'download_test_read1_throughput': 'downloadTestRead1Throughput',
        'download_test_read5_status': 'downloadTestRead5Status',
        'download_test_read5_status_string': 'downloadTestRead5StatusString',
        'download_test_read5_throughput': 'downloadTestRead5Throughput',
        'download_test_read10_status': 'downloadTestRead10Status',
        'download_test_read10_status_string': 'downloadTestRead10StatusString',
        'download_test_read10_throughput': 'downloadTestRead10Throughput'
    }

    def __init__(self, id=None, timestamp=None, status=None, status_string=None, status_information=None, valid_proxy_status=None, valid_proxy_status_string=None, valid_host_status=None, valid_host_status_string=None, valid_credentials_status=None, valid_credentials_status_string=None, trusted_encryption_certificate_status=None, trusted_encryption_certificate_status_string=None, put_object_status=None, put_object_status_string=None, get_object_status=None, get_object_status_string=None, get_objects_status=None, get_objects_status_string=None, delete_object_status=None, delete_object_status_string=None, connection_latency_status=None, connection_latency_status_string=None, connection_latency=None, upload_test_write100_status=None, upload_test_write100_status_string=None, upload_test_write100_throughput=None, upload_test_write0_status=None, upload_test_write0_status_string=None, upload_test_write0_throughput=None, upload_test_write1_status=None, upload_test_write1_status_string=None, upload_test_write1_throughput=None, upload_test_write5_status=None, upload_test_write5_status_string=None, upload_test_write5_throughput=None, upload_test_write10_status=None, upload_test_write10_status_string=None, upload_test_write10_throughput=None, download_test_read100_status=None, download_test_read100_status_string=None, download_test_read100_throughput=None, download_test_read0_status=None, download_test_read0_status_string=None, download_test_read0_throughput=None, download_test_read1_status=None, download_test_read1_status_string=None, download_test_read1_throughput=None, download_test_read5_status=None, download_test_read5_status_string=None, download_test_read5_throughput=None, download_test_read10_status=None, download_test_read10_status_string=None, download_test_read10_throughput=None):  # noqa: E501
        """CloudStoreDiagnostics - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._timestamp = None
        self._status = None
        self._status_string = None
        self._status_information = None
        self._valid_proxy_status = None
        self._valid_proxy_status_string = None
        self._valid_host_status = None
        self._valid_host_status_string = None
        self._valid_credentials_status = None
        self._valid_credentials_status_string = None
        self._trusted_encryption_certificate_status = None
        self._trusted_encryption_certificate_status_string = None
        self._put_object_status = None
        self._put_object_status_string = None
        self._get_object_status = None
        self._get_object_status_string = None
        self._get_objects_status = None
        self._get_objects_status_string = None
        self._delete_object_status = None
        self._delete_object_status_string = None
        self._connection_latency_status = None
        self._connection_latency_status_string = None
        self._connection_latency = None
        self._upload_test_write100_status = None
        self._upload_test_write100_status_string = None
        self._upload_test_write100_throughput = None
        self._upload_test_write0_status = None
        self._upload_test_write0_status_string = None
        self._upload_test_write0_throughput = None
        self._upload_test_write1_status = None
        self._upload_test_write1_status_string = None
        self._upload_test_write1_throughput = None
        self._upload_test_write5_status = None
        self._upload_test_write5_status_string = None
        self._upload_test_write5_throughput = None
        self._upload_test_write10_status = None
        self._upload_test_write10_status_string = None
        self._upload_test_write10_throughput = None
        self._download_test_read100_status = None
        self._download_test_read100_status_string = None
        self._download_test_read100_throughput = None
        self._download_test_read0_status = None
        self._download_test_read0_status_string = None
        self._download_test_read0_throughput = None
        self._download_test_read1_status = None
        self._download_test_read1_status_string = None
        self._download_test_read1_throughput = None
        self._download_test_read5_status = None
        self._download_test_read5_status_string = None
        self._download_test_read5_throughput = None
        self._download_test_read10_status = None
        self._download_test_read10_status_string = None
        self._download_test_read10_throughput = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if timestamp is not None:
            self.timestamp = timestamp
        if status is not None:
            self.status = status
        if status_string is not None:
            self.status_string = status_string
        if status_information is not None:
            self.status_information = status_information
        if valid_proxy_status is not None:
            self.valid_proxy_status = valid_proxy_status
        if valid_proxy_status_string is not None:
            self.valid_proxy_status_string = valid_proxy_status_string
        if valid_host_status is not None:
            self.valid_host_status = valid_host_status
        if valid_host_status_string is not None:
            self.valid_host_status_string = valid_host_status_string
        if valid_credentials_status is not None:
            self.valid_credentials_status = valid_credentials_status
        if valid_credentials_status_string is not None:
            self.valid_credentials_status_string = valid_credentials_status_string
        if trusted_encryption_certificate_status is not None:
            self.trusted_encryption_certificate_status = trusted_encryption_certificate_status
        if trusted_encryption_certificate_status_string is not None:
            self.trusted_encryption_certificate_status_string = trusted_encryption_certificate_status_string
        if put_object_status is not None:
            self.put_object_status = put_object_status
        if put_object_status_string is not None:
            self.put_object_status_string = put_object_status_string
        if get_object_status is not None:
            self.get_object_status = get_object_status
        if get_object_status_string is not None:
            self.get_object_status_string = get_object_status_string
        if get_objects_status is not None:
            self.get_objects_status = get_objects_status
        if get_objects_status_string is not None:
            self.get_objects_status_string = get_objects_status_string
        if delete_object_status is not None:
            self.delete_object_status = delete_object_status
        if delete_object_status_string is not None:
            self.delete_object_status_string = delete_object_status_string
        if connection_latency_status is not None:
            self.connection_latency_status = connection_latency_status
        if connection_latency_status_string is not None:
            self.connection_latency_status_string = connection_latency_status_string
        if connection_latency is not None:
            self.connection_latency = connection_latency
        if upload_test_write100_status is not None:
            self.upload_test_write100_status = upload_test_write100_status
        if upload_test_write100_status_string is not None:
            self.upload_test_write100_status_string = upload_test_write100_status_string
        if upload_test_write100_throughput is not None:
            self.upload_test_write100_throughput = upload_test_write100_throughput
        if upload_test_write0_status is not None:
            self.upload_test_write0_status = upload_test_write0_status
        if upload_test_write0_status_string is not None:
            self.upload_test_write0_status_string = upload_test_write0_status_string
        if upload_test_write0_throughput is not None:
            self.upload_test_write0_throughput = upload_test_write0_throughput
        if upload_test_write1_status is not None:
            self.upload_test_write1_status = upload_test_write1_status
        if upload_test_write1_status_string is not None:
            self.upload_test_write1_status_string = upload_test_write1_status_string
        if upload_test_write1_throughput is not None:
            self.upload_test_write1_throughput = upload_test_write1_throughput
        if upload_test_write5_status is not None:
            self.upload_test_write5_status = upload_test_write5_status
        if upload_test_write5_status_string is not None:
            self.upload_test_write5_status_string = upload_test_write5_status_string
        if upload_test_write5_throughput is not None:
            self.upload_test_write5_throughput = upload_test_write5_throughput
        if upload_test_write10_status is not None:
            self.upload_test_write10_status = upload_test_write10_status
        if upload_test_write10_status_string is not None:
            self.upload_test_write10_status_string = upload_test_write10_status_string
        if upload_test_write10_throughput is not None:
            self.upload_test_write10_throughput = upload_test_write10_throughput
        if download_test_read100_status is not None:
            self.download_test_read100_status = download_test_read100_status
        if download_test_read100_status_string is not None:
            self.download_test_read100_status_string = download_test_read100_status_string
        if download_test_read100_throughput is not None:
            self.download_test_read100_throughput = download_test_read100_throughput
        if download_test_read0_status is not None:
            self.download_test_read0_status = download_test_read0_status
        if download_test_read0_status_string is not None:
            self.download_test_read0_status_string = download_test_read0_status_string
        if download_test_read0_throughput is not None:
            self.download_test_read0_throughput = download_test_read0_throughput
        if download_test_read1_status is not None:
            self.download_test_read1_status = download_test_read1_status
        if download_test_read1_status_string is not None:
            self.download_test_read1_status_string = download_test_read1_status_string
        if download_test_read1_throughput is not None:
            self.download_test_read1_throughput = download_test_read1_throughput
        if download_test_read5_status is not None:
            self.download_test_read5_status = download_test_read5_status
        if download_test_read5_status_string is not None:
            self.download_test_read5_status_string = download_test_read5_status_string
        if download_test_read5_throughput is not None:
            self.download_test_read5_throughput = download_test_read5_throughput
        if download_test_read10_status is not None:
            self.download_test_read10_status = download_test_read10_status
        if download_test_read10_status_string is not None:
            self.download_test_read10_status_string = download_test_read10_status_string
        if download_test_read10_throughput is not None:
            self.download_test_read10_throughput = download_test_read10_throughput

    @property
    def id(self):
        """Gets the id of this CloudStoreDiagnostics.  # noqa: E501

        ID number for the diagnostic result returned  # noqa: E501

        :return: The id of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CloudStoreDiagnostics.

        ID number for the diagnostic result returned  # noqa: E501

        :param id: The id of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def timestamp(self):
        """Gets the timestamp of this CloudStoreDiagnostics.  # noqa: E501

        Time the test was run  # noqa: E501

        :return: The timestamp of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this CloudStoreDiagnostics.

        Time the test was run  # noqa: E501

        :param timestamp: The timestamp of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._timestamp = timestamp

    @property
    def status(self):
        """Gets the status of this CloudStoreDiagnostics.  # noqa: E501

        Enum for status of diagnostic run  # noqa: E501

        :return: The status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CloudStoreDiagnostics.

        Enum for status of diagnostic run  # noqa: E501

        :param status: The status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._status = status

    @property
    def status_string(self):
        """Gets the status_string of this CloudStoreDiagnostics.  # noqa: E501

        Localised string for status of run  # noqa: E501

        :return: The status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._status_string

    @status_string.setter
    def status_string(self, status_string):
        """Sets the status_string of this CloudStoreDiagnostics.

        Localised string for status of run  # noqa: E501

        :param status_string: The status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._status_string = status_string

    @property
    def status_information(self):
        """Gets the status_information of this CloudStoreDiagnostics.  # noqa: E501

        More verbose status of run  # noqa: E501

        :return: The status_information of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._status_information

    @status_information.setter
    def status_information(self, status_information):
        """Sets the status_information of this CloudStoreDiagnostics.

        More verbose status of run  # noqa: E501

        :param status_information: The status_information of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._status_information = status_information

    @property
    def valid_proxy_status(self):
        """Gets the valid_proxy_status of this CloudStoreDiagnostics.  # noqa: E501

        Status of proxy test  # noqa: E501

        :return: The valid_proxy_status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._valid_proxy_status

    @valid_proxy_status.setter
    def valid_proxy_status(self, valid_proxy_status):
        """Sets the valid_proxy_status of this CloudStoreDiagnostics.

        Status of proxy test  # noqa: E501

        :param valid_proxy_status: The valid_proxy_status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._valid_proxy_status = valid_proxy_status

    @property
    def valid_proxy_status_string(self):
        """Gets the valid_proxy_status_string of this CloudStoreDiagnostics.  # noqa: E501

        String status of proxy test  # noqa: E501

        :return: The valid_proxy_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._valid_proxy_status_string

    @valid_proxy_status_string.setter
    def valid_proxy_status_string(self, valid_proxy_status_string):
        """Sets the valid_proxy_status_string of this CloudStoreDiagnostics.

        String status of proxy test  # noqa: E501

        :param valid_proxy_status_string: The valid_proxy_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._valid_proxy_status_string = valid_proxy_status_string

    @property
    def valid_host_status(self):
        """Gets the valid_host_status of this CloudStoreDiagnostics.  # noqa: E501

        Status of address connection test  # noqa: E501

        :return: The valid_host_status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._valid_host_status

    @valid_host_status.setter
    def valid_host_status(self, valid_host_status):
        """Sets the valid_host_status of this CloudStoreDiagnostics.

        Status of address connection test  # noqa: E501

        :param valid_host_status: The valid_host_status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._valid_host_status = valid_host_status

    @property
    def valid_host_status_string(self):
        """Gets the valid_host_status_string of this CloudStoreDiagnostics.  # noqa: E501

        String status of address connection test  # noqa: E501

        :return: The valid_host_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._valid_host_status_string

    @valid_host_status_string.setter
    def valid_host_status_string(self, valid_host_status_string):
        """Sets the valid_host_status_string of this CloudStoreDiagnostics.

        String status of address connection test  # noqa: E501

        :param valid_host_status_string: The valid_host_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._valid_host_status_string = valid_host_status_string

    @property
    def valid_credentials_status(self):
        """Gets the valid_credentials_status of this CloudStoreDiagnostics.  # noqa: E501

        Status of credentials test  # noqa: E501

        :return: The valid_credentials_status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._valid_credentials_status

    @valid_credentials_status.setter
    def valid_credentials_status(self, valid_credentials_status):
        """Sets the valid_credentials_status of this CloudStoreDiagnostics.

        Status of credentials test  # noqa: E501

        :param valid_credentials_status: The valid_credentials_status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._valid_credentials_status = valid_credentials_status

    @property
    def valid_credentials_status_string(self):
        """Gets the valid_credentials_status_string of this CloudStoreDiagnostics.  # noqa: E501

        String status of credentials test  # noqa: E501

        :return: The valid_credentials_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._valid_credentials_status_string

    @valid_credentials_status_string.setter
    def valid_credentials_status_string(self, valid_credentials_status_string):
        """Sets the valid_credentials_status_string of this CloudStoreDiagnostics.

        String status of credentials test  # noqa: E501

        :param valid_credentials_status_string: The valid_credentials_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._valid_credentials_status_string = valid_credentials_status_string

    @property
    def trusted_encryption_certificate_status(self):
        """Gets the trusted_encryption_certificate_status of this CloudStoreDiagnostics.  # noqa: E501

        Status of certificate validation test  # noqa: E501

        :return: The trusted_encryption_certificate_status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._trusted_encryption_certificate_status

    @trusted_encryption_certificate_status.setter
    def trusted_encryption_certificate_status(self, trusted_encryption_certificate_status):
        """Sets the trusted_encryption_certificate_status of this CloudStoreDiagnostics.

        Status of certificate validation test  # noqa: E501

        :param trusted_encryption_certificate_status: The trusted_encryption_certificate_status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._trusted_encryption_certificate_status = trusted_encryption_certificate_status

    @property
    def trusted_encryption_certificate_status_string(self):
        """Gets the trusted_encryption_certificate_status_string of this CloudStoreDiagnostics.  # noqa: E501

        String status of certificate validation test  # noqa: E501

        :return: The trusted_encryption_certificate_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._trusted_encryption_certificate_status_string

    @trusted_encryption_certificate_status_string.setter
    def trusted_encryption_certificate_status_string(self, trusted_encryption_certificate_status_string):
        """Sets the trusted_encryption_certificate_status_string of this CloudStoreDiagnostics.

        String status of certificate validation test  # noqa: E501

        :param trusted_encryption_certificate_status_string: The trusted_encryption_certificate_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._trusted_encryption_certificate_status_string = trusted_encryption_certificate_status_string

    @property
    def put_object_status(self):
        """Gets the put_object_status of this CloudStoreDiagnostics.  # noqa: E501

        Status of PUT test  # noqa: E501

        :return: The put_object_status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._put_object_status

    @put_object_status.setter
    def put_object_status(self, put_object_status):
        """Sets the put_object_status of this CloudStoreDiagnostics.

        Status of PUT test  # noqa: E501

        :param put_object_status: The put_object_status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._put_object_status = put_object_status

    @property
    def put_object_status_string(self):
        """Gets the put_object_status_string of this CloudStoreDiagnostics.  # noqa: E501

        String status of PUT test  # noqa: E501

        :return: The put_object_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._put_object_status_string

    @put_object_status_string.setter
    def put_object_status_string(self, put_object_status_string):
        """Sets the put_object_status_string of this CloudStoreDiagnostics.

        String status of PUT test  # noqa: E501

        :param put_object_status_string: The put_object_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._put_object_status_string = put_object_status_string

    @property
    def get_object_status(self):
        """Gets the get_object_status of this CloudStoreDiagnostics.  # noqa: E501

        Status of GET single test  # noqa: E501

        :return: The get_object_status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._get_object_status

    @get_object_status.setter
    def get_object_status(self, get_object_status):
        """Sets the get_object_status of this CloudStoreDiagnostics.

        Status of GET single test  # noqa: E501

        :param get_object_status: The get_object_status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._get_object_status = get_object_status

    @property
    def get_object_status_string(self):
        """Gets the get_object_status_string of this CloudStoreDiagnostics.  # noqa: E501

        String status of GET single test  # noqa: E501

        :return: The get_object_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._get_object_status_string

    @get_object_status_string.setter
    def get_object_status_string(self, get_object_status_string):
        """Sets the get_object_status_string of this CloudStoreDiagnostics.

        String status of GET single test  # noqa: E501

        :param get_object_status_string: The get_object_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._get_object_status_string = get_object_status_string

    @property
    def get_objects_status(self):
        """Gets the get_objects_status of this CloudStoreDiagnostics.  # noqa: E501

        Status of get collection test  # noqa: E501

        :return: The get_objects_status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._get_objects_status

    @get_objects_status.setter
    def get_objects_status(self, get_objects_status):
        """Sets the get_objects_status of this CloudStoreDiagnostics.

        Status of get collection test  # noqa: E501

        :param get_objects_status: The get_objects_status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._get_objects_status = get_objects_status

    @property
    def get_objects_status_string(self):
        """Gets the get_objects_status_string of this CloudStoreDiagnostics.  # noqa: E501

        String status of get collection test  # noqa: E501

        :return: The get_objects_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._get_objects_status_string

    @get_objects_status_string.setter
    def get_objects_status_string(self, get_objects_status_string):
        """Sets the get_objects_status_string of this CloudStoreDiagnostics.

        String status of get collection test  # noqa: E501

        :param get_objects_status_string: The get_objects_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._get_objects_status_string = get_objects_status_string

    @property
    def delete_object_status(self):
        """Gets the delete_object_status of this CloudStoreDiagnostics.  # noqa: E501

        Status of DELETE test  # noqa: E501

        :return: The delete_object_status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._delete_object_status

    @delete_object_status.setter
    def delete_object_status(self, delete_object_status):
        """Sets the delete_object_status of this CloudStoreDiagnostics.

        Status of DELETE test  # noqa: E501

        :param delete_object_status: The delete_object_status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._delete_object_status = delete_object_status

    @property
    def delete_object_status_string(self):
        """Gets the delete_object_status_string of this CloudStoreDiagnostics.  # noqa: E501

        String status of DELETE test  # noqa: E501

        :return: The delete_object_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._delete_object_status_string

    @delete_object_status_string.setter
    def delete_object_status_string(self, delete_object_status_string):
        """Sets the delete_object_status_string of this CloudStoreDiagnostics.

        String status of DELETE test  # noqa: E501

        :param delete_object_status_string: The delete_object_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._delete_object_status_string = delete_object_status_string

    @property
    def connection_latency_status(self):
        """Gets the connection_latency_status of this CloudStoreDiagnostics.  # noqa: E501

        Status of latency test  # noqa: E501

        :return: The connection_latency_status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._connection_latency_status

    @connection_latency_status.setter
    def connection_latency_status(self, connection_latency_status):
        """Sets the connection_latency_status of this CloudStoreDiagnostics.

        Status of latency test  # noqa: E501

        :param connection_latency_status: The connection_latency_status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._connection_latency_status = connection_latency_status

    @property
    def connection_latency_status_string(self):
        """Gets the connection_latency_status_string of this CloudStoreDiagnostics.  # noqa: E501

        String status of latency test  # noqa: E501

        :return: The connection_latency_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._connection_latency_status_string

    @connection_latency_status_string.setter
    def connection_latency_status_string(self, connection_latency_status_string):
        """Sets the connection_latency_status_string of this CloudStoreDiagnostics.

        String status of latency test  # noqa: E501

        :param connection_latency_status_string: The connection_latency_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._connection_latency_status_string = connection_latency_status_string

    @property
    def connection_latency(self):
        """Gets the connection_latency of this CloudStoreDiagnostics.  # noqa: E501

        Latency of connection  # noqa: E501

        :return: The connection_latency of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._connection_latency

    @connection_latency.setter
    def connection_latency(self, connection_latency):
        """Sets the connection_latency of this CloudStoreDiagnostics.

        Latency of connection  # noqa: E501

        :param connection_latency: The connection_latency of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._connection_latency = connection_latency

    @property
    def upload_test_write100_status(self):
        """Gets the upload_test_write100_status of this CloudStoreDiagnostics.  # noqa: E501

        Status of write 100% test  # noqa: E501

        :return: The upload_test_write100_status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._upload_test_write100_status

    @upload_test_write100_status.setter
    def upload_test_write100_status(self, upload_test_write100_status):
        """Sets the upload_test_write100_status of this CloudStoreDiagnostics.

        Status of write 100% test  # noqa: E501

        :param upload_test_write100_status: The upload_test_write100_status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._upload_test_write100_status = upload_test_write100_status

    @property
    def upload_test_write100_status_string(self):
        """Gets the upload_test_write100_status_string of this CloudStoreDiagnostics.  # noqa: E501

        String status of write 100% test  # noqa: E501

        :return: The upload_test_write100_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._upload_test_write100_status_string

    @upload_test_write100_status_string.setter
    def upload_test_write100_status_string(self, upload_test_write100_status_string):
        """Sets the upload_test_write100_status_string of this CloudStoreDiagnostics.

        String status of write 100% test  # noqa: E501

        :param upload_test_write100_status_string: The upload_test_write100_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._upload_test_write100_status_string = upload_test_write100_status_string

    @property
    def upload_test_write100_throughput(self):
        """Gets the upload_test_write100_throughput of this CloudStoreDiagnostics.  # noqa: E501

        Throughput of write 100% test  # noqa: E501

        :return: The upload_test_write100_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._upload_test_write100_throughput

    @upload_test_write100_throughput.setter
    def upload_test_write100_throughput(self, upload_test_write100_throughput):
        """Sets the upload_test_write100_throughput of this CloudStoreDiagnostics.

        Throughput of write 100% test  # noqa: E501

        :param upload_test_write100_throughput: The upload_test_write100_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._upload_test_write100_throughput = upload_test_write100_throughput

    @property
    def upload_test_write0_status(self):
        """Gets the upload_test_write0_status of this CloudStoreDiagnostics.  # noqa: E501

        Status of upload 0% changed data test  # noqa: E501

        :return: The upload_test_write0_status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._upload_test_write0_status

    @upload_test_write0_status.setter
    def upload_test_write0_status(self, upload_test_write0_status):
        """Sets the upload_test_write0_status of this CloudStoreDiagnostics.

        Status of upload 0% changed data test  # noqa: E501

        :param upload_test_write0_status: The upload_test_write0_status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._upload_test_write0_status = upload_test_write0_status

    @property
    def upload_test_write0_status_string(self):
        """Gets the upload_test_write0_status_string of this CloudStoreDiagnostics.  # noqa: E501

        String status of upload 0% changed data test  # noqa: E501

        :return: The upload_test_write0_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._upload_test_write0_status_string

    @upload_test_write0_status_string.setter
    def upload_test_write0_status_string(self, upload_test_write0_status_string):
        """Sets the upload_test_write0_status_string of this CloudStoreDiagnostics.

        String status of upload 0% changed data test  # noqa: E501

        :param upload_test_write0_status_string: The upload_test_write0_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._upload_test_write0_status_string = upload_test_write0_status_string

    @property
    def upload_test_write0_throughput(self):
        """Gets the upload_test_write0_throughput of this CloudStoreDiagnostics.  # noqa: E501

        Upload speed for 0% changed data  # noqa: E501

        :return: The upload_test_write0_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._upload_test_write0_throughput

    @upload_test_write0_throughput.setter
    def upload_test_write0_throughput(self, upload_test_write0_throughput):
        """Sets the upload_test_write0_throughput of this CloudStoreDiagnostics.

        Upload speed for 0% changed data  # noqa: E501

        :param upload_test_write0_throughput: The upload_test_write0_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._upload_test_write0_throughput = upload_test_write0_throughput

    @property
    def upload_test_write1_status(self):
        """Gets the upload_test_write1_status of this CloudStoreDiagnostics.  # noqa: E501

        Status of upload 1% changed data test  # noqa: E501

        :return: The upload_test_write1_status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._upload_test_write1_status

    @upload_test_write1_status.setter
    def upload_test_write1_status(self, upload_test_write1_status):
        """Sets the upload_test_write1_status of this CloudStoreDiagnostics.

        Status of upload 1% changed data test  # noqa: E501

        :param upload_test_write1_status: The upload_test_write1_status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._upload_test_write1_status = upload_test_write1_status

    @property
    def upload_test_write1_status_string(self):
        """Gets the upload_test_write1_status_string of this CloudStoreDiagnostics.  # noqa: E501

        String status of upload 1% changed data test  # noqa: E501

        :return: The upload_test_write1_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._upload_test_write1_status_string

    @upload_test_write1_status_string.setter
    def upload_test_write1_status_string(self, upload_test_write1_status_string):
        """Sets the upload_test_write1_status_string of this CloudStoreDiagnostics.

        String status of upload 1% changed data test  # noqa: E501

        :param upload_test_write1_status_string: The upload_test_write1_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._upload_test_write1_status_string = upload_test_write1_status_string

    @property
    def upload_test_write1_throughput(self):
        """Gets the upload_test_write1_throughput of this CloudStoreDiagnostics.  # noqa: E501

        Download speed of upload 1% changed data test  # noqa: E501

        :return: The upload_test_write1_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._upload_test_write1_throughput

    @upload_test_write1_throughput.setter
    def upload_test_write1_throughput(self, upload_test_write1_throughput):
        """Sets the upload_test_write1_throughput of this CloudStoreDiagnostics.

        Download speed of upload 1% changed data test  # noqa: E501

        :param upload_test_write1_throughput: The upload_test_write1_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._upload_test_write1_throughput = upload_test_write1_throughput

    @property
    def upload_test_write5_status(self):
        """Gets the upload_test_write5_status of this CloudStoreDiagnostics.  # noqa: E501

        Status of upload 5% changed data test  # noqa: E501

        :return: The upload_test_write5_status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._upload_test_write5_status

    @upload_test_write5_status.setter
    def upload_test_write5_status(self, upload_test_write5_status):
        """Sets the upload_test_write5_status of this CloudStoreDiagnostics.

        Status of upload 5% changed data test  # noqa: E501

        :param upload_test_write5_status: The upload_test_write5_status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._upload_test_write5_status = upload_test_write5_status

    @property
    def upload_test_write5_status_string(self):
        """Gets the upload_test_write5_status_string of this CloudStoreDiagnostics.  # noqa: E501

        String status of upload 5% changed data test  # noqa: E501

        :return: The upload_test_write5_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._upload_test_write5_status_string

    @upload_test_write5_status_string.setter
    def upload_test_write5_status_string(self, upload_test_write5_status_string):
        """Sets the upload_test_write5_status_string of this CloudStoreDiagnostics.

        String status of upload 5% changed data test  # noqa: E501

        :param upload_test_write5_status_string: The upload_test_write5_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._upload_test_write5_status_string = upload_test_write5_status_string

    @property
    def upload_test_write5_throughput(self):
        """Gets the upload_test_write5_throughput of this CloudStoreDiagnostics.  # noqa: E501

        Download speed of upload 5% changed data test  # noqa: E501

        :return: The upload_test_write5_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._upload_test_write5_throughput

    @upload_test_write5_throughput.setter
    def upload_test_write5_throughput(self, upload_test_write5_throughput):
        """Sets the upload_test_write5_throughput of this CloudStoreDiagnostics.

        Download speed of upload 5% changed data test  # noqa: E501

        :param upload_test_write5_throughput: The upload_test_write5_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._upload_test_write5_throughput = upload_test_write5_throughput

    @property
    def upload_test_write10_status(self):
        """Gets the upload_test_write10_status of this CloudStoreDiagnostics.  # noqa: E501

        Status of upload 10% changed data test  # noqa: E501

        :return: The upload_test_write10_status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._upload_test_write10_status

    @upload_test_write10_status.setter
    def upload_test_write10_status(self, upload_test_write10_status):
        """Sets the upload_test_write10_status of this CloudStoreDiagnostics.

        Status of upload 10% changed data test  # noqa: E501

        :param upload_test_write10_status: The upload_test_write10_status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._upload_test_write10_status = upload_test_write10_status

    @property
    def upload_test_write10_status_string(self):
        """Gets the upload_test_write10_status_string of this CloudStoreDiagnostics.  # noqa: E501

        String status of upload 10% changed data test  # noqa: E501

        :return: The upload_test_write10_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._upload_test_write10_status_string

    @upload_test_write10_status_string.setter
    def upload_test_write10_status_string(self, upload_test_write10_status_string):
        """Sets the upload_test_write10_status_string of this CloudStoreDiagnostics.

        String status of upload 10% changed data test  # noqa: E501

        :param upload_test_write10_status_string: The upload_test_write10_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._upload_test_write10_status_string = upload_test_write10_status_string

    @property
    def upload_test_write10_throughput(self):
        """Gets the upload_test_write10_throughput of this CloudStoreDiagnostics.  # noqa: E501

        Download speed of upload 10% changed data test  # noqa: E501

        :return: The upload_test_write10_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._upload_test_write10_throughput

    @upload_test_write10_throughput.setter
    def upload_test_write10_throughput(self, upload_test_write10_throughput):
        """Sets the upload_test_write10_throughput of this CloudStoreDiagnostics.

        Download speed of upload 10% changed data test  # noqa: E501

        :param upload_test_write10_throughput: The upload_test_write10_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._upload_test_write10_throughput = upload_test_write10_throughput

    @property
    def download_test_read100_status(self):
        """Gets the download_test_read100_status of this CloudStoreDiagnostics.  # noqa: E501

        Status of download 100% changed data test  # noqa: E501

        :return: The download_test_read100_status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._download_test_read100_status

    @download_test_read100_status.setter
    def download_test_read100_status(self, download_test_read100_status):
        """Sets the download_test_read100_status of this CloudStoreDiagnostics.

        Status of download 100% changed data test  # noqa: E501

        :param download_test_read100_status: The download_test_read100_status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._download_test_read100_status = download_test_read100_status

    @property
    def download_test_read100_status_string(self):
        """Gets the download_test_read100_status_string of this CloudStoreDiagnostics.  # noqa: E501

        String status of download 100% changed data test  # noqa: E501

        :return: The download_test_read100_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._download_test_read100_status_string

    @download_test_read100_status_string.setter
    def download_test_read100_status_string(self, download_test_read100_status_string):
        """Sets the download_test_read100_status_string of this CloudStoreDiagnostics.

        String status of download 100% changed data test  # noqa: E501

        :param download_test_read100_status_string: The download_test_read100_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._download_test_read100_status_string = download_test_read100_status_string

    @property
    def download_test_read100_throughput(self):
        """Gets the download_test_read100_throughput of this CloudStoreDiagnostics.  # noqa: E501

        Download speed for download 100% changed data test  # noqa: E501

        :return: The download_test_read100_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._download_test_read100_throughput

    @download_test_read100_throughput.setter
    def download_test_read100_throughput(self, download_test_read100_throughput):
        """Sets the download_test_read100_throughput of this CloudStoreDiagnostics.

        Download speed for download 100% changed data test  # noqa: E501

        :param download_test_read100_throughput: The download_test_read100_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._download_test_read100_throughput = download_test_read100_throughput

    @property
    def download_test_read0_status(self):
        """Gets the download_test_read0_status of this CloudStoreDiagnostics.  # noqa: E501

        Status of download 0% changed data test  # noqa: E501

        :return: The download_test_read0_status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._download_test_read0_status

    @download_test_read0_status.setter
    def download_test_read0_status(self, download_test_read0_status):
        """Sets the download_test_read0_status of this CloudStoreDiagnostics.

        Status of download 0% changed data test  # noqa: E501

        :param download_test_read0_status: The download_test_read0_status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._download_test_read0_status = download_test_read0_status

    @property
    def download_test_read0_status_string(self):
        """Gets the download_test_read0_status_string of this CloudStoreDiagnostics.  # noqa: E501

        Status of download 0% changed data test  # noqa: E501

        :return: The download_test_read0_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._download_test_read0_status_string

    @download_test_read0_status_string.setter
    def download_test_read0_status_string(self, download_test_read0_status_string):
        """Sets the download_test_read0_status_string of this CloudStoreDiagnostics.

        Status of download 0% changed data test  # noqa: E501

        :param download_test_read0_status_string: The download_test_read0_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._download_test_read0_status_string = download_test_read0_status_string

    @property
    def download_test_read0_throughput(self):
        """Gets the download_test_read0_throughput of this CloudStoreDiagnostics.  # noqa: E501

        Download speed for download 0% changed data test  # noqa: E501

        :return: The download_test_read0_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._download_test_read0_throughput

    @download_test_read0_throughput.setter
    def download_test_read0_throughput(self, download_test_read0_throughput):
        """Sets the download_test_read0_throughput of this CloudStoreDiagnostics.

        Download speed for download 0% changed data test  # noqa: E501

        :param download_test_read0_throughput: The download_test_read0_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._download_test_read0_throughput = download_test_read0_throughput

    @property
    def download_test_read1_status(self):
        """Gets the download_test_read1_status of this CloudStoreDiagnostics.  # noqa: E501

        Status of download 1% changed data test  # noqa: E501

        :return: The download_test_read1_status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._download_test_read1_status

    @download_test_read1_status.setter
    def download_test_read1_status(self, download_test_read1_status):
        """Sets the download_test_read1_status of this CloudStoreDiagnostics.

        Status of download 1% changed data test  # noqa: E501

        :param download_test_read1_status: The download_test_read1_status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._download_test_read1_status = download_test_read1_status

    @property
    def download_test_read1_status_string(self):
        """Gets the download_test_read1_status_string of this CloudStoreDiagnostics.  # noqa: E501

        String status of download 1% changed data test  # noqa: E501

        :return: The download_test_read1_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._download_test_read1_status_string

    @download_test_read1_status_string.setter
    def download_test_read1_status_string(self, download_test_read1_status_string):
        """Sets the download_test_read1_status_string of this CloudStoreDiagnostics.

        String status of download 1% changed data test  # noqa: E501

        :param download_test_read1_status_string: The download_test_read1_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._download_test_read1_status_string = download_test_read1_status_string

    @property
    def download_test_read1_throughput(self):
        """Gets the download_test_read1_throughput of this CloudStoreDiagnostics.  # noqa: E501

        Download speed for download 1% changed data test  # noqa: E501

        :return: The download_test_read1_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._download_test_read1_throughput

    @download_test_read1_throughput.setter
    def download_test_read1_throughput(self, download_test_read1_throughput):
        """Sets the download_test_read1_throughput of this CloudStoreDiagnostics.

        Download speed for download 1% changed data test  # noqa: E501

        :param download_test_read1_throughput: The download_test_read1_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._download_test_read1_throughput = download_test_read1_throughput

    @property
    def download_test_read5_status(self):
        """Gets the download_test_read5_status of this CloudStoreDiagnostics.  # noqa: E501

        Status of download 5% changed data test  # noqa: E501

        :return: The download_test_read5_status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._download_test_read5_status

    @download_test_read5_status.setter
    def download_test_read5_status(self, download_test_read5_status):
        """Sets the download_test_read5_status of this CloudStoreDiagnostics.

        Status of download 5% changed data test  # noqa: E501

        :param download_test_read5_status: The download_test_read5_status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._download_test_read5_status = download_test_read5_status

    @property
    def download_test_read5_status_string(self):
        """Gets the download_test_read5_status_string of this CloudStoreDiagnostics.  # noqa: E501

        String status of download 5% changed data test  # noqa: E501

        :return: The download_test_read5_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._download_test_read5_status_string

    @download_test_read5_status_string.setter
    def download_test_read5_status_string(self, download_test_read5_status_string):
        """Sets the download_test_read5_status_string of this CloudStoreDiagnostics.

        String status of download 5% changed data test  # noqa: E501

        :param download_test_read5_status_string: The download_test_read5_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._download_test_read5_status_string = download_test_read5_status_string

    @property
    def download_test_read5_throughput(self):
        """Gets the download_test_read5_throughput of this CloudStoreDiagnostics.  # noqa: E501

        Download speed for download 5% changed data test  # noqa: E501

        :return: The download_test_read5_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._download_test_read5_throughput

    @download_test_read5_throughput.setter
    def download_test_read5_throughput(self, download_test_read5_throughput):
        """Sets the download_test_read5_throughput of this CloudStoreDiagnostics.

        Download speed for download 5% changed data test  # noqa: E501

        :param download_test_read5_throughput: The download_test_read5_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._download_test_read5_throughput = download_test_read5_throughput

    @property
    def download_test_read10_status(self):
        """Gets the download_test_read10_status of this CloudStoreDiagnostics.  # noqa: E501

        Status of download 10% changed data test  # noqa: E501

        :return: The download_test_read10_status of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._download_test_read10_status

    @download_test_read10_status.setter
    def download_test_read10_status(self, download_test_read10_status):
        """Sets the download_test_read10_status of this CloudStoreDiagnostics.

        Status of download 10% changed data test  # noqa: E501

        :param download_test_read10_status: The download_test_read10_status of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._download_test_read10_status = download_test_read10_status

    @property
    def download_test_read10_status_string(self):
        """Gets the download_test_read10_status_string of this CloudStoreDiagnostics.  # noqa: E501

        String status of download 10% changed data test  # noqa: E501

        :return: The download_test_read10_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: str
        """
        return self._download_test_read10_status_string

    @download_test_read10_status_string.setter
    def download_test_read10_status_string(self, download_test_read10_status_string):
        """Sets the download_test_read10_status_string of this CloudStoreDiagnostics.

        String status of download 10% changed data test  # noqa: E501

        :param download_test_read10_status_string: The download_test_read10_status_string of this CloudStoreDiagnostics.  # noqa: E501
        :type: str
        """

        self._download_test_read10_status_string = download_test_read10_status_string

    @property
    def download_test_read10_throughput(self):
        """Gets the download_test_read10_throughput of this CloudStoreDiagnostics.  # noqa: E501

        Download speed for download 10% changed data test  # noqa: E501

        :return: The download_test_read10_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :rtype: int
        """
        return self._download_test_read10_throughput

    @download_test_read10_throughput.setter
    def download_test_read10_throughput(self, download_test_read10_throughput):
        """Sets the download_test_read10_throughput of this CloudStoreDiagnostics.

        Download speed for download 10% changed data test  # noqa: E501

        :param download_test_read10_throughput: The download_test_read10_throughput of this CloudStoreDiagnostics.  # noqa: E501
        :type: int
        """

        self._download_test_read10_throughput = download_test_read10_throughput

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CloudStoreDiagnostics, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CloudStoreDiagnostics):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
