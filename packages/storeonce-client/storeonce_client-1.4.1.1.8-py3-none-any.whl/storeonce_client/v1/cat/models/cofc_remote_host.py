# coding: utf-8

"""
    (C) Copyright 2018-2019 Hewlett Packard Enterprise Development LP

    Catalyst

    unused  # noqa: E501

    Component version: 10.3.15-SNAPSHOT
"""


import pprint
import re  # noqa: F401

import six


class CofcRemoteHost(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'wwpn_start': 'str',
        'wwpn_end': 'str',
        'operating_system': 'int',
        'operating_system_string': 'str'
    }

    attribute_map = {
        'wwpn_start': 'wwpnStart',
        'wwpn_end': 'wwpnEnd',
        'operating_system': 'operatingSystem',
        'operating_system_string': 'operatingSystemString'
    }

    def __init__(self, wwpn_start=None, wwpn_end=None, operating_system=None, operating_system_string=None):  # noqa: E501
        """CofcRemoteHost - a model defined in Swagger"""  # noqa: E501

        self._wwpn_start = None
        self._wwpn_end = None
        self._operating_system = None
        self._operating_system_string = None
        self.discriminator = None

        if wwpn_start is not None:
            self.wwpn_start = wwpn_start
        if wwpn_end is not None:
            self.wwpn_end = wwpn_end
        if operating_system is not None:
            self.operating_system = operating_system
        if operating_system_string is not None:
            self.operating_system_string = operating_system_string

    @property
    def wwpn_start(self):
        """Gets the wwpn_start of this CofcRemoteHost.  # noqa: E501

        Starting World Wide Port Name  # noqa: E501

        :return: The wwpn_start of this CofcRemoteHost.  # noqa: E501
        :rtype: str
        """
        return self._wwpn_start

    @wwpn_start.setter
    def wwpn_start(self, wwpn_start):
        """Sets the wwpn_start of this CofcRemoteHost.

        Starting World Wide Port Name  # noqa: E501

        :param wwpn_start: The wwpn_start of this CofcRemoteHost.  # noqa: E501
        :type: str
        """

        self._wwpn_start = wwpn_start

    @property
    def wwpn_end(self):
        """Gets the wwpn_end of this CofcRemoteHost.  # noqa: E501

        Ending World Wide Port Name  # noqa: E501

        :return: The wwpn_end of this CofcRemoteHost.  # noqa: E501
        :rtype: str
        """
        return self._wwpn_end

    @wwpn_end.setter
    def wwpn_end(self, wwpn_end):
        """Sets the wwpn_end of this CofcRemoteHost.

        Ending World Wide Port Name  # noqa: E501

        :param wwpn_end: The wwpn_end of this CofcRemoteHost.  # noqa: E501
        :type: str
        """

        self._wwpn_end = wwpn_end

    @property
    def operating_system(self):
        """Gets the operating_system of this CofcRemoteHost.  # noqa: E501

        Remote host operating system  # noqa: E501

        :return: The operating_system of this CofcRemoteHost.  # noqa: E501
        :rtype: int
        """
        return self._operating_system

    @operating_system.setter
    def operating_system(self, operating_system):
        """Sets the operating_system of this CofcRemoteHost.

        Remote host operating system  # noqa: E501

        :param operating_system: The operating_system of this CofcRemoteHost.  # noqa: E501
        :type: int
        """

        self._operating_system = operating_system

    @property
    def operating_system_string(self):
        """Gets the operating_system_string of this CofcRemoteHost.  # noqa: E501

        Localised String for the remote host operating system  # noqa: E501

        :return: The operating_system_string of this CofcRemoteHost.  # noqa: E501
        :rtype: str
        """
        return self._operating_system_string

    @operating_system_string.setter
    def operating_system_string(self, operating_system_string):
        """Sets the operating_system_string of this CofcRemoteHost.

        Localised String for the remote host operating system  # noqa: E501

        :param operating_system_string: The operating_system_string of this CofcRemoteHost.  # noqa: E501
        :type: str
        """

        self._operating_system_string = operating_system_string

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CofcRemoteHost, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CofcRemoteHost):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
