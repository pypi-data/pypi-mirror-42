# coding: utf-8

"""
    (C) Copyright 2018-2019 Hewlett Packard Enterprise Development LP

    Catalyst

    unused  # noqa: E501

    Component version: 10.3.15-SNAPSHOT
"""


import pprint
import re  # noqa: F401

import six


class CopyjobFilters(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'client_address_filter': 'str',
        'client_address_filter_exact_match': 'bool',
        'application_id_filter': 'str',
        'client_id_filter': 'str',
        'application_id_client_id_filter_exact_match': 'bool',
        'queued_date_start': 'str',
        'queued_date_end': 'str',
        'started_date_start': 'str',
        'started_date_end': 'str',
        'ended_date_start': 'str',
        'ended_date_end': 'str',
        'job_status_filter': 'int',
        'origin': 'CopyjobServerFilters',
        'destination': 'CopyjobServerFilters'
    }

    attribute_map = {
        'client_address_filter': 'clientAddressFilter',
        'client_address_filter_exact_match': 'clientAddressFilterExactMatch',
        'application_id_filter': 'applicationIdFilter',
        'client_id_filter': 'clientIdFilter',
        'application_id_client_id_filter_exact_match': 'applicationIdClientIdFilterExactMatch',
        'queued_date_start': 'queuedDateStart',
        'queued_date_end': 'queuedDateEnd',
        'started_date_start': 'startedDateStart',
        'started_date_end': 'startedDateEnd',
        'ended_date_start': 'endedDateStart',
        'ended_date_end': 'endedDateEnd',
        'job_status_filter': 'jobStatusFilter',
        'origin': 'origin',
        'destination': 'destination'
    }

    def __init__(self, client_address_filter=None, client_address_filter_exact_match=False, application_id_filter=None, client_id_filter=None, application_id_client_id_filter_exact_match=False, queued_date_start=None, queued_date_end=None, started_date_start=None, started_date_end=None, ended_date_start=None, ended_date_end=None, job_status_filter=None, origin=None, destination=None):  # noqa: E501
        """CopyjobFilters - a model defined in Swagger"""  # noqa: E501

        self._client_address_filter = None
        self._client_address_filter_exact_match = None
        self._application_id_filter = None
        self._client_id_filter = None
        self._application_id_client_id_filter_exact_match = None
        self._queued_date_start = None
        self._queued_date_end = None
        self._started_date_start = None
        self._started_date_end = None
        self._ended_date_start = None
        self._ended_date_end = None
        self._job_status_filter = None
        self._origin = None
        self._destination = None
        self.discriminator = None

        if client_address_filter is not None:
            self.client_address_filter = client_address_filter
        if client_address_filter_exact_match is not None:
            self.client_address_filter_exact_match = client_address_filter_exact_match
        if application_id_filter is not None:
            self.application_id_filter = application_id_filter
        if client_id_filter is not None:
            self.client_id_filter = client_id_filter
        if application_id_client_id_filter_exact_match is not None:
            self.application_id_client_id_filter_exact_match = application_id_client_id_filter_exact_match
        if queued_date_start is not None:
            self.queued_date_start = queued_date_start
        if queued_date_end is not None:
            self.queued_date_end = queued_date_end
        if started_date_start is not None:
            self.started_date_start = started_date_start
        if started_date_end is not None:
            self.started_date_end = started_date_end
        if ended_date_start is not None:
            self.ended_date_start = ended_date_start
        if ended_date_end is not None:
            self.ended_date_end = ended_date_end
        if job_status_filter is not None:
            self.job_status_filter = job_status_filter
        if origin is not None:
            self.origin = origin
        if destination is not None:
            self.destination = destination

    @property
    def client_address_filter(self):
        """Gets the client_address_filter of this CopyjobFilters.  # noqa: E501

        Client Address used by the filter  # noqa: E501

        :return: The client_address_filter of this CopyjobFilters.  # noqa: E501
        :rtype: str
        """
        return self._client_address_filter

    @client_address_filter.setter
    def client_address_filter(self, client_address_filter):
        """Sets the client_address_filter of this CopyjobFilters.

        Client Address used by the filter  # noqa: E501

        :param client_address_filter: The client_address_filter of this CopyjobFilters.  # noqa: E501
        :type: str
        """

        self._client_address_filter = client_address_filter

    @property
    def client_address_filter_exact_match(self):
        """Gets the client_address_filter_exact_match of this CopyjobFilters.  # noqa: E501

        True if the Client Address used by the filter is an exact match  # noqa: E501

        :return: The client_address_filter_exact_match of this CopyjobFilters.  # noqa: E501
        :rtype: bool
        """
        return self._client_address_filter_exact_match

    @client_address_filter_exact_match.setter
    def client_address_filter_exact_match(self, client_address_filter_exact_match):
        """Sets the client_address_filter_exact_match of this CopyjobFilters.

        True if the Client Address used by the filter is an exact match  # noqa: E501

        :param client_address_filter_exact_match: The client_address_filter_exact_match of this CopyjobFilters.  # noqa: E501
        :type: bool
        """

        self._client_address_filter_exact_match = client_address_filter_exact_match

    @property
    def application_id_filter(self):
        """Gets the application_id_filter of this CopyjobFilters.  # noqa: E501

        Application ID used by the filter  # noqa: E501

        :return: The application_id_filter of this CopyjobFilters.  # noqa: E501
        :rtype: str
        """
        return self._application_id_filter

    @application_id_filter.setter
    def application_id_filter(self, application_id_filter):
        """Sets the application_id_filter of this CopyjobFilters.

        Application ID used by the filter  # noqa: E501

        :param application_id_filter: The application_id_filter of this CopyjobFilters.  # noqa: E501
        :type: str
        """

        self._application_id_filter = application_id_filter

    @property
    def client_id_filter(self):
        """Gets the client_id_filter of this CopyjobFilters.  # noqa: E501

        Client ID used by the filter  # noqa: E501

        :return: The client_id_filter of this CopyjobFilters.  # noqa: E501
        :rtype: str
        """
        return self._client_id_filter

    @client_id_filter.setter
    def client_id_filter(self, client_id_filter):
        """Sets the client_id_filter of this CopyjobFilters.

        Client ID used by the filter  # noqa: E501

        :param client_id_filter: The client_id_filter of this CopyjobFilters.  # noqa: E501
        :type: str
        """

        self._client_id_filter = client_id_filter

    @property
    def application_id_client_id_filter_exact_match(self):
        """Gets the application_id_client_id_filter_exact_match of this CopyjobFilters.  # noqa: E501

        True if the Application ID used by the filter is an exact match  # noqa: E501

        :return: The application_id_client_id_filter_exact_match of this CopyjobFilters.  # noqa: E501
        :rtype: bool
        """
        return self._application_id_client_id_filter_exact_match

    @application_id_client_id_filter_exact_match.setter
    def application_id_client_id_filter_exact_match(self, application_id_client_id_filter_exact_match):
        """Sets the application_id_client_id_filter_exact_match of this CopyjobFilters.

        True if the Application ID used by the filter is an exact match  # noqa: E501

        :param application_id_client_id_filter_exact_match: The application_id_client_id_filter_exact_match of this CopyjobFilters.  # noqa: E501
        :type: bool
        """

        self._application_id_client_id_filter_exact_match = application_id_client_id_filter_exact_match

    @property
    def queued_date_start(self):
        """Gets the queued_date_start of this CopyjobFilters.  # noqa: E501

        Queued Start Date used by the filter  # noqa: E501

        :return: The queued_date_start of this CopyjobFilters.  # noqa: E501
        :rtype: str
        """
        return self._queued_date_start

    @queued_date_start.setter
    def queued_date_start(self, queued_date_start):
        """Sets the queued_date_start of this CopyjobFilters.

        Queued Start Date used by the filter  # noqa: E501

        :param queued_date_start: The queued_date_start of this CopyjobFilters.  # noqa: E501
        :type: str
        """

        self._queued_date_start = queued_date_start

    @property
    def queued_date_end(self):
        """Gets the queued_date_end of this CopyjobFilters.  # noqa: E501

        Queued End Date used by the filter  # noqa: E501

        :return: The queued_date_end of this CopyjobFilters.  # noqa: E501
        :rtype: str
        """
        return self._queued_date_end

    @queued_date_end.setter
    def queued_date_end(self, queued_date_end):
        """Sets the queued_date_end of this CopyjobFilters.

        Queued End Date used by the filter  # noqa: E501

        :param queued_date_end: The queued_date_end of this CopyjobFilters.  # noqa: E501
        :type: str
        """

        self._queued_date_end = queued_date_end

    @property
    def started_date_start(self):
        """Gets the started_date_start of this CopyjobFilters.  # noqa: E501

        Date to search for started jobs that started on this date  # noqa: E501

        :return: The started_date_start of this CopyjobFilters.  # noqa: E501
        :rtype: str
        """
        return self._started_date_start

    @started_date_start.setter
    def started_date_start(self, started_date_start):
        """Sets the started_date_start of this CopyjobFilters.

        Date to search for started jobs that started on this date  # noqa: E501

        :param started_date_start: The started_date_start of this CopyjobFilters.  # noqa: E501
        :type: str
        """

        self._started_date_start = started_date_start

    @property
    def started_date_end(self):
        """Gets the started_date_end of this CopyjobFilters.  # noqa: E501

        Date to search for started jobs that started before this date  # noqa: E501

        :return: The started_date_end of this CopyjobFilters.  # noqa: E501
        :rtype: str
        """
        return self._started_date_end

    @started_date_end.setter
    def started_date_end(self, started_date_end):
        """Sets the started_date_end of this CopyjobFilters.

        Date to search for started jobs that started before this date  # noqa: E501

        :param started_date_end: The started_date_end of this CopyjobFilters.  # noqa: E501
        :type: str
        """

        self._started_date_end = started_date_end

    @property
    def ended_date_start(self):
        """Gets the ended_date_start of this CopyjobFilters.  # noqa: E501

        Date to search for ended jobs that ended after this date  # noqa: E501

        :return: The ended_date_start of this CopyjobFilters.  # noqa: E501
        :rtype: str
        """
        return self._ended_date_start

    @ended_date_start.setter
    def ended_date_start(self, ended_date_start):
        """Sets the ended_date_start of this CopyjobFilters.

        Date to search for ended jobs that ended after this date  # noqa: E501

        :param ended_date_start: The ended_date_start of this CopyjobFilters.  # noqa: E501
        :type: str
        """

        self._ended_date_start = ended_date_start

    @property
    def ended_date_end(self):
        """Gets the ended_date_end of this CopyjobFilters.  # noqa: E501

        Date to search for ended jobs that ended before this date  # noqa: E501

        :return: The ended_date_end of this CopyjobFilters.  # noqa: E501
        :rtype: str
        """
        return self._ended_date_end

    @ended_date_end.setter
    def ended_date_end(self, ended_date_end):
        """Sets the ended_date_end of this CopyjobFilters.

        Date to search for ended jobs that ended before this date  # noqa: E501

        :param ended_date_end: The ended_date_end of this CopyjobFilters.  # noqa: E501
        :type: str
        """

        self._ended_date_end = ended_date_end

    @property
    def job_status_filter(self):
        """Gets the job_status_filter of this CopyjobFilters.  # noqa: E501

        Filter on the status of the jobs  # noqa: E501

        :return: The job_status_filter of this CopyjobFilters.  # noqa: E501
        :rtype: int
        """
        return self._job_status_filter

    @job_status_filter.setter
    def job_status_filter(self, job_status_filter):
        """Sets the job_status_filter of this CopyjobFilters.

        Filter on the status of the jobs  # noqa: E501

        :param job_status_filter: The job_status_filter of this CopyjobFilters.  # noqa: E501
        :type: int
        """

        self._job_status_filter = job_status_filter

    @property
    def origin(self):
        """Gets the origin of this CopyjobFilters.  # noqa: E501

        Copy job originating server filter  # noqa: E501

        :return: The origin of this CopyjobFilters.  # noqa: E501
        :rtype: CopyjobServerFilters
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this CopyjobFilters.

        Copy job originating server filter  # noqa: E501

        :param origin: The origin of this CopyjobFilters.  # noqa: E501
        :type: CopyjobServerFilters
        """

        self._origin = origin

    @property
    def destination(self):
        """Gets the destination of this CopyjobFilters.  # noqa: E501

        Copy job destination server filter  # noqa: E501

        :return: The destination of this CopyjobFilters.  # noqa: E501
        :rtype: CopyjobServerFilters
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this CopyjobFilters.

        Copy job destination server filter  # noqa: E501

        :param destination: The destination of this CopyjobFilters.  # noqa: E501
        :type: CopyjobServerFilters
        """

        self._destination = destination

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CopyjobFilters, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CopyjobFilters):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
