# coding: utf-8

"""
    (C) Copyright 2018-2019 Hewlett Packard Enterprise Development LP

    SMM

    unused  # noqa: E501

    Component version: 2.0.9-SNAPSHOT
"""


import pprint
import re  # noqa: F401

import six


class EventsMetricsGet(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'timestamp': 'DateTimeOffset',
        'store_id': 'int',
        'oldest_portion_meta_version': 'int',
        'oldest_container_meta_version': 'int',
        'file_system_check_required': 'bool',
        'store_recovery_count': 'int',
        'file_system_retry_count': 'int',
        'integrity_error_code': 'int',
        'integrity_source_line_number': 'int',
        'missing_store_meta_count': 'int',
        'missing_item_meta_count': 'int',
        'missing_item_version_meta_count': 'int',
        'missing_portion_meta_count': 'int',
        'missing_container_index_count': 'int',
        'missing_container_data_count': 'int',
        'corrupt_store_meta_count': 'int',
        'corrupt_item_meta_count': 'int',
        'corrupt_item_version_meta_count': 'int',
        'corrupt_portion_meta_count': 'int',
        'corrupt_container_index_count': 'int',
        'corrupt_container_data_count': 'int',
        'store_meta_recovery_count': 'int',
        'item_meta_recovery_count': 'int',
        'container_data_checksum_recovery_count': 'int',
        'multiple_active_hk_jobs_count': 'int',
        'multiple_active_hk_jobs_size_on_disk_bytes': 'int',
        'hash_zero_chunk_ref_count': 'int',
        'hash_zero_chunk_ref_job_size_on_disk_bytes': 'int',
        'hash_negative_chunk_ref_count': 'int',
        'hash_negative_chunk_ref_job_size_on_disk_bytes': 'int',
        'quarantined_job_count': 'int',
        'quarantined_size_on_disk_bytes': 'int',
        'empty_item_dir_count': 'int',
        'empty_portion_dir_count': 'int',
        'empty_container_index_dir_count': 'int',
        'empty_container_data_dir_count': 'int',
        'zero_ref_chunk_match_count': 'int',
        'integrity_failure_count': 'int',
        'message_recovery_integrity_failure_count': 'int',
        'queue_recovery_integrity_failure_count': 'int',
        'process_job_integrity_failure_count': 'int',
        'quarantined_container_count': 'int',
        'affected_container_blobs_count': 'int',
        'integrity_event_warning_level_count': 'int',
        'integrity_event_error_level_count': 'int',
        'integrity_fail_file': 'str',
        'integrity_source_file': 'str',
        'store_revision_history': 'str',
        'hkthreads_min': 'int',
        'hkthreads_max': 'int',
        'hkthreads_avg': 'int'
    }

    attribute_map = {
        'timestamp': 'timestamp',
        'store_id': 'storeId',
        'oldest_portion_meta_version': 'oldestPortionMetaVersion',
        'oldest_container_meta_version': 'oldestContainerMetaVersion',
        'file_system_check_required': 'fileSystemCheckRequired',
        'store_recovery_count': 'storeRecoveryCount',
        'file_system_retry_count': 'fileSystemRetryCount',
        'integrity_error_code': 'integrityErrorCode',
        'integrity_source_line_number': 'integritySourceLineNumber',
        'missing_store_meta_count': 'missingStoreMetaCount',
        'missing_item_meta_count': 'missingItemMetaCount',
        'missing_item_version_meta_count': 'missingItemVersionMetaCount',
        'missing_portion_meta_count': 'missingPortionMetaCount',
        'missing_container_index_count': 'missingContainerIndexCount',
        'missing_container_data_count': 'missingContainerDataCount',
        'corrupt_store_meta_count': 'corruptStoreMetaCount',
        'corrupt_item_meta_count': 'corruptItemMetaCount',
        'corrupt_item_version_meta_count': 'corruptItemVersionMetaCount',
        'corrupt_portion_meta_count': 'corruptPortionMetaCount',
        'corrupt_container_index_count': 'corruptContainerIndexCount',
        'corrupt_container_data_count': 'corruptContainerDataCount',
        'store_meta_recovery_count': 'storeMetaRecoveryCount',
        'item_meta_recovery_count': 'itemMetaRecoveryCount',
        'container_data_checksum_recovery_count': 'containerDataChecksumRecoveryCount',
        'multiple_active_hk_jobs_count': 'multipleActiveHKJobsCount',
        'multiple_active_hk_jobs_size_on_disk_bytes': 'multipleActiveHKJobsSizeOnDiskBytes',
        'hash_zero_chunk_ref_count': 'hashZeroChunkRefCount',
        'hash_zero_chunk_ref_job_size_on_disk_bytes': 'hashZeroChunkRefJobSizeOnDiskBytes',
        'hash_negative_chunk_ref_count': 'hashNegativeChunkRefCount',
        'hash_negative_chunk_ref_job_size_on_disk_bytes': 'hashNegativeChunkRefJobSizeOnDiskBytes',
        'quarantined_job_count': 'quarantinedJobCount',
        'quarantined_size_on_disk_bytes': 'quarantinedSizeOnDiskBytes',
        'empty_item_dir_count': 'emptyItemDirCount',
        'empty_portion_dir_count': 'emptyPortionDirCount',
        'empty_container_index_dir_count': 'emptyContainerIndexDirCount',
        'empty_container_data_dir_count': 'emptyContainerDataDirCount',
        'zero_ref_chunk_match_count': 'zeroRefChunkMatchCount',
        'integrity_failure_count': 'integrityFailureCount',
        'message_recovery_integrity_failure_count': 'messageRecoveryIntegrityFailureCount',
        'queue_recovery_integrity_failure_count': 'queueRecoveryIntegrityFailureCount',
        'process_job_integrity_failure_count': 'processJobIntegrityFailureCount',
        'quarantined_container_count': 'quarantinedContainerCount',
        'affected_container_blobs_count': 'affectedContainerBlobsCount',
        'integrity_event_warning_level_count': 'integrityEventWarningLevelCount',
        'integrity_event_error_level_count': 'integrityEventErrorLevelCount',
        'integrity_fail_file': 'integrityFailFile',
        'integrity_source_file': 'integritySourceFile',
        'store_revision_history': 'storeRevisionHistory',
        'hkthreads_min': 'hkthreadsMin',
        'hkthreads_max': 'hkthreadsMax',
        'hkthreads_avg': 'hkthreadsAvg'
    }

    def __init__(self, timestamp=None, store_id=None, oldest_portion_meta_version=None, oldest_container_meta_version=None, file_system_check_required=False, store_recovery_count=None, file_system_retry_count=None, integrity_error_code=None, integrity_source_line_number=None, missing_store_meta_count=None, missing_item_meta_count=None, missing_item_version_meta_count=None, missing_portion_meta_count=None, missing_container_index_count=None, missing_container_data_count=None, corrupt_store_meta_count=None, corrupt_item_meta_count=None, corrupt_item_version_meta_count=None, corrupt_portion_meta_count=None, corrupt_container_index_count=None, corrupt_container_data_count=None, store_meta_recovery_count=None, item_meta_recovery_count=None, container_data_checksum_recovery_count=None, multiple_active_hk_jobs_count=None, multiple_active_hk_jobs_size_on_disk_bytes=None, hash_zero_chunk_ref_count=None, hash_zero_chunk_ref_job_size_on_disk_bytes=None, hash_negative_chunk_ref_count=None, hash_negative_chunk_ref_job_size_on_disk_bytes=None, quarantined_job_count=None, quarantined_size_on_disk_bytes=None, empty_item_dir_count=None, empty_portion_dir_count=None, empty_container_index_dir_count=None, empty_container_data_dir_count=None, zero_ref_chunk_match_count=None, integrity_failure_count=None, message_recovery_integrity_failure_count=None, queue_recovery_integrity_failure_count=None, process_job_integrity_failure_count=None, quarantined_container_count=None, affected_container_blobs_count=None, integrity_event_warning_level_count=None, integrity_event_error_level_count=None, integrity_fail_file=None, integrity_source_file=None, store_revision_history=None, hkthreads_min=None, hkthreads_max=None, hkthreads_avg=None):  # noqa: E501
        """EventsMetricsGet - a model defined in Swagger"""  # noqa: E501

        self._timestamp = None
        self._store_id = None
        self._oldest_portion_meta_version = None
        self._oldest_container_meta_version = None
        self._file_system_check_required = None
        self._store_recovery_count = None
        self._file_system_retry_count = None
        self._integrity_error_code = None
        self._integrity_source_line_number = None
        self._missing_store_meta_count = None
        self._missing_item_meta_count = None
        self._missing_item_version_meta_count = None
        self._missing_portion_meta_count = None
        self._missing_container_index_count = None
        self._missing_container_data_count = None
        self._corrupt_store_meta_count = None
        self._corrupt_item_meta_count = None
        self._corrupt_item_version_meta_count = None
        self._corrupt_portion_meta_count = None
        self._corrupt_container_index_count = None
        self._corrupt_container_data_count = None
        self._store_meta_recovery_count = None
        self._item_meta_recovery_count = None
        self._container_data_checksum_recovery_count = None
        self._multiple_active_hk_jobs_count = None
        self._multiple_active_hk_jobs_size_on_disk_bytes = None
        self._hash_zero_chunk_ref_count = None
        self._hash_zero_chunk_ref_job_size_on_disk_bytes = None
        self._hash_negative_chunk_ref_count = None
        self._hash_negative_chunk_ref_job_size_on_disk_bytes = None
        self._quarantined_job_count = None
        self._quarantined_size_on_disk_bytes = None
        self._empty_item_dir_count = None
        self._empty_portion_dir_count = None
        self._empty_container_index_dir_count = None
        self._empty_container_data_dir_count = None
        self._zero_ref_chunk_match_count = None
        self._integrity_failure_count = None
        self._message_recovery_integrity_failure_count = None
        self._queue_recovery_integrity_failure_count = None
        self._process_job_integrity_failure_count = None
        self._quarantined_container_count = None
        self._affected_container_blobs_count = None
        self._integrity_event_warning_level_count = None
        self._integrity_event_error_level_count = None
        self._integrity_fail_file = None
        self._integrity_source_file = None
        self._store_revision_history = None
        self._hkthreads_min = None
        self._hkthreads_max = None
        self._hkthreads_avg = None
        self.discriminator = None

        if timestamp is not None:
            self.timestamp = timestamp
        if store_id is not None:
            self.store_id = store_id
        if oldest_portion_meta_version is not None:
            self.oldest_portion_meta_version = oldest_portion_meta_version
        if oldest_container_meta_version is not None:
            self.oldest_container_meta_version = oldest_container_meta_version
        if file_system_check_required is not None:
            self.file_system_check_required = file_system_check_required
        if store_recovery_count is not None:
            self.store_recovery_count = store_recovery_count
        if file_system_retry_count is not None:
            self.file_system_retry_count = file_system_retry_count
        if integrity_error_code is not None:
            self.integrity_error_code = integrity_error_code
        if integrity_source_line_number is not None:
            self.integrity_source_line_number = integrity_source_line_number
        if missing_store_meta_count is not None:
            self.missing_store_meta_count = missing_store_meta_count
        if missing_item_meta_count is not None:
            self.missing_item_meta_count = missing_item_meta_count
        if missing_item_version_meta_count is not None:
            self.missing_item_version_meta_count = missing_item_version_meta_count
        if missing_portion_meta_count is not None:
            self.missing_portion_meta_count = missing_portion_meta_count
        if missing_container_index_count is not None:
            self.missing_container_index_count = missing_container_index_count
        if missing_container_data_count is not None:
            self.missing_container_data_count = missing_container_data_count
        if corrupt_store_meta_count is not None:
            self.corrupt_store_meta_count = corrupt_store_meta_count
        if corrupt_item_meta_count is not None:
            self.corrupt_item_meta_count = corrupt_item_meta_count
        if corrupt_item_version_meta_count is not None:
            self.corrupt_item_version_meta_count = corrupt_item_version_meta_count
        if corrupt_portion_meta_count is not None:
            self.corrupt_portion_meta_count = corrupt_portion_meta_count
        if corrupt_container_index_count is not None:
            self.corrupt_container_index_count = corrupt_container_index_count
        if corrupt_container_data_count is not None:
            self.corrupt_container_data_count = corrupt_container_data_count
        if store_meta_recovery_count is not None:
            self.store_meta_recovery_count = store_meta_recovery_count
        if item_meta_recovery_count is not None:
            self.item_meta_recovery_count = item_meta_recovery_count
        if container_data_checksum_recovery_count is not None:
            self.container_data_checksum_recovery_count = container_data_checksum_recovery_count
        if multiple_active_hk_jobs_count is not None:
            self.multiple_active_hk_jobs_count = multiple_active_hk_jobs_count
        if multiple_active_hk_jobs_size_on_disk_bytes is not None:
            self.multiple_active_hk_jobs_size_on_disk_bytes = multiple_active_hk_jobs_size_on_disk_bytes
        if hash_zero_chunk_ref_count is not None:
            self.hash_zero_chunk_ref_count = hash_zero_chunk_ref_count
        if hash_zero_chunk_ref_job_size_on_disk_bytes is not None:
            self.hash_zero_chunk_ref_job_size_on_disk_bytes = hash_zero_chunk_ref_job_size_on_disk_bytes
        if hash_negative_chunk_ref_count is not None:
            self.hash_negative_chunk_ref_count = hash_negative_chunk_ref_count
        if hash_negative_chunk_ref_job_size_on_disk_bytes is not None:
            self.hash_negative_chunk_ref_job_size_on_disk_bytes = hash_negative_chunk_ref_job_size_on_disk_bytes
        if quarantined_job_count is not None:
            self.quarantined_job_count = quarantined_job_count
        if quarantined_size_on_disk_bytes is not None:
            self.quarantined_size_on_disk_bytes = quarantined_size_on_disk_bytes
        if empty_item_dir_count is not None:
            self.empty_item_dir_count = empty_item_dir_count
        if empty_portion_dir_count is not None:
            self.empty_portion_dir_count = empty_portion_dir_count
        if empty_container_index_dir_count is not None:
            self.empty_container_index_dir_count = empty_container_index_dir_count
        if empty_container_data_dir_count is not None:
            self.empty_container_data_dir_count = empty_container_data_dir_count
        if zero_ref_chunk_match_count is not None:
            self.zero_ref_chunk_match_count = zero_ref_chunk_match_count
        if integrity_failure_count is not None:
            self.integrity_failure_count = integrity_failure_count
        if message_recovery_integrity_failure_count is not None:
            self.message_recovery_integrity_failure_count = message_recovery_integrity_failure_count
        if queue_recovery_integrity_failure_count is not None:
            self.queue_recovery_integrity_failure_count = queue_recovery_integrity_failure_count
        if process_job_integrity_failure_count is not None:
            self.process_job_integrity_failure_count = process_job_integrity_failure_count
        if quarantined_container_count is not None:
            self.quarantined_container_count = quarantined_container_count
        if affected_container_blobs_count is not None:
            self.affected_container_blobs_count = affected_container_blobs_count
        if integrity_event_warning_level_count is not None:
            self.integrity_event_warning_level_count = integrity_event_warning_level_count
        if integrity_event_error_level_count is not None:
            self.integrity_event_error_level_count = integrity_event_error_level_count
        if integrity_fail_file is not None:
            self.integrity_fail_file = integrity_fail_file
        if integrity_source_file is not None:
            self.integrity_source_file = integrity_source_file
        if store_revision_history is not None:
            self.store_revision_history = store_revision_history
        if hkthreads_min is not None:
            self.hkthreads_min = hkthreads_min
        if hkthreads_max is not None:
            self.hkthreads_max = hkthreads_max
        if hkthreads_avg is not None:
            self.hkthreads_avg = hkthreads_avg

    @property
    def timestamp(self):
        """Gets the timestamp of this EventsMetricsGet.  # noqa: E501

        Timestamp for the metric sample  # noqa: E501

        :return: The timestamp of this EventsMetricsGet.  # noqa: E501
        :rtype: DateTimeOffset
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this EventsMetricsGet.

        Timestamp for the metric sample  # noqa: E501

        :param timestamp: The timestamp of this EventsMetricsGet.  # noqa: E501
        :type: DateTimeOffset
        """

        self._timestamp = timestamp

    @property
    def store_id(self):
        """Gets the store_id of this EventsMetricsGet.  # noqa: E501

        Store ID  # noqa: E501

        :return: The store_id of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._store_id

    @store_id.setter
    def store_id(self, store_id):
        """Sets the store_id of this EventsMetricsGet.

        Store ID  # noqa: E501

        :param store_id: The store_id of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._store_id = store_id

    @property
    def oldest_portion_meta_version(self):
        """Gets the oldest_portion_meta_version of this EventsMetricsGet.  # noqa: E501

        The oldestportionmetaversion.  # noqa: E501

        :return: The oldest_portion_meta_version of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._oldest_portion_meta_version

    @oldest_portion_meta_version.setter
    def oldest_portion_meta_version(self, oldest_portion_meta_version):
        """Sets the oldest_portion_meta_version of this EventsMetricsGet.

        The oldestportionmetaversion.  # noqa: E501

        :param oldest_portion_meta_version: The oldest_portion_meta_version of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._oldest_portion_meta_version = oldest_portion_meta_version

    @property
    def oldest_container_meta_version(self):
        """Gets the oldest_container_meta_version of this EventsMetricsGet.  # noqa: E501

        The oldestcontainermetaversion.  # noqa: E501

        :return: The oldest_container_meta_version of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._oldest_container_meta_version

    @oldest_container_meta_version.setter
    def oldest_container_meta_version(self, oldest_container_meta_version):
        """Sets the oldest_container_meta_version of this EventsMetricsGet.

        The oldestcontainermetaversion.  # noqa: E501

        :param oldest_container_meta_version: The oldest_container_meta_version of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._oldest_container_meta_version = oldest_container_meta_version

    @property
    def file_system_check_required(self):
        """Gets the file_system_check_required of this EventsMetricsGet.  # noqa: E501

        The filesystemcheckrequired.  # noqa: E501

        :return: The file_system_check_required of this EventsMetricsGet.  # noqa: E501
        :rtype: bool
        """
        return self._file_system_check_required

    @file_system_check_required.setter
    def file_system_check_required(self, file_system_check_required):
        """Sets the file_system_check_required of this EventsMetricsGet.

        The filesystemcheckrequired.  # noqa: E501

        :param file_system_check_required: The file_system_check_required of this EventsMetricsGet.  # noqa: E501
        :type: bool
        """

        self._file_system_check_required = file_system_check_required

    @property
    def store_recovery_count(self):
        """Gets the store_recovery_count of this EventsMetricsGet.  # noqa: E501

        The storerecoverycount.  # noqa: E501

        :return: The store_recovery_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._store_recovery_count

    @store_recovery_count.setter
    def store_recovery_count(self, store_recovery_count):
        """Sets the store_recovery_count of this EventsMetricsGet.

        The storerecoverycount.  # noqa: E501

        :param store_recovery_count: The store_recovery_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._store_recovery_count = store_recovery_count

    @property
    def file_system_retry_count(self):
        """Gets the file_system_retry_count of this EventsMetricsGet.  # noqa: E501

        The filesystemretrycount.  # noqa: E501

        :return: The file_system_retry_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._file_system_retry_count

    @file_system_retry_count.setter
    def file_system_retry_count(self, file_system_retry_count):
        """Sets the file_system_retry_count of this EventsMetricsGet.

        The filesystemretrycount.  # noqa: E501

        :param file_system_retry_count: The file_system_retry_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._file_system_retry_count = file_system_retry_count

    @property
    def integrity_error_code(self):
        """Gets the integrity_error_code of this EventsMetricsGet.  # noqa: E501

        The integrityerrorcode.  # noqa: E501

        :return: The integrity_error_code of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._integrity_error_code

    @integrity_error_code.setter
    def integrity_error_code(self, integrity_error_code):
        """Sets the integrity_error_code of this EventsMetricsGet.

        The integrityerrorcode.  # noqa: E501

        :param integrity_error_code: The integrity_error_code of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._integrity_error_code = integrity_error_code

    @property
    def integrity_source_line_number(self):
        """Gets the integrity_source_line_number of this EventsMetricsGet.  # noqa: E501

        The integritysourcelinenumber.  # noqa: E501

        :return: The integrity_source_line_number of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._integrity_source_line_number

    @integrity_source_line_number.setter
    def integrity_source_line_number(self, integrity_source_line_number):
        """Sets the integrity_source_line_number of this EventsMetricsGet.

        The integritysourcelinenumber.  # noqa: E501

        :param integrity_source_line_number: The integrity_source_line_number of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._integrity_source_line_number = integrity_source_line_number

    @property
    def missing_store_meta_count(self):
        """Gets the missing_store_meta_count of this EventsMetricsGet.  # noqa: E501

        The missingstoremetacount.  # noqa: E501

        :return: The missing_store_meta_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._missing_store_meta_count

    @missing_store_meta_count.setter
    def missing_store_meta_count(self, missing_store_meta_count):
        """Sets the missing_store_meta_count of this EventsMetricsGet.

        The missingstoremetacount.  # noqa: E501

        :param missing_store_meta_count: The missing_store_meta_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._missing_store_meta_count = missing_store_meta_count

    @property
    def missing_item_meta_count(self):
        """Gets the missing_item_meta_count of this EventsMetricsGet.  # noqa: E501

        The missingitemmetacount.  # noqa: E501

        :return: The missing_item_meta_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._missing_item_meta_count

    @missing_item_meta_count.setter
    def missing_item_meta_count(self, missing_item_meta_count):
        """Sets the missing_item_meta_count of this EventsMetricsGet.

        The missingitemmetacount.  # noqa: E501

        :param missing_item_meta_count: The missing_item_meta_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._missing_item_meta_count = missing_item_meta_count

    @property
    def missing_item_version_meta_count(self):
        """Gets the missing_item_version_meta_count of this EventsMetricsGet.  # noqa: E501

        The missingitemversionmetacount.  # noqa: E501

        :return: The missing_item_version_meta_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._missing_item_version_meta_count

    @missing_item_version_meta_count.setter
    def missing_item_version_meta_count(self, missing_item_version_meta_count):
        """Sets the missing_item_version_meta_count of this EventsMetricsGet.

        The missingitemversionmetacount.  # noqa: E501

        :param missing_item_version_meta_count: The missing_item_version_meta_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._missing_item_version_meta_count = missing_item_version_meta_count

    @property
    def missing_portion_meta_count(self):
        """Gets the missing_portion_meta_count of this EventsMetricsGet.  # noqa: E501

        The missingportionmetacount.  # noqa: E501

        :return: The missing_portion_meta_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._missing_portion_meta_count

    @missing_portion_meta_count.setter
    def missing_portion_meta_count(self, missing_portion_meta_count):
        """Sets the missing_portion_meta_count of this EventsMetricsGet.

        The missingportionmetacount.  # noqa: E501

        :param missing_portion_meta_count: The missing_portion_meta_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._missing_portion_meta_count = missing_portion_meta_count

    @property
    def missing_container_index_count(self):
        """Gets the missing_container_index_count of this EventsMetricsGet.  # noqa: E501

        The missingcontainerindexcount.  # noqa: E501

        :return: The missing_container_index_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._missing_container_index_count

    @missing_container_index_count.setter
    def missing_container_index_count(self, missing_container_index_count):
        """Sets the missing_container_index_count of this EventsMetricsGet.

        The missingcontainerindexcount.  # noqa: E501

        :param missing_container_index_count: The missing_container_index_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._missing_container_index_count = missing_container_index_count

    @property
    def missing_container_data_count(self):
        """Gets the missing_container_data_count of this EventsMetricsGet.  # noqa: E501

        The missingcontainerdatacount.  # noqa: E501

        :return: The missing_container_data_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._missing_container_data_count

    @missing_container_data_count.setter
    def missing_container_data_count(self, missing_container_data_count):
        """Sets the missing_container_data_count of this EventsMetricsGet.

        The missingcontainerdatacount.  # noqa: E501

        :param missing_container_data_count: The missing_container_data_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._missing_container_data_count = missing_container_data_count

    @property
    def corrupt_store_meta_count(self):
        """Gets the corrupt_store_meta_count of this EventsMetricsGet.  # noqa: E501

        The corruptstoremetacount.  # noqa: E501

        :return: The corrupt_store_meta_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._corrupt_store_meta_count

    @corrupt_store_meta_count.setter
    def corrupt_store_meta_count(self, corrupt_store_meta_count):
        """Sets the corrupt_store_meta_count of this EventsMetricsGet.

        The corruptstoremetacount.  # noqa: E501

        :param corrupt_store_meta_count: The corrupt_store_meta_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._corrupt_store_meta_count = corrupt_store_meta_count

    @property
    def corrupt_item_meta_count(self):
        """Gets the corrupt_item_meta_count of this EventsMetricsGet.  # noqa: E501

        The corruptitemmetacount.  # noqa: E501

        :return: The corrupt_item_meta_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._corrupt_item_meta_count

    @corrupt_item_meta_count.setter
    def corrupt_item_meta_count(self, corrupt_item_meta_count):
        """Sets the corrupt_item_meta_count of this EventsMetricsGet.

        The corruptitemmetacount.  # noqa: E501

        :param corrupt_item_meta_count: The corrupt_item_meta_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._corrupt_item_meta_count = corrupt_item_meta_count

    @property
    def corrupt_item_version_meta_count(self):
        """Gets the corrupt_item_version_meta_count of this EventsMetricsGet.  # noqa: E501

        The corruptitemversionmetacount.  # noqa: E501

        :return: The corrupt_item_version_meta_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._corrupt_item_version_meta_count

    @corrupt_item_version_meta_count.setter
    def corrupt_item_version_meta_count(self, corrupt_item_version_meta_count):
        """Sets the corrupt_item_version_meta_count of this EventsMetricsGet.

        The corruptitemversionmetacount.  # noqa: E501

        :param corrupt_item_version_meta_count: The corrupt_item_version_meta_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._corrupt_item_version_meta_count = corrupt_item_version_meta_count

    @property
    def corrupt_portion_meta_count(self):
        """Gets the corrupt_portion_meta_count of this EventsMetricsGet.  # noqa: E501

        The corruptportionmetacount.  # noqa: E501

        :return: The corrupt_portion_meta_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._corrupt_portion_meta_count

    @corrupt_portion_meta_count.setter
    def corrupt_portion_meta_count(self, corrupt_portion_meta_count):
        """Sets the corrupt_portion_meta_count of this EventsMetricsGet.

        The corruptportionmetacount.  # noqa: E501

        :param corrupt_portion_meta_count: The corrupt_portion_meta_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._corrupt_portion_meta_count = corrupt_portion_meta_count

    @property
    def corrupt_container_index_count(self):
        """Gets the corrupt_container_index_count of this EventsMetricsGet.  # noqa: E501

        The corruptcontainerindexcount.  # noqa: E501

        :return: The corrupt_container_index_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._corrupt_container_index_count

    @corrupt_container_index_count.setter
    def corrupt_container_index_count(self, corrupt_container_index_count):
        """Sets the corrupt_container_index_count of this EventsMetricsGet.

        The corruptcontainerindexcount.  # noqa: E501

        :param corrupt_container_index_count: The corrupt_container_index_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._corrupt_container_index_count = corrupt_container_index_count

    @property
    def corrupt_container_data_count(self):
        """Gets the corrupt_container_data_count of this EventsMetricsGet.  # noqa: E501

        The corruptcontainerdatacount.  # noqa: E501

        :return: The corrupt_container_data_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._corrupt_container_data_count

    @corrupt_container_data_count.setter
    def corrupt_container_data_count(self, corrupt_container_data_count):
        """Sets the corrupt_container_data_count of this EventsMetricsGet.

        The corruptcontainerdatacount.  # noqa: E501

        :param corrupt_container_data_count: The corrupt_container_data_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._corrupt_container_data_count = corrupt_container_data_count

    @property
    def store_meta_recovery_count(self):
        """Gets the store_meta_recovery_count of this EventsMetricsGet.  # noqa: E501

        The storemetarecoverycount.  # noqa: E501

        :return: The store_meta_recovery_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._store_meta_recovery_count

    @store_meta_recovery_count.setter
    def store_meta_recovery_count(self, store_meta_recovery_count):
        """Sets the store_meta_recovery_count of this EventsMetricsGet.

        The storemetarecoverycount.  # noqa: E501

        :param store_meta_recovery_count: The store_meta_recovery_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._store_meta_recovery_count = store_meta_recovery_count

    @property
    def item_meta_recovery_count(self):
        """Gets the item_meta_recovery_count of this EventsMetricsGet.  # noqa: E501

        The itemmetarecoverycount.  # noqa: E501

        :return: The item_meta_recovery_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._item_meta_recovery_count

    @item_meta_recovery_count.setter
    def item_meta_recovery_count(self, item_meta_recovery_count):
        """Sets the item_meta_recovery_count of this EventsMetricsGet.

        The itemmetarecoverycount.  # noqa: E501

        :param item_meta_recovery_count: The item_meta_recovery_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._item_meta_recovery_count = item_meta_recovery_count

    @property
    def container_data_checksum_recovery_count(self):
        """Gets the container_data_checksum_recovery_count of this EventsMetricsGet.  # noqa: E501

        The containerdatachecksumrecoverycount.  # noqa: E501

        :return: The container_data_checksum_recovery_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._container_data_checksum_recovery_count

    @container_data_checksum_recovery_count.setter
    def container_data_checksum_recovery_count(self, container_data_checksum_recovery_count):
        """Sets the container_data_checksum_recovery_count of this EventsMetricsGet.

        The containerdatachecksumrecoverycount.  # noqa: E501

        :param container_data_checksum_recovery_count: The container_data_checksum_recovery_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._container_data_checksum_recovery_count = container_data_checksum_recovery_count

    @property
    def multiple_active_hk_jobs_count(self):
        """Gets the multiple_active_hk_jobs_count of this EventsMetricsGet.  # noqa: E501

        The multipleactivehkjobscount.  # noqa: E501

        :return: The multiple_active_hk_jobs_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._multiple_active_hk_jobs_count

    @multiple_active_hk_jobs_count.setter
    def multiple_active_hk_jobs_count(self, multiple_active_hk_jobs_count):
        """Sets the multiple_active_hk_jobs_count of this EventsMetricsGet.

        The multipleactivehkjobscount.  # noqa: E501

        :param multiple_active_hk_jobs_count: The multiple_active_hk_jobs_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._multiple_active_hk_jobs_count = multiple_active_hk_jobs_count

    @property
    def multiple_active_hk_jobs_size_on_disk_bytes(self):
        """Gets the multiple_active_hk_jobs_size_on_disk_bytes of this EventsMetricsGet.  # noqa: E501

        The multipleactivehkjobssizeondisk.  # noqa: E501

        :return: The multiple_active_hk_jobs_size_on_disk_bytes of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._multiple_active_hk_jobs_size_on_disk_bytes

    @multiple_active_hk_jobs_size_on_disk_bytes.setter
    def multiple_active_hk_jobs_size_on_disk_bytes(self, multiple_active_hk_jobs_size_on_disk_bytes):
        """Sets the multiple_active_hk_jobs_size_on_disk_bytes of this EventsMetricsGet.

        The multipleactivehkjobssizeondisk.  # noqa: E501

        :param multiple_active_hk_jobs_size_on_disk_bytes: The multiple_active_hk_jobs_size_on_disk_bytes of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._multiple_active_hk_jobs_size_on_disk_bytes = multiple_active_hk_jobs_size_on_disk_bytes

    @property
    def hash_zero_chunk_ref_count(self):
        """Gets the hash_zero_chunk_ref_count of this EventsMetricsGet.  # noqa: E501

        The hashzerochunkrefcount.  # noqa: E501

        :return: The hash_zero_chunk_ref_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._hash_zero_chunk_ref_count

    @hash_zero_chunk_ref_count.setter
    def hash_zero_chunk_ref_count(self, hash_zero_chunk_ref_count):
        """Sets the hash_zero_chunk_ref_count of this EventsMetricsGet.

        The hashzerochunkrefcount.  # noqa: E501

        :param hash_zero_chunk_ref_count: The hash_zero_chunk_ref_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._hash_zero_chunk_ref_count = hash_zero_chunk_ref_count

    @property
    def hash_zero_chunk_ref_job_size_on_disk_bytes(self):
        """Gets the hash_zero_chunk_ref_job_size_on_disk_bytes of this EventsMetricsGet.  # noqa: E501

        The hashzerochunkrefjobsizeondisk.  # noqa: E501

        :return: The hash_zero_chunk_ref_job_size_on_disk_bytes of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._hash_zero_chunk_ref_job_size_on_disk_bytes

    @hash_zero_chunk_ref_job_size_on_disk_bytes.setter
    def hash_zero_chunk_ref_job_size_on_disk_bytes(self, hash_zero_chunk_ref_job_size_on_disk_bytes):
        """Sets the hash_zero_chunk_ref_job_size_on_disk_bytes of this EventsMetricsGet.

        The hashzerochunkrefjobsizeondisk.  # noqa: E501

        :param hash_zero_chunk_ref_job_size_on_disk_bytes: The hash_zero_chunk_ref_job_size_on_disk_bytes of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._hash_zero_chunk_ref_job_size_on_disk_bytes = hash_zero_chunk_ref_job_size_on_disk_bytes

    @property
    def hash_negative_chunk_ref_count(self):
        """Gets the hash_negative_chunk_ref_count of this EventsMetricsGet.  # noqa: E501

        The hashnegativechunkrefcount.  # noqa: E501

        :return: The hash_negative_chunk_ref_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._hash_negative_chunk_ref_count

    @hash_negative_chunk_ref_count.setter
    def hash_negative_chunk_ref_count(self, hash_negative_chunk_ref_count):
        """Sets the hash_negative_chunk_ref_count of this EventsMetricsGet.

        The hashnegativechunkrefcount.  # noqa: E501

        :param hash_negative_chunk_ref_count: The hash_negative_chunk_ref_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._hash_negative_chunk_ref_count = hash_negative_chunk_ref_count

    @property
    def hash_negative_chunk_ref_job_size_on_disk_bytes(self):
        """Gets the hash_negative_chunk_ref_job_size_on_disk_bytes of this EventsMetricsGet.  # noqa: E501

        The hashnegativechunkrefjobsizeondisk.  # noqa: E501

        :return: The hash_negative_chunk_ref_job_size_on_disk_bytes of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._hash_negative_chunk_ref_job_size_on_disk_bytes

    @hash_negative_chunk_ref_job_size_on_disk_bytes.setter
    def hash_negative_chunk_ref_job_size_on_disk_bytes(self, hash_negative_chunk_ref_job_size_on_disk_bytes):
        """Sets the hash_negative_chunk_ref_job_size_on_disk_bytes of this EventsMetricsGet.

        The hashnegativechunkrefjobsizeondisk.  # noqa: E501

        :param hash_negative_chunk_ref_job_size_on_disk_bytes: The hash_negative_chunk_ref_job_size_on_disk_bytes of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._hash_negative_chunk_ref_job_size_on_disk_bytes = hash_negative_chunk_ref_job_size_on_disk_bytes

    @property
    def quarantined_job_count(self):
        """Gets the quarantined_job_count of this EventsMetricsGet.  # noqa: E501

        The quarantinedjobcount.  # noqa: E501

        :return: The quarantined_job_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._quarantined_job_count

    @quarantined_job_count.setter
    def quarantined_job_count(self, quarantined_job_count):
        """Sets the quarantined_job_count of this EventsMetricsGet.

        The quarantinedjobcount.  # noqa: E501

        :param quarantined_job_count: The quarantined_job_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._quarantined_job_count = quarantined_job_count

    @property
    def quarantined_size_on_disk_bytes(self):
        """Gets the quarantined_size_on_disk_bytes of this EventsMetricsGet.  # noqa: E501

        The quarantinedsizeondisk.  # noqa: E501

        :return: The quarantined_size_on_disk_bytes of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._quarantined_size_on_disk_bytes

    @quarantined_size_on_disk_bytes.setter
    def quarantined_size_on_disk_bytes(self, quarantined_size_on_disk_bytes):
        """Sets the quarantined_size_on_disk_bytes of this EventsMetricsGet.

        The quarantinedsizeondisk.  # noqa: E501

        :param quarantined_size_on_disk_bytes: The quarantined_size_on_disk_bytes of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._quarantined_size_on_disk_bytes = quarantined_size_on_disk_bytes

    @property
    def empty_item_dir_count(self):
        """Gets the empty_item_dir_count of this EventsMetricsGet.  # noqa: E501

        The emptyitemdircount.  # noqa: E501

        :return: The empty_item_dir_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._empty_item_dir_count

    @empty_item_dir_count.setter
    def empty_item_dir_count(self, empty_item_dir_count):
        """Sets the empty_item_dir_count of this EventsMetricsGet.

        The emptyitemdircount.  # noqa: E501

        :param empty_item_dir_count: The empty_item_dir_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._empty_item_dir_count = empty_item_dir_count

    @property
    def empty_portion_dir_count(self):
        """Gets the empty_portion_dir_count of this EventsMetricsGet.  # noqa: E501

        The emptyportiondircount.  # noqa: E501

        :return: The empty_portion_dir_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._empty_portion_dir_count

    @empty_portion_dir_count.setter
    def empty_portion_dir_count(self, empty_portion_dir_count):
        """Sets the empty_portion_dir_count of this EventsMetricsGet.

        The emptyportiondircount.  # noqa: E501

        :param empty_portion_dir_count: The empty_portion_dir_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._empty_portion_dir_count = empty_portion_dir_count

    @property
    def empty_container_index_dir_count(self):
        """Gets the empty_container_index_dir_count of this EventsMetricsGet.  # noqa: E501

        The emptycontainerindexdircount.  # noqa: E501

        :return: The empty_container_index_dir_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._empty_container_index_dir_count

    @empty_container_index_dir_count.setter
    def empty_container_index_dir_count(self, empty_container_index_dir_count):
        """Sets the empty_container_index_dir_count of this EventsMetricsGet.

        The emptycontainerindexdircount.  # noqa: E501

        :param empty_container_index_dir_count: The empty_container_index_dir_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._empty_container_index_dir_count = empty_container_index_dir_count

    @property
    def empty_container_data_dir_count(self):
        """Gets the empty_container_data_dir_count of this EventsMetricsGet.  # noqa: E501

        The emptycontainerdatadircount.  # noqa: E501

        :return: The empty_container_data_dir_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._empty_container_data_dir_count

    @empty_container_data_dir_count.setter
    def empty_container_data_dir_count(self, empty_container_data_dir_count):
        """Sets the empty_container_data_dir_count of this EventsMetricsGet.

        The emptycontainerdatadircount.  # noqa: E501

        :param empty_container_data_dir_count: The empty_container_data_dir_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._empty_container_data_dir_count = empty_container_data_dir_count

    @property
    def zero_ref_chunk_match_count(self):
        """Gets the zero_ref_chunk_match_count of this EventsMetricsGet.  # noqa: E501

        The zerorefchunkmatchcount.  # noqa: E501

        :return: The zero_ref_chunk_match_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._zero_ref_chunk_match_count

    @zero_ref_chunk_match_count.setter
    def zero_ref_chunk_match_count(self, zero_ref_chunk_match_count):
        """Sets the zero_ref_chunk_match_count of this EventsMetricsGet.

        The zerorefchunkmatchcount.  # noqa: E501

        :param zero_ref_chunk_match_count: The zero_ref_chunk_match_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._zero_ref_chunk_match_count = zero_ref_chunk_match_count

    @property
    def integrity_failure_count(self):
        """Gets the integrity_failure_count of this EventsMetricsGet.  # noqa: E501

        The integrityfailurecount.  # noqa: E501

        :return: The integrity_failure_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._integrity_failure_count

    @integrity_failure_count.setter
    def integrity_failure_count(self, integrity_failure_count):
        """Sets the integrity_failure_count of this EventsMetricsGet.

        The integrityfailurecount.  # noqa: E501

        :param integrity_failure_count: The integrity_failure_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._integrity_failure_count = integrity_failure_count

    @property
    def message_recovery_integrity_failure_count(self):
        """Gets the message_recovery_integrity_failure_count of this EventsMetricsGet.  # noqa: E501

        The messagerecoveryintegrityfailurecount.  # noqa: E501

        :return: The message_recovery_integrity_failure_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._message_recovery_integrity_failure_count

    @message_recovery_integrity_failure_count.setter
    def message_recovery_integrity_failure_count(self, message_recovery_integrity_failure_count):
        """Sets the message_recovery_integrity_failure_count of this EventsMetricsGet.

        The messagerecoveryintegrityfailurecount.  # noqa: E501

        :param message_recovery_integrity_failure_count: The message_recovery_integrity_failure_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._message_recovery_integrity_failure_count = message_recovery_integrity_failure_count

    @property
    def queue_recovery_integrity_failure_count(self):
        """Gets the queue_recovery_integrity_failure_count of this EventsMetricsGet.  # noqa: E501

        The queuerecoveryintegrityfailurecount.  # noqa: E501

        :return: The queue_recovery_integrity_failure_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._queue_recovery_integrity_failure_count

    @queue_recovery_integrity_failure_count.setter
    def queue_recovery_integrity_failure_count(self, queue_recovery_integrity_failure_count):
        """Sets the queue_recovery_integrity_failure_count of this EventsMetricsGet.

        The queuerecoveryintegrityfailurecount.  # noqa: E501

        :param queue_recovery_integrity_failure_count: The queue_recovery_integrity_failure_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._queue_recovery_integrity_failure_count = queue_recovery_integrity_failure_count

    @property
    def process_job_integrity_failure_count(self):
        """Gets the process_job_integrity_failure_count of this EventsMetricsGet.  # noqa: E501

        The processjobintegrityfailurecount.  # noqa: E501

        :return: The process_job_integrity_failure_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._process_job_integrity_failure_count

    @process_job_integrity_failure_count.setter
    def process_job_integrity_failure_count(self, process_job_integrity_failure_count):
        """Sets the process_job_integrity_failure_count of this EventsMetricsGet.

        The processjobintegrityfailurecount.  # noqa: E501

        :param process_job_integrity_failure_count: The process_job_integrity_failure_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._process_job_integrity_failure_count = process_job_integrity_failure_count

    @property
    def quarantined_container_count(self):
        """Gets the quarantined_container_count of this EventsMetricsGet.  # noqa: E501

        The quarantinedcontainercount.  # noqa: E501

        :return: The quarantined_container_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._quarantined_container_count

    @quarantined_container_count.setter
    def quarantined_container_count(self, quarantined_container_count):
        """Sets the quarantined_container_count of this EventsMetricsGet.

        The quarantinedcontainercount.  # noqa: E501

        :param quarantined_container_count: The quarantined_container_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._quarantined_container_count = quarantined_container_count

    @property
    def affected_container_blobs_count(self):
        """Gets the affected_container_blobs_count of this EventsMetricsGet.  # noqa: E501

        The affectedcontainerblobscount.  # noqa: E501

        :return: The affected_container_blobs_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._affected_container_blobs_count

    @affected_container_blobs_count.setter
    def affected_container_blobs_count(self, affected_container_blobs_count):
        """Sets the affected_container_blobs_count of this EventsMetricsGet.

        The affectedcontainerblobscount.  # noqa: E501

        :param affected_container_blobs_count: The affected_container_blobs_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._affected_container_blobs_count = affected_container_blobs_count

    @property
    def integrity_event_warning_level_count(self):
        """Gets the integrity_event_warning_level_count of this EventsMetricsGet.  # noqa: E501

        The integrity event warning count.  # noqa: E501

        :return: The integrity_event_warning_level_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._integrity_event_warning_level_count

    @integrity_event_warning_level_count.setter
    def integrity_event_warning_level_count(self, integrity_event_warning_level_count):
        """Sets the integrity_event_warning_level_count of this EventsMetricsGet.

        The integrity event warning count.  # noqa: E501

        :param integrity_event_warning_level_count: The integrity_event_warning_level_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._integrity_event_warning_level_count = integrity_event_warning_level_count

    @property
    def integrity_event_error_level_count(self):
        """Gets the integrity_event_error_level_count of this EventsMetricsGet.  # noqa: E501

        The integrity event error count.  # noqa: E501

        :return: The integrity_event_error_level_count of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._integrity_event_error_level_count

    @integrity_event_error_level_count.setter
    def integrity_event_error_level_count(self, integrity_event_error_level_count):
        """Sets the integrity_event_error_level_count of this EventsMetricsGet.

        The integrity event error count.  # noqa: E501

        :param integrity_event_error_level_count: The integrity_event_error_level_count of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._integrity_event_error_level_count = integrity_event_error_level_count

    @property
    def integrity_fail_file(self):
        """Gets the integrity_fail_file of this EventsMetricsGet.  # noqa: E501

        The integrity fail file.  # noqa: E501

        :return: The integrity_fail_file of this EventsMetricsGet.  # noqa: E501
        :rtype: str
        """
        return self._integrity_fail_file

    @integrity_fail_file.setter
    def integrity_fail_file(self, integrity_fail_file):
        """Sets the integrity_fail_file of this EventsMetricsGet.

        The integrity fail file.  # noqa: E501

        :param integrity_fail_file: The integrity_fail_file of this EventsMetricsGet.  # noqa: E501
        :type: str
        """

        self._integrity_fail_file = integrity_fail_file

    @property
    def integrity_source_file(self):
        """Gets the integrity_source_file of this EventsMetricsGet.  # noqa: E501

        The integrity source file.  # noqa: E501

        :return: The integrity_source_file of this EventsMetricsGet.  # noqa: E501
        :rtype: str
        """
        return self._integrity_source_file

    @integrity_source_file.setter
    def integrity_source_file(self, integrity_source_file):
        """Sets the integrity_source_file of this EventsMetricsGet.

        The integrity source file.  # noqa: E501

        :param integrity_source_file: The integrity_source_file of this EventsMetricsGet.  # noqa: E501
        :type: str
        """

        self._integrity_source_file = integrity_source_file

    @property
    def store_revision_history(self):
        """Gets the store_revision_history of this EventsMetricsGet.  # noqa: E501

        The store revision history.  # noqa: E501

        :return: The store_revision_history of this EventsMetricsGet.  # noqa: E501
        :rtype: str
        """
        return self._store_revision_history

    @store_revision_history.setter
    def store_revision_history(self, store_revision_history):
        """Sets the store_revision_history of this EventsMetricsGet.

        The store revision history.  # noqa: E501

        :param store_revision_history: The store_revision_history of this EventsMetricsGet.  # noqa: E501
        :type: str
        """

        self._store_revision_history = store_revision_history

    @property
    def hkthreads_min(self):
        """Gets the hkthreads_min of this EventsMetricsGet.  # noqa: E501

        The hkthreadsmin.  # noqa: E501

        :return: The hkthreads_min of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._hkthreads_min

    @hkthreads_min.setter
    def hkthreads_min(self, hkthreads_min):
        """Sets the hkthreads_min of this EventsMetricsGet.

        The hkthreadsmin.  # noqa: E501

        :param hkthreads_min: The hkthreads_min of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._hkthreads_min = hkthreads_min

    @property
    def hkthreads_max(self):
        """Gets the hkthreads_max of this EventsMetricsGet.  # noqa: E501

        The hkthreadsmax.  # noqa: E501

        :return: The hkthreads_max of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._hkthreads_max

    @hkthreads_max.setter
    def hkthreads_max(self, hkthreads_max):
        """Sets the hkthreads_max of this EventsMetricsGet.

        The hkthreadsmax.  # noqa: E501

        :param hkthreads_max: The hkthreads_max of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._hkthreads_max = hkthreads_max

    @property
    def hkthreads_avg(self):
        """Gets the hkthreads_avg of this EventsMetricsGet.  # noqa: E501

        The hkthreadsavg.  # noqa: E501

        :return: The hkthreads_avg of this EventsMetricsGet.  # noqa: E501
        :rtype: int
        """
        return self._hkthreads_avg

    @hkthreads_avg.setter
    def hkthreads_avg(self, hkthreads_avg):
        """Sets the hkthreads_avg of this EventsMetricsGet.

        The hkthreadsavg.  # noqa: E501

        :param hkthreads_avg: The hkthreads_avg of this EventsMetricsGet.  # noqa: E501
        :type: int
        """

        self._hkthreads_avg = hkthreads_avg

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EventsMetricsGet, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EventsMetricsGet):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
